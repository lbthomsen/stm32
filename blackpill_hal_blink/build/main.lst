ARM GAS  /tmp/cczKDObK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cczKDObK.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/cczKDObK.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART1_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c ****   /* USER CODE END 3 */
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief System Clock Configuration
 108:Core/Src/main.c ****   * @retval None
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** void SystemClock_Config(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 118:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cczKDObK.s 			page 4


 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** /**
 150:Core/Src/main.c ****   * @brief USART1 Initialization Function
 151:Core/Src/main.c ****   * @param None
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 164:Core/Src/main.c ****   huart1.Instance = USART1;
 165:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 166:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 167:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 168:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 169:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 170:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 171:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 172:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief GPIO Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_GPIO_Init(void)
 188:Core/Src/main.c **** {
  28              		.loc 1 188 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 189:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/cczKDObK.s 			page 5


  41              		.loc 1 189 3 view .LVU1
  42              		.loc 1 189 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 192:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 192 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 192 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 192 3 view .LVU5
  54 0012 194B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 192 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 192 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 192 3 view .LVU8
 193:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 193 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 193 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 193 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 193 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 193 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 193 3 view .LVU14
 194:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 194 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 194 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 194 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 194 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/cczKDObK.s 			page 6


  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 194 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 194 3 view .LVU20
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 197:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  98              		.loc 1 197 3 view .LVU21
  99 004e 0B4D     		ldr	r5, .L3+4
 100 0050 0122     		movs	r2, #1
 101 0052 4FF40051 		mov	r1, #8192
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 200:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 105              		.loc 1 200 3 view .LVU22
 106              		.loc 1 200 23 is_stmt 0 view .LVU23
 107 005c 4FF40053 		mov	r3, #8192
 108 0060 0393     		str	r3, [sp, #12]
 201:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 109              		.loc 1 201 3 is_stmt 1 view .LVU24
 110              		.loc 1 201 24 is_stmt 0 view .LVU25
 111 0062 1123     		movs	r3, #17
 112 0064 0493     		str	r3, [sp, #16]
 202:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 202 3 is_stmt 1 view .LVU26
 114              		.loc 1 202 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 203:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 203 3 is_stmt 1 view .LVU28
 117              		.loc 1 203 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 204:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 119              		.loc 1 204 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** }
 124              		.loc 1 206 1 is_stmt 0 view .LVU31
 125 0072 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0074 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0076 00BF     		.align	2
 132              	.L3:
 133 0078 00380240 		.word	1073887232
 134 007c 00080240 		.word	1073874944
 135              		.cfi_endproc
 136              	.LFE133:
 138              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/cczKDObK.s 			page 7


 139              		.align	1
 140              		.global	Error_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	Error_Handler:
 147              	.LFB134:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /* USER CODE END 4 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** void Error_Handler(void)
 217:Core/Src/main.c **** {
 148              		.loc 1 217 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 218:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 219:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 220:Core/Src/main.c ****   __disable_irq();
 154              		.loc 1 220 3 view .LVU33
 155              	.LBB7:
 156              	.LBI7:
 157              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/cczKDObK.s 			page 8


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  /tmp/cczKDObK.s 			page 9


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cczKDObK.s 			page 10


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 158              		.loc 2 140 27 view .LVU34
 159              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 160              		.loc 2 142 3 view .LVU35
 161              		.syntax unified
 162              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0000 72B6     		cpsid i
 164              	@ 0 "" 2
 165              		.thumb
 166              		.syntax unified
 167              	.L6:
 168              	.LBE8:
 169              	.LBE7:
 221:Core/Src/main.c ****   while (1)
 170              		.loc 1 221 3 discriminator 1 view .LVU36
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****   }
 171              		.loc 1 223 3 discriminator 1 view .LVU37
 221:Core/Src/main.c ****   while (1)
 172              		.loc 1 221 9 discriminator 1 view .LVU38
 173 0002 FEE7     		b	.L6
 174              		.cfi_endproc
 175              	.LFE134:
 177              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	MX_USART1_UART_Init:
 185              	.LFB132:
 155:Core/Src/main.c **** 
 186              		.loc 1 155 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 08B5     		push	{r3, lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
 164:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 195              		.loc 1 164 3 view .LVU40
 164:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 196              		.loc 1 164 19 is_stmt 0 view .LVU41
 197 0002 0A48     		ldr	r0, .L11
 198 0004 0A4B     		ldr	r3, .L11+4
 199 0006 0360     		str	r3, [r0]
 165:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 200              		.loc 1 165 3 is_stmt 1 view .LVU42
 165:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 201              		.loc 1 165 24 is_stmt 0 view .LVU43
 202 0008 4FF4E133 		mov	r3, #115200
 203 000c 4360     		str	r3, [r0, #4]
 166:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/cczKDObK.s 			page 11


 204              		.loc 1 166 3 is_stmt 1 view .LVU44
 166:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 205              		.loc 1 166 26 is_stmt 0 view .LVU45
 206 000e 0023     		movs	r3, #0
 207 0010 8360     		str	r3, [r0, #8]
 167:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 208              		.loc 1 167 3 is_stmt 1 view .LVU46
 167:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 209              		.loc 1 167 24 is_stmt 0 view .LVU47
 210 0012 C360     		str	r3, [r0, #12]
 168:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 211              		.loc 1 168 3 is_stmt 1 view .LVU48
 168:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 212              		.loc 1 168 22 is_stmt 0 view .LVU49
 213 0014 0361     		str	r3, [r0, #16]
 169:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 214              		.loc 1 169 3 is_stmt 1 view .LVU50
 169:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 215              		.loc 1 169 20 is_stmt 0 view .LVU51
 216 0016 0C22     		movs	r2, #12
 217 0018 4261     		str	r2, [r0, #20]
 170:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 218              		.loc 1 170 3 is_stmt 1 view .LVU52
 170:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 219              		.loc 1 170 25 is_stmt 0 view .LVU53
 220 001a 8361     		str	r3, [r0, #24]
 171:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 221              		.loc 1 171 3 is_stmt 1 view .LVU54
 171:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 222              		.loc 1 171 28 is_stmt 0 view .LVU55
 223 001c C361     		str	r3, [r0, #28]
 172:Core/Src/main.c ****   {
 224              		.loc 1 172 3 is_stmt 1 view .LVU56
 172:Core/Src/main.c ****   {
 225              		.loc 1 172 7 is_stmt 0 view .LVU57
 226 001e FFF7FEFF 		bl	HAL_UART_Init
 227              	.LVL2:
 172:Core/Src/main.c ****   {
 228              		.loc 1 172 6 view .LVU58
 229 0022 00B9     		cbnz	r0, .L10
 180:Core/Src/main.c **** 
 230              		.loc 1 180 1 view .LVU59
 231 0024 08BD     		pop	{r3, pc}
 232              	.L10:
 174:Core/Src/main.c ****   }
 233              		.loc 1 174 5 is_stmt 1 view .LVU60
 234 0026 FFF7FEFF 		bl	Error_Handler
 235              	.LVL3:
 236              	.L12:
 237 002a 00BF     		.align	2
 238              	.L11:
 239 002c 00000000 		.word	.LANCHOR0
 240 0030 00100140 		.word	1073811456
 241              		.cfi_endproc
 242              	.LFE132:
 244              		.section	.text.SystemClock_Config,"ax",%progbits
 245              		.align	1
ARM GAS  /tmp/cczKDObK.s 			page 12


 246              		.global	SystemClock_Config
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
 252              	SystemClock_Config:
 253              	.LFB131:
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 254              		.loc 1 111 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 80
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 00B5     		push	{lr}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 14, -4
 262 0002 95B0     		sub	sp, sp, #84
 263              	.LCFI5:
 264              		.cfi_def_cfa_offset 88
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 265              		.loc 1 112 3 view .LVU62
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 266              		.loc 1 112 22 is_stmt 0 view .LVU63
 267 0004 3022     		movs	r2, #48
 268 0006 0021     		movs	r1, #0
 269 0008 08A8     		add	r0, sp, #32
 270 000a FFF7FEFF 		bl	memset
 271              	.LVL4:
 113:Core/Src/main.c **** 
 272              		.loc 1 113 3 is_stmt 1 view .LVU64
 113:Core/Src/main.c **** 
 273              		.loc 1 113 22 is_stmt 0 view .LVU65
 274 000e 0023     		movs	r3, #0
 275 0010 0393     		str	r3, [sp, #12]
 276 0012 0493     		str	r3, [sp, #16]
 277 0014 0593     		str	r3, [sp, #20]
 278 0016 0693     		str	r3, [sp, #24]
 279 0018 0793     		str	r3, [sp, #28]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 280              		.loc 1 117 3 is_stmt 1 view .LVU66
 281              	.LBB9:
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 282              		.loc 1 117 3 view .LVU67
 283 001a 0193     		str	r3, [sp, #4]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 284              		.loc 1 117 3 view .LVU68
 285 001c 1F4A     		ldr	r2, .L19
 286 001e 116C     		ldr	r1, [r2, #64]
 287 0020 41F08051 		orr	r1, r1, #268435456
 288 0024 1164     		str	r1, [r2, #64]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 289              		.loc 1 117 3 view .LVU69
 290 0026 126C     		ldr	r2, [r2, #64]
 291 0028 02F08052 		and	r2, r2, #268435456
 292 002c 0192     		str	r2, [sp, #4]
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 293              		.loc 1 117 3 view .LVU70
ARM GAS  /tmp/cczKDObK.s 			page 13


 294 002e 019A     		ldr	r2, [sp, #4]
 295              	.LBE9:
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 296              		.loc 1 117 3 view .LVU71
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 297              		.loc 1 118 3 view .LVU72
 298              	.LBB10:
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 299              		.loc 1 118 3 view .LVU73
 300 0030 0293     		str	r3, [sp, #8]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 301              		.loc 1 118 3 view .LVU74
 302 0032 1B4B     		ldr	r3, .L19+4
 303 0034 1A68     		ldr	r2, [r3]
 304 0036 42F44042 		orr	r2, r2, #49152
 305 003a 1A60     		str	r2, [r3]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 306              		.loc 1 118 3 view .LVU75
 307 003c 1B68     		ldr	r3, [r3]
 308 003e 03F44043 		and	r3, r3, #49152
 309 0042 0293     		str	r3, [sp, #8]
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 310              		.loc 1 118 3 view .LVU76
 311 0044 029B     		ldr	r3, [sp, #8]
 312              	.LBE10:
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 313              		.loc 1 118 3 view .LVU77
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 314              		.loc 1 122 3 view .LVU78
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 315              		.loc 1 122 36 is_stmt 0 view .LVU79
 316 0046 0123     		movs	r3, #1
 317 0048 0893     		str	r3, [sp, #32]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 318              		.loc 1 123 3 is_stmt 1 view .LVU80
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 319              		.loc 1 123 30 is_stmt 0 view .LVU81
 320 004a 4FF48033 		mov	r3, #65536
 321 004e 0993     		str	r3, [sp, #36]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 322              		.loc 1 124 3 is_stmt 1 view .LVU82
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 323              		.loc 1 124 34 is_stmt 0 view .LVU83
 324 0050 0223     		movs	r3, #2
 325 0052 0E93     		str	r3, [sp, #56]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 326              		.loc 1 125 3 is_stmt 1 view .LVU84
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 327              		.loc 1 125 35 is_stmt 0 view .LVU85
 328 0054 4FF48002 		mov	r2, #4194304
 329 0058 0F92     		str	r2, [sp, #60]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 330              		.loc 1 126 3 is_stmt 1 view .LVU86
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 331              		.loc 1 126 30 is_stmt 0 view .LVU87
 332 005a 0C22     		movs	r2, #12
 333 005c 1092     		str	r2, [sp, #64]
ARM GAS  /tmp/cczKDObK.s 			page 14


 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 334              		.loc 1 127 3 is_stmt 1 view .LVU88
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 335              		.loc 1 127 30 is_stmt 0 view .LVU89
 336 005e 6022     		movs	r2, #96
 337 0060 1192     		str	r2, [sp, #68]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 338              		.loc 1 128 3 is_stmt 1 view .LVU90
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 339              		.loc 1 128 30 is_stmt 0 view .LVU91
 340 0062 1293     		str	r3, [sp, #72]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 341              		.loc 1 129 3 is_stmt 1 view .LVU92
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 342              		.loc 1 129 30 is_stmt 0 view .LVU93
 343 0064 0423     		movs	r3, #4
 344 0066 1393     		str	r3, [sp, #76]
 130:Core/Src/main.c ****   {
 345              		.loc 1 130 3 is_stmt 1 view .LVU94
 130:Core/Src/main.c ****   {
 346              		.loc 1 130 7 is_stmt 0 view .LVU95
 347 0068 08A8     		add	r0, sp, #32
 348 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 349              	.LVL5:
 130:Core/Src/main.c ****   {
 350              		.loc 1 130 6 view .LVU96
 351 006e 88B9     		cbnz	r0, .L17
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 352              		.loc 1 136 3 is_stmt 1 view .LVU97
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 353              		.loc 1 136 31 is_stmt 0 view .LVU98
 354 0070 0F23     		movs	r3, #15
 355 0072 0393     		str	r3, [sp, #12]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356              		.loc 1 138 3 is_stmt 1 view .LVU99
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 357              		.loc 1 138 34 is_stmt 0 view .LVU100
 358 0074 0223     		movs	r3, #2
 359 0076 0493     		str	r3, [sp, #16]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 360              		.loc 1 139 3 is_stmt 1 view .LVU101
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 361              		.loc 1 139 35 is_stmt 0 view .LVU102
 362 0078 0023     		movs	r3, #0
 363 007a 0593     		str	r3, [sp, #20]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 140 3 is_stmt 1 view .LVU103
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 365              		.loc 1 140 36 is_stmt 0 view .LVU104
 366 007c 4FF48052 		mov	r2, #4096
 367 0080 0692     		str	r2, [sp, #24]
 141:Core/Src/main.c **** 
 368              		.loc 1 141 3 is_stmt 1 view .LVU105
 141:Core/Src/main.c **** 
 369              		.loc 1 141 36 is_stmt 0 view .LVU106
 370 0082 0793     		str	r3, [sp, #28]
 143:Core/Src/main.c ****   {
ARM GAS  /tmp/cczKDObK.s 			page 15


 371              		.loc 1 143 3 is_stmt 1 view .LVU107
 143:Core/Src/main.c ****   {
 372              		.loc 1 143 7 is_stmt 0 view .LVU108
 373 0084 0321     		movs	r1, #3
 374 0086 03A8     		add	r0, sp, #12
 375 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 376              	.LVL6:
 143:Core/Src/main.c ****   {
 377              		.loc 1 143 6 view .LVU109
 378 008c 20B9     		cbnz	r0, .L18
 147:Core/Src/main.c **** 
 379              		.loc 1 147 1 view .LVU110
 380 008e 15B0     		add	sp, sp, #84
 381              	.LCFI6:
 382              		.cfi_remember_state
 383              		.cfi_def_cfa_offset 4
 384              		@ sp needed
 385 0090 5DF804FB 		ldr	pc, [sp], #4
 386              	.L17:
 387              	.LCFI7:
 388              		.cfi_restore_state
 132:Core/Src/main.c ****   }
 389              		.loc 1 132 5 is_stmt 1 view .LVU111
 390 0094 FFF7FEFF 		bl	Error_Handler
 391              	.LVL7:
 392              	.L18:
 145:Core/Src/main.c ****   }
 393              		.loc 1 145 5 view .LVU112
 394 0098 FFF7FEFF 		bl	Error_Handler
 395              	.LVL8:
 396              	.L20:
 397              		.align	2
 398              	.L19:
 399 009c 00380240 		.word	1073887232
 400 00a0 00700040 		.word	1073770496
 401              		.cfi_endproc
 402              	.LFE131:
 404              		.section	.text.main,"ax",%progbits
 405              		.align	1
 406              		.global	main
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu fpv4-sp-d16
 412              	main:
 413              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 414              		.loc 1 67 1 view -0
 415              		.cfi_startproc
 416              		@ Volatile: function does not return.
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI8:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
ARM GAS  /tmp/cczKDObK.s 			page 16


  75:Core/Src/main.c **** 
 424              		.loc 1 75 3 view .LVU114
 425 0002 FFF7FEFF 		bl	HAL_Init
 426              	.LVL9:
  82:Core/Src/main.c **** 
 427              		.loc 1 82 3 view .LVU115
 428 0006 FFF7FEFF 		bl	SystemClock_Config
 429              	.LVL10:
  89:Core/Src/main.c ****   MX_USART1_UART_Init();
 430              		.loc 1 89 3 view .LVU116
 431 000a FFF7FEFF 		bl	MX_GPIO_Init
 432              	.LVL11:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 433              		.loc 1 90 3 view .LVU117
 434 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 435              	.LVL12:
 436              	.L22:
  97:Core/Src/main.c ****   {
 437              		.loc 1 97 3 discriminator 1 view .LVU118
 102:Core/Src/main.c ****   /* USER CODE END 3 */
 438              		.loc 1 102 3 discriminator 1 view .LVU119
  97:Core/Src/main.c ****   {
 439              		.loc 1 97 9 discriminator 1 view .LVU120
 440 0012 FEE7     		b	.L22
 441              		.cfi_endproc
 442              	.LFE130:
 444              		.global	huart1
 445              		.section	.bss.huart1,"aw",%nobits
 446              		.align	2
 447              		.set	.LANCHOR0,. + 0
 450              	huart1:
 451 0000 00000000 		.space	68
 451      00000000 
 451      00000000 
 451      00000000 
 451      00000000 
 452              		.text
 453              	.Letext0:
 454              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 455              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 456              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 457              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 458              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 459              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 460              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 461              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 462              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 463              		.file 12 "<built-in>"
ARM GAS  /tmp/cczKDObK.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cczKDObK.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cczKDObK.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cczKDObK.s:133    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/cczKDObK.s:139    .text.Error_Handler:0000000000000000 $t
     /tmp/cczKDObK.s:146    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cczKDObK.s:178    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cczKDObK.s:184    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cczKDObK.s:239    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/cczKDObK.s:245    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cczKDObK.s:252    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cczKDObK.s:399    .text.SystemClock_Config:000000000000009c $d
     /tmp/cczKDObK.s:405    .text.main:0000000000000000 $t
     /tmp/cczKDObK.s:412    .text.main:0000000000000000 main
     /tmp/cczKDObK.s:450    .bss.huart1:0000000000000000 huart1
     /tmp/cczKDObK.s:446    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
