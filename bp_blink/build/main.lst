ARM GAS  /tmp/ccOdghSd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	huart1
  18              		.section	.bss.huart1,"aw",%nobits
  19              		.align	2
  22              	huart1:
  23 0000 00000000 		.space	68
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.section	.text._write,"ax",%progbits
  25              		.align	1
  26              		.global	_write
  27              		.arch armv7e-m
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	_write:
  34              	.LFB133:
  35              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 Lars Boegild Thomsen <lbthomsen@gmail.com>.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed under MIT,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/MIT
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
ARM GAS  /tmp/ccOdghSd.s 			page 2


  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c ****  UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** // Send printf to uart1
  61:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
  36              		.loc 1 61 40
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 24
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 86B0     		sub	sp, sp, #24
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 F860     		str	r0, [r7, #12]
  52 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccOdghSd.s 			page 3


  53 000a 7A60     		str	r2, [r7, #4]
  62:Core/Src/main.c ****   HAL_StatusTypeDef hstatus;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   if (fd == 1 || fd == 2) {
  54              		.loc 1 64 6
  55 000c FB68     		ldr	r3, [r7, #12]
  56 000e 012B     		cmp	r3, #1
  57 0010 02D0     		beq	.L2
  58              		.loc 1 64 15 discriminator 1
  59 0012 FB68     		ldr	r3, [r7, #12]
  60 0014 022B     		cmp	r3, #2
  61 0016 11D1     		bne	.L3
  62              	.L2:
  65:Core/Src/main.c ****     hstatus = HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
  63              		.loc 1 65 15
  64 0018 7B68     		ldr	r3, [r7, #4]
  65 001a 9AB2     		uxth	r2, r3
  66 001c 4FF0FF33 		mov	r3, #-1
  67 0020 B968     		ldr	r1, [r7, #8]
  68 0022 0948     		ldr	r0, .L6
  69 0024 FFF7FEFF 		bl	HAL_UART_Transmit
  70 0028 0346     		mov	r3, r0
  71 002a FB75     		strb	r3, [r7, #23]
  66:Core/Src/main.c ****     if (hstatus == HAL_OK)
  72              		.loc 1 66 8
  73 002c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  74 002e 002B     		cmp	r3, #0
  75 0030 01D1     		bne	.L4
  67:Core/Src/main.c ****       return len;
  76              		.loc 1 67 14
  77 0032 7B68     		ldr	r3, [r7, #4]
  78 0034 04E0     		b	.L5
  79              	.L4:
  68:Core/Src/main.c ****     else
  69:Core/Src/main.c ****       return -1;
  80              		.loc 1 69 14
  81 0036 4FF0FF33 		mov	r3, #-1
  82 003a 01E0     		b	.L5
  83              	.L3:
  70:Core/Src/main.c ****   }
  71:Core/Src/main.c ****   return -1;
  84              		.loc 1 71 10
  85 003c 4FF0FF33 		mov	r3, #-1
  86              	.L5:
  72:Core/Src/main.c **** }
  87              		.loc 1 72 1
  88 0040 1846     		mov	r0, r3
  89 0042 1837     		adds	r7, r7, #24
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 8
  92 0044 BD46     		mov	sp, r7
  93              	.LCFI4:
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0046 80BD     		pop	{r7, pc}
  97              	.L7:
  98              		.align	2
ARM GAS  /tmp/ccOdghSd.s 			page 4


  99              	.L6:
 100 0048 00000000 		.word	huart1
 101              		.cfi_endproc
 102              	.LFE133:
 104              		.section	.rodata
 105              		.align	2
 106              	.LC0:
 107 0000 50657269 		.ascii	"Peripherals Initialised - starting...\000"
 107      70686572 
 107      616C7320 
 107      496E6974 
 107      69616C69 
 108              		.section	.text.main,"ax",%progbits
 109              		.align	1
 110              		.global	main
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	main:
 117              	.LFB134:
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
 118              		.loc 1 81 1
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 8
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              	.LCFI5:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 82B0     		sub	sp, sp, #8
 128              	.LCFI6:
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              	.LCFI7:
 132              		.cfi_def_cfa_register 7
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Core/Src/main.c ****   HAL_Init();
 133              		.loc 1 89 3
 134 0006 FFF7FEFF 		bl	HAL_Init
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccOdghSd.s 			page 5


  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
 135              		.loc 1 96 3
 136 000a FFF7FEFF 		bl	SystemClock_Config
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 137              		.loc 1 103 3
 138 000e FFF7FEFF 		bl	MX_GPIO_Init
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 139              		.loc 1 104 3
 140 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   DBG("Peripherals Initialised - starting...");
 141              		.loc 1 107 3
 142 0016 0D48     		ldr	r0, .L11
 143 0018 FFF7FEFF 		bl	printf
 144 001c 0A20     		movs	r0, #10
 145 001e FFF7FEFF 		bl	putchar
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   uint32_t last_blink = 0, now = 0;
 146              		.loc 1 114 12
 147 0022 0023     		movs	r3, #0
 148 0024 7B60     		str	r3, [r7, #4]
 149              		.loc 1 114 28
 150 0026 0023     		movs	r3, #0
 151 0028 3B60     		str	r3, [r7]
 152              	.L10:
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     now = HAL_GetTick();
 153              		.loc 1 119 11
 154 002a FFF7FEFF 		bl	HAL_GetTick
 155 002e 3860     		str	r0, [r7]
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     if (now - last_blink >= 500) {
 156              		.loc 1 121 13
 157 0030 3A68     		ldr	r2, [r7]
 158 0032 7B68     		ldr	r3, [r7, #4]
 159 0034 D31A     		subs	r3, r2, r3
 160              		.loc 1 121 8
 161 0036 B3F5FA7F 		cmp	r3, #500
ARM GAS  /tmp/ccOdghSd.s 			page 6


 162 003a F6D3     		bcc	.L10
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 163              		.loc 1 123 7
 164 003c 4FF40051 		mov	r1, #8192
 165 0040 0348     		ldr	r0, .L11+4
 166 0042 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****       last_blink = now;
 167              		.loc 1 125 18
 168 0046 3B68     		ldr	r3, [r7]
 169 0048 7B60     		str	r3, [r7, #4]
 119:Core/Src/main.c **** 
 170              		.loc 1 119 9
 171 004a EEE7     		b	.L10
 172              	.L12:
 173              		.align	2
 174              	.L11:
 175 004c 00000000 		.word	.LC0
 176 0050 00080240 		.word	1073874944
 177              		.cfi_endproc
 178              	.LFE134:
 180              		.section	.text.SystemClock_Config,"ax",%progbits
 181              		.align	1
 182              		.global	SystemClock_Config
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	SystemClock_Config:
 189              	.LFB135:
 126:Core/Src/main.c ****     }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****     /* USER CODE END WHILE */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 190              		.loc 1 140 1
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 80
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              	.LCFI8:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 94B0     		sub	sp, sp, #80
 200              	.LCFI9:
ARM GAS  /tmp/ccOdghSd.s 			page 7


 201              		.cfi_def_cfa_offset 88
 202 0004 00AF     		add	r7, sp, #0
 203              	.LCFI10:
 204              		.cfi_def_cfa_register 7
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205              		.loc 1 141 22
 206 0006 07F12003 		add	r3, r7, #32
 207 000a 3022     		movs	r2, #48
 208 000c 0021     		movs	r1, #0
 209 000e 1846     		mov	r0, r3
 210 0010 FFF7FEFF 		bl	memset
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 211              		.loc 1 142 22
 212 0014 07F10C03 		add	r3, r7, #12
 213 0018 0022     		movs	r2, #0
 214 001a 1A60     		str	r2, [r3]
 215 001c 5A60     		str	r2, [r3, #4]
 216 001e 9A60     		str	r2, [r3, #8]
 217 0020 DA60     		str	r2, [r3, #12]
 218 0022 1A61     		str	r2, [r3, #16]
 219              	.LBB4:
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 220              		.loc 1 146 3
 221 0024 0023     		movs	r3, #0
 222 0026 BB60     		str	r3, [r7, #8]
 223 0028 274B     		ldr	r3, .L17
 224 002a 1B6C     		ldr	r3, [r3, #64]
 225 002c 264A     		ldr	r2, .L17
 226 002e 43F08053 		orr	r3, r3, #268435456
 227 0032 1364     		str	r3, [r2, #64]
 228 0034 244B     		ldr	r3, .L17
 229 0036 1B6C     		ldr	r3, [r3, #64]
 230 0038 03F08053 		and	r3, r3, #268435456
 231 003c BB60     		str	r3, [r7, #8]
 232 003e BB68     		ldr	r3, [r7, #8]
 233              	.LBE4:
 234              	.LBB5:
 147:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 235              		.loc 1 147 3
 236 0040 0023     		movs	r3, #0
 237 0042 7B60     		str	r3, [r7, #4]
 238 0044 214B     		ldr	r3, .L17+4
 239 0046 1B68     		ldr	r3, [r3]
 240 0048 204A     		ldr	r2, .L17+4
 241 004a 43F44043 		orr	r3, r3, #49152
 242 004e 1360     		str	r3, [r2]
 243 0050 1E4B     		ldr	r3, .L17+4
 244 0052 1B68     		ldr	r3, [r3]
 245 0054 03F44043 		and	r3, r3, #49152
 246 0058 7B60     		str	r3, [r7, #4]
 247 005a 7B68     		ldr	r3, [r7, #4]
 248              	.LBE5:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/ccOdghSd.s 			page 8


 150:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 249              		.loc 1 152 36
 250 005c 0123     		movs	r3, #1
 251 005e 3B62     		str	r3, [r7, #32]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 252              		.loc 1 153 30
 253 0060 4FF48033 		mov	r3, #65536
 254 0064 7B62     		str	r3, [r7, #36]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 255              		.loc 1 154 34
 256 0066 0223     		movs	r3, #2
 257 0068 BB63     		str	r3, [r7, #56]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 258              		.loc 1 155 35
 259 006a 4FF48003 		mov	r3, #4194304
 260 006e FB63     		str	r3, [r7, #60]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 261              		.loc 1 156 30
 262 0070 0C23     		movs	r3, #12
 263 0072 3B64     		str	r3, [r7, #64]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 264              		.loc 1 157 30
 265 0074 6023     		movs	r3, #96
 266 0076 7B64     		str	r3, [r7, #68]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 267              		.loc 1 158 30
 268 0078 0223     		movs	r3, #2
 269 007a BB64     		str	r3, [r7, #72]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 270              		.loc 1 159 30
 271 007c 0423     		movs	r3, #4
 272 007e FB64     		str	r3, [r7, #76]
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 273              		.loc 1 160 7
 274 0080 07F12003 		add	r3, r7, #32
 275 0084 1846     		mov	r0, r3
 276 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 277 008a 0346     		mov	r3, r0
 278              		.loc 1 160 6
 279 008c 002B     		cmp	r3, #0
 280 008e 01D0     		beq	.L14
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 281              		.loc 1 162 5
 282 0090 FFF7FEFF 		bl	Error_Handler
 283              	.L14:
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 284              		.loc 1 167 31
 285 0094 0F23     		movs	r3, #15
 286 0096 FB60     		str	r3, [r7, #12]
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccOdghSd.s 			page 9


 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 287              		.loc 1 169 34
 288 0098 0223     		movs	r3, #2
 289 009a 3B61     		str	r3, [r7, #16]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 290              		.loc 1 170 35
 291 009c 0023     		movs	r3, #0
 292 009e 7B61     		str	r3, [r7, #20]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 293              		.loc 1 171 36
 294 00a0 4FF48053 		mov	r3, #4096
 295 00a4 BB61     		str	r3, [r7, #24]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 296              		.loc 1 172 36
 297 00a6 0023     		movs	r3, #0
 298 00a8 FB61     		str	r3, [r7, #28]
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 299              		.loc 1 174 7
 300 00aa 07F10C03 		add	r3, r7, #12
 301 00ae 0321     		movs	r1, #3
 302 00b0 1846     		mov	r0, r3
 303 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 304 00b6 0346     		mov	r3, r0
 305              		.loc 1 174 6
 306 00b8 002B     		cmp	r3, #0
 307 00ba 01D0     		beq	.L16
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 308              		.loc 1 176 5
 309 00bc FFF7FEFF 		bl	Error_Handler
 310              	.L16:
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 311              		.loc 1 178 1
 312 00c0 00BF     		nop
 313 00c2 5037     		adds	r7, r7, #80
 314              	.LCFI11:
 315              		.cfi_def_cfa_offset 8
 316 00c4 BD46     		mov	sp, r7
 317              	.LCFI12:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 00c6 80BD     		pop	{r7, pc}
 321              	.L18:
 322              		.align	2
 323              	.L17:
 324 00c8 00380240 		.word	1073887232
 325 00cc 00700040 		.word	1073770496
 326              		.cfi_endproc
 327              	.LFE135:
 329              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccOdghSd.s 			page 10


 336              	MX_USART1_UART_Init:
 337              	.LFB136:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief USART1 Initialization Function
 182:Core/Src/main.c ****   * @param None
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 186:Core/Src/main.c **** {
 338              		.loc 1 186 1
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI13:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              	.LCFI14:
 349              		.cfi_def_cfa_register 7
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 195:Core/Src/main.c ****   huart1.Instance = USART1;
 350              		.loc 1 195 19
 351 0004 114B     		ldr	r3, .L22
 352 0006 124A     		ldr	r2, .L22+4
 353 0008 1A60     		str	r2, [r3]
 196:Core/Src/main.c ****   huart1.Init.BaudRate = 921600;
 354              		.loc 1 196 24
 355 000a 104B     		ldr	r3, .L22
 356 000c 4FF46122 		mov	r2, #921600
 357 0010 5A60     		str	r2, [r3, #4]
 197:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 358              		.loc 1 197 26
 359 0012 0E4B     		ldr	r3, .L22
 360 0014 0022     		movs	r2, #0
 361 0016 9A60     		str	r2, [r3, #8]
 198:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 362              		.loc 1 198 24
 363 0018 0C4B     		ldr	r3, .L22
 364 001a 0022     		movs	r2, #0
 365 001c DA60     		str	r2, [r3, #12]
 199:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 366              		.loc 1 199 22
 367 001e 0B4B     		ldr	r3, .L22
 368 0020 0022     		movs	r2, #0
 369 0022 1A61     		str	r2, [r3, #16]
 200:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 370              		.loc 1 200 20
ARM GAS  /tmp/ccOdghSd.s 			page 11


 371 0024 094B     		ldr	r3, .L22
 372 0026 0C22     		movs	r2, #12
 373 0028 5A61     		str	r2, [r3, #20]
 201:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 374              		.loc 1 201 25
 375 002a 084B     		ldr	r3, .L22
 376 002c 0022     		movs	r2, #0
 377 002e 9A61     		str	r2, [r3, #24]
 202:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 378              		.loc 1 202 28
 379 0030 064B     		ldr	r3, .L22
 380 0032 0022     		movs	r2, #0
 381 0034 DA61     		str	r2, [r3, #28]
 203:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 382              		.loc 1 203 7
 383 0036 0548     		ldr	r0, .L22
 384 0038 FFF7FEFF 		bl	HAL_UART_Init
 385 003c 0346     		mov	r3, r0
 386              		.loc 1 203 6
 387 003e 002B     		cmp	r3, #0
 388 0040 01D0     		beq	.L21
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 389              		.loc 1 205 5
 390 0042 FFF7FEFF 		bl	Error_Handler
 391              	.L21:
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** }
 392              		.loc 1 211 1
 393 0046 00BF     		nop
 394 0048 80BD     		pop	{r7, pc}
 395              	.L23:
 396 004a 00BF     		.align	2
 397              	.L22:
 398 004c 00000000 		.word	huart1
 399 0050 00100140 		.word	1073811456
 400              		.cfi_endproc
 401              	.LFE136:
 403              		.section	.text.MX_GPIO_Init,"ax",%progbits
 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	MX_GPIO_Init:
 411              	.LFB137:
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief GPIO Initialization Function
 215:Core/Src/main.c ****   * @param None
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccOdghSd.s 			page 12


 219:Core/Src/main.c **** {
 412              		.loc 1 219 1
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 32
 415              		@ frame_needed = 1, uses_anonymous_args = 0
 416 0000 80B5     		push	{r7, lr}
 417              	.LCFI15:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 88B0     		sub	sp, sp, #32
 422              	.LCFI16:
 423              		.cfi_def_cfa_offset 40
 424 0004 00AF     		add	r7, sp, #0
 425              	.LCFI17:
 426              		.cfi_def_cfa_register 7
 220:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 427              		.loc 1 220 20
 428 0006 07F10C03 		add	r3, r7, #12
 429 000a 0022     		movs	r2, #0
 430 000c 1A60     		str	r2, [r3]
 431 000e 5A60     		str	r2, [r3, #4]
 432 0010 9A60     		str	r2, [r3, #8]
 433 0012 DA60     		str	r2, [r3, #12]
 434 0014 1A61     		str	r2, [r3, #16]
 435              	.LBB6:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 223:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 436              		.loc 1 223 3
 437 0016 0023     		movs	r3, #0
 438 0018 BB60     		str	r3, [r7, #8]
 439 001a 274B     		ldr	r3, .L25
 440 001c 1B6B     		ldr	r3, [r3, #48]
 441 001e 264A     		ldr	r2, .L25
 442 0020 43F00403 		orr	r3, r3, #4
 443 0024 1363     		str	r3, [r2, #48]
 444 0026 244B     		ldr	r3, .L25
 445 0028 1B6B     		ldr	r3, [r3, #48]
 446 002a 03F00403 		and	r3, r3, #4
 447 002e BB60     		str	r3, [r7, #8]
 448 0030 BB68     		ldr	r3, [r7, #8]
 449              	.LBE6:
 450              	.LBB7:
 224:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 451              		.loc 1 224 3
 452 0032 0023     		movs	r3, #0
 453 0034 7B60     		str	r3, [r7, #4]
 454 0036 204B     		ldr	r3, .L25
 455 0038 1B6B     		ldr	r3, [r3, #48]
 456 003a 1F4A     		ldr	r2, .L25
 457 003c 43F08003 		orr	r3, r3, #128
 458 0040 1363     		str	r3, [r2, #48]
 459 0042 1D4B     		ldr	r3, .L25
 460 0044 1B6B     		ldr	r3, [r3, #48]
 461 0046 03F08003 		and	r3, r3, #128
 462 004a 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccOdghSd.s 			page 13


 463 004c 7B68     		ldr	r3, [r7, #4]
 464              	.LBE7:
 465              	.LBB8:
 225:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 466              		.loc 1 225 3
 467 004e 0023     		movs	r3, #0
 468 0050 3B60     		str	r3, [r7]
 469 0052 194B     		ldr	r3, .L25
 470 0054 1B6B     		ldr	r3, [r3, #48]
 471 0056 184A     		ldr	r2, .L25
 472 0058 43F00103 		orr	r3, r3, #1
 473 005c 1363     		str	r3, [r2, #48]
 474 005e 164B     		ldr	r3, .L25
 475 0060 1B6B     		ldr	r3, [r3, #48]
 476 0062 03F00103 		and	r3, r3, #1
 477 0066 3B60     		str	r3, [r7]
 478 0068 3B68     		ldr	r3, [r7]
 479              	.LBE8:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 228:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 480              		.loc 1 228 3
 481 006a 0122     		movs	r2, #1
 482 006c 4FF40051 		mov	r1, #8192
 483 0070 1248     		ldr	r0, .L25+4
 484 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 231:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 485              		.loc 1 231 23
 486 0076 4FF40053 		mov	r3, #8192
 487 007a FB60     		str	r3, [r7, #12]
 232:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 488              		.loc 1 232 24
 489 007c 1123     		movs	r3, #17
 490 007e 3B61     		str	r3, [r7, #16]
 233:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 491              		.loc 1 233 24
 492 0080 0023     		movs	r3, #0
 493 0082 7B61     		str	r3, [r7, #20]
 234:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 494              		.loc 1 234 25
 495 0084 0023     		movs	r3, #0
 496 0086 BB61     		str	r3, [r7, #24]
 235:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 497              		.loc 1 235 3
 498 0088 07F10C03 		add	r3, r7, #12
 499 008c 1946     		mov	r1, r3
 500 008e 0B48     		ldr	r0, .L25+4
 501 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*Configure GPIO pin : BTN_Pin */
 238:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN_Pin;
 502              		.loc 1 238 23
 503 0094 0123     		movs	r3, #1
 504 0096 FB60     		str	r3, [r7, #12]
 239:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
ARM GAS  /tmp/ccOdghSd.s 			page 14


 505              		.loc 1 239 24
 506 0098 4FF44413 		mov	r3, #3211264
 507 009c 3B61     		str	r3, [r7, #16]
 240:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 508              		.loc 1 240 24
 509 009e 0123     		movs	r3, #1
 510 00a0 7B61     		str	r3, [r7, #20]
 241:Core/Src/main.c ****   HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 511              		.loc 1 241 3
 512 00a2 07F10C03 		add	r3, r7, #12
 513 00a6 1946     		mov	r1, r3
 514 00a8 0548     		ldr	r0, .L25+8
 515 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** }
 516              		.loc 1 243 1
 517 00ae 00BF     		nop
 518 00b0 2037     		adds	r7, r7, #32
 519              	.LCFI18:
 520              		.cfi_def_cfa_offset 8
 521 00b2 BD46     		mov	sp, r7
 522              	.LCFI19:
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 00b4 80BD     		pop	{r7, pc}
 526              	.L26:
 527 00b6 00BF     		.align	2
 528              	.L25:
 529 00b8 00380240 		.word	1073887232
 530 00bc 00080240 		.word	1073874944
 531 00c0 00000240 		.word	1073872896
 532              		.cfi_endproc
 533              	.LFE137:
 535              		.section	.text.Error_Handler,"ax",%progbits
 536              		.align	1
 537              		.global	Error_Handler
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu fpv4-sp-d16
 543              	Error_Handler:
 544              	.LFB138:
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE END 4 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** void Error_Handler(void)
 254:Core/Src/main.c **** {
 545              		.loc 1 254 1
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccOdghSd.s 			page 15


 549              		@ link register save eliminated.
 550 0000 80B4     		push	{r7}
 551              	.LCFI20:
 552              		.cfi_def_cfa_offset 4
 553              		.cfi_offset 7, -4
 554 0002 00AF     		add	r7, sp, #0
 555              	.LCFI21:
 556              		.cfi_def_cfa_register 7
 557              	.LBB9:
 558              	.LBB10:
 559              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccOdghSd.s 			page 16


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccOdghSd.s 			page 17


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 560              		.loc 2 142 3
 561              		.syntax unified
 562              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 563 0004 72B6     		cpsid i
 564              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 565              		.loc 2 143 1
 566              		.thumb
 567              		.syntax unified
 568 0006 00BF     		nop
 569              	.L28:
 570              	.LBE10:
 571              	.LBE9:
 255:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 256:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 257:Core/Src/main.c ****   __disable_irq();
 258:Core/Src/main.c ****   while (1)
 572              		.loc 1 258 9 discriminator 1
ARM GAS  /tmp/ccOdghSd.s 			page 18


 573 0008 FEE7     		b	.L28
 574              		.cfi_endproc
 575              	.LFE138:
 577              		.section	.text.assert_failed,"ax",%progbits
 578              		.align	1
 579              		.global	assert_failed
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv4-sp-d16
 585              	assert_failed:
 586              	.LFB139:
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 265:Core/Src/main.c **** /**
 266:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 267:Core/Src/main.c ****   *         where the assert_param error has occurred.
 268:Core/Src/main.c ****   * @param  file: pointer to the source file name
 269:Core/Src/main.c ****   * @param  line: assert_param error line source number
 270:Core/Src/main.c ****   * @retval None
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 273:Core/Src/main.c **** {
 587              		.loc 1 273 1
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              	.LCFI22:
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 7, -4
 596 0002 83B0     		sub	sp, sp, #12
 597              	.LCFI23:
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              	.LCFI24:
 601              		.cfi_def_cfa_register 7
 602 0006 7860     		str	r0, [r7, #4]
 603 0008 3960     		str	r1, [r7]
 274:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 275:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 276:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 277:Core/Src/main.c ****   /* USER CODE END 6 */
 278:Core/Src/main.c **** }
 604              		.loc 1 278 1
 605 000a 00BF     		nop
 606 000c 0C37     		adds	r7, r7, #12
 607              	.LCFI25:
 608              		.cfi_def_cfa_offset 4
 609 000e BD46     		mov	sp, r7
 610              	.LCFI26:
 611              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccOdghSd.s 			page 19


 612              		@ sp needed
 613 0010 5DF8047B 		ldr	r7, [sp], #4
 614              	.LCFI27:
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0014 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE139:
 621              		.text
 622              	.Letext0:
 623              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 624              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 625              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 626              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 627              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 628              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 629              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 630              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccOdghSd.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOdghSd.s:22     .bss.huart1:0000000000000000 huart1
     /tmp/ccOdghSd.s:19     .bss.huart1:0000000000000000 $d
     /tmp/ccOdghSd.s:25     .text._write:0000000000000000 $t
     /tmp/ccOdghSd.s:33     .text._write:0000000000000000 _write
     /tmp/ccOdghSd.s:100    .text._write:0000000000000048 $d
     /tmp/ccOdghSd.s:105    .rodata:0000000000000000 $d
     /tmp/ccOdghSd.s:109    .text.main:0000000000000000 $t
     /tmp/ccOdghSd.s:116    .text.main:0000000000000000 main
     /tmp/ccOdghSd.s:188    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOdghSd.s:410    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccOdghSd.s:336    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccOdghSd.s:175    .text.main:000000000000004c $d
     /tmp/ccOdghSd.s:181    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOdghSd.s:543    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccOdghSd.s:324    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/ccOdghSd.s:330    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccOdghSd.s:398    .text.MX_USART1_UART_Init:000000000000004c $d
     /tmp/ccOdghSd.s:404    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccOdghSd.s:529    .text.MX_GPIO_Init:00000000000000b8 $d
     /tmp/ccOdghSd.s:536    .text.Error_Handler:0000000000000000 $t
     /tmp/ccOdghSd.s:578    .text.assert_failed:0000000000000000 $t
     /tmp/ccOdghSd.s:585    .text.assert_failed:0000000000000000 assert_failed

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_Init
printf
putchar
HAL_GetTick
HAL_GPIO_TogglePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
