ARM GAS  /tmp/ccA6s1DX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB137:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 Lars Boegild Thomsen <lbthomsen@gmail.com>.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed under MIT,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/MIT
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccA6s1DX.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c ****  UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** // Send printf to uart1
  61:Core/Src/main.c **** int _write(int fd, char* ptr, int len) {
  62:Core/Src/main.c ****   HAL_StatusTypeDef hstatus;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   if (fd == 1 || fd == 2) {
  65:Core/Src/main.c ****     hstatus = HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
  66:Core/Src/main.c ****     if (hstatus == HAL_OK)
  67:Core/Src/main.c ****       return len;
  68:Core/Src/main.c ****     else
  69:Core/Src/main.c ****       return -1;
  70:Core/Src/main.c ****   }
  71:Core/Src/main.c ****   return -1;
  72:Core/Src/main.c **** }
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END 0 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /**
  77:Core/Src/main.c ****   * @brief  The application entry point.
  78:Core/Src/main.c ****   * @retval int
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c **** int main(void)
  81:Core/Src/main.c **** {
  82:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccA6s1DX.s 			page 3


  89:Core/Src/main.c ****   HAL_Init();
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Configure the system clock */
  96:Core/Src/main.c ****   SystemClock_Config();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Initialize all configured peripherals */
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   HAL_Delay(3000);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   DBG("Peripherals Initialised - starting...");
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   uint32_t last_blink = 0, now = 0;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   while (1)
 119:Core/Src/main.c ****   {
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****     now = HAL_GetTick();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     if (now - last_blink >= 499) {
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****       last_blink = now;
 128:Core/Src/main.c ****     }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 135:Core/Src/main.c **** }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief System Clock Configuration
 139:Core/Src/main.c ****   * @retval None
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** void SystemClock_Config(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccA6s1DX.s 			page 4


 146:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief USART1 Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 197:Core/Src/main.c ****   huart1.Instance = USART1;
 198:Core/Src/main.c ****   huart1.Init.BaudRate = 921600;
 199:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 200:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 201:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 202:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccA6s1DX.s 			page 5


 203:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 204:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 205:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief GPIO Initialization Function
 217:Core/Src/main.c ****   * @param None
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** static void MX_GPIO_Init(void)
 221:Core/Src/main.c **** {
  28              		.loc 1 221 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 222:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 222 3 view .LVU1
  42              		.loc 1 222 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 225:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 225 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 225 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 225 3 view .LVU5
  54 0012 1E4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 225 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
ARM GAS  /tmp/ccA6s1DX.s 			page 6


  62              		.loc 1 225 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 225 3 view .LVU8
 226:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 226 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 226 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 226 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 226 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 226 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 226 3 view .LVU14
 227:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 227 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 227 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 227 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 227 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00103 		and	r3, r3, #1
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 227 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 227 3 view .LVU20
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 230:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  98              		.loc 1 230 3 view .LVU21
  99 004e 104D     		ldr	r5, .L3+4
 100 0050 0122     		movs	r2, #1
 101 0052 4FF40051 		mov	r1, #8192
 102 0056 2846     		mov	r0, r5
 103 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 233:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 105              		.loc 1 233 3 view .LVU22
 106              		.loc 1 233 23 is_stmt 0 view .LVU23
 107 005c 4FF40053 		mov	r3, #8192
 108 0060 0393     		str	r3, [sp, #12]
 234:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 109              		.loc 1 234 3 is_stmt 1 view .LVU24
ARM GAS  /tmp/ccA6s1DX.s 			page 7


 110              		.loc 1 234 24 is_stmt 0 view .LVU25
 111 0062 1123     		movs	r3, #17
 112 0064 0493     		str	r3, [sp, #16]
 235:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 235 3 is_stmt 1 view .LVU26
 114              		.loc 1 235 24 is_stmt 0 view .LVU27
 115 0066 0594     		str	r4, [sp, #20]
 236:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 236 3 is_stmt 1 view .LVU28
 117              		.loc 1 236 25 is_stmt 0 view .LVU29
 118 0068 0694     		str	r4, [sp, #24]
 237:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 119              		.loc 1 237 3 is_stmt 1 view .LVU30
 120 006a 03A9     		add	r1, sp, #12
 121 006c 2846     		mov	r0, r5
 122 006e FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /*Configure GPIO pin : BTN_Pin */
 240:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN_Pin;
 124              		.loc 1 240 3 view .LVU31
 125              		.loc 1 240 23 is_stmt 0 view .LVU32
 126 0072 0123     		movs	r3, #1
 127 0074 0393     		str	r3, [sp, #12]
 241:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 128              		.loc 1 241 3 is_stmt 1 view .LVU33
 129              		.loc 1 241 24 is_stmt 0 view .LVU34
 130 0076 4FF44412 		mov	r2, #3211264
 131 007a 0492     		str	r2, [sp, #16]
 242:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 132              		.loc 1 242 3 is_stmt 1 view .LVU35
 133              		.loc 1 242 24 is_stmt 0 view .LVU36
 134 007c 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   HAL_GPIO_Init(BTN_GPIO_Port, &GPIO_InitStruct);
 135              		.loc 1 243 3 is_stmt 1 view .LVU37
 136 007e 03A9     		add	r1, sp, #12
 137 0080 0448     		ldr	r0, .L3+8
 138 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
 140              		.loc 1 245 1 is_stmt 0 view .LVU38
 141 0086 09B0     		add	sp, sp, #36
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 12
 144              		@ sp needed
 145 0088 30BD     		pop	{r4, r5, pc}
 146              	.L4:
 147 008a 00BF     		.align	2
 148              	.L3:
 149 008c 00380240 		.word	1073887232
 150 0090 00080240 		.word	1073874944
 151 0094 00000240 		.word	1073872896
 152              		.cfi_endproc
 153              	.LFE137:
 155              		.section	.text._write,"ax",%progbits
 156              		.align	1
ARM GAS  /tmp/ccA6s1DX.s 			page 8


 157              		.global	_write
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	_write:
 164              	.LVL3:
 165              	.LFB133:
  61:Core/Src/main.c ****   HAL_StatusTypeDef hstatus;
 166              		.loc 1 61 40 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
  62:Core/Src/main.c **** 
 170              		.loc 1 62 3 view .LVU40
  64:Core/Src/main.c ****     hstatus = HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 171              		.loc 1 64 3 view .LVU41
  64:Core/Src/main.c ****     hstatus = HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 172              		.loc 1 64 15 is_stmt 0 view .LVU42
 173 0000 0138     		subs	r0, r0, #1
 174              	.LVL4:
  64:Core/Src/main.c ****     hstatus = HAL_UART_Transmit(&huart1, (uint8_t *) ptr, len, HAL_MAX_DELAY);
 175              		.loc 1 64 6 view .LVU43
 176 0002 0128     		cmp	r0, #1
 177 0004 0AD8     		bhi	.L7
  61:Core/Src/main.c ****   HAL_StatusTypeDef hstatus;
 178              		.loc 1 61 40 view .LVU44
 179 0006 10B5     		push	{r4, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 184 0008 1446     		mov	r4, r2
  65:Core/Src/main.c ****     if (hstatus == HAL_OK)
 185              		.loc 1 65 5 is_stmt 1 view .LVU45
  65:Core/Src/main.c ****     if (hstatus == HAL_OK)
 186              		.loc 1 65 15 is_stmt 0 view .LVU46
 187 000a 4FF0FF33 		mov	r3, #-1
 188 000e 92B2     		uxth	r2, r2
 189              	.LVL5:
  65:Core/Src/main.c ****     if (hstatus == HAL_OK)
 190              		.loc 1 65 15 view .LVU47
 191 0010 0548     		ldr	r0, .L13
 192              	.LVL6:
  65:Core/Src/main.c ****     if (hstatus == HAL_OK)
 193              		.loc 1 65 15 view .LVU48
 194 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 195              	.LVL7:
  66:Core/Src/main.c ****       return len;
 196              		.loc 1 66 5 is_stmt 1 view .LVU49
  66:Core/Src/main.c ****       return len;
 197              		.loc 1 66 8 is_stmt 0 view .LVU50
 198 0016 20B9     		cbnz	r0, .L8
  67:Core/Src/main.c ****     else
 199              		.loc 1 67 14 view .LVU51
 200 0018 2046     		mov	r0, r4
 201              	.LVL8:
ARM GAS  /tmp/ccA6s1DX.s 			page 9


 202              	.L5:
  72:Core/Src/main.c **** 
 203              		.loc 1 72 1 view .LVU52
 204 001a 10BD     		pop	{r4, pc}
 205              	.LVL9:
 206              	.L7:
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 0
 209              		.cfi_restore 4
 210              		.cfi_restore 14
  71:Core/Src/main.c **** }
 211              		.loc 1 71 10 view .LVU53
 212 001c 4FF0FF30 		mov	r0, #-1
  72:Core/Src/main.c **** 
 213              		.loc 1 72 1 view .LVU54
 214 0020 7047     		bx	lr
 215              	.LVL10:
 216              	.L8:
 217              	.LCFI5:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
  69:Core/Src/main.c ****   }
 221              		.loc 1 69 14 view .LVU55
 222 0022 4FF0FF30 		mov	r0, #-1
 223              	.LVL11:
  69:Core/Src/main.c ****   }
 224              		.loc 1 69 14 view .LVU56
 225 0026 F8E7     		b	.L5
 226              	.L14:
 227              		.align	2
 228              	.L13:
 229 0028 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE133:
 233              		.section	.text.Error_Handler,"ax",%progbits
 234              		.align	1
 235              		.global	Error_Handler
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	Error_Handler:
 242              	.LFB138:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /* USER CODE END 4 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** void Error_Handler(void)
 256:Core/Src/main.c **** {
 243              		.loc 1 256 1 is_stmt 1 view -0
 244              		.cfi_startproc
ARM GAS  /tmp/ccA6s1DX.s 			page 10


 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 257:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 258:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 259:Core/Src/main.c ****   __disable_irq();
 249              		.loc 1 259 3 view .LVU58
 250              	.LBB7:
 251              	.LBI7:
 252              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccA6s1DX.s 			page 11


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccA6s1DX.s 			page 12


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 253              		.loc 2 140 27 view .LVU59
 254              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 255              		.loc 2 142 3 view .LVU60
 256              		.syntax unified
 257              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 258 0000 72B6     		cpsid i
 259              	@ 0 "" 2
 260              		.thumb
 261              		.syntax unified
 262              	.L16:
 263              	.LBE8:
 264              	.LBE7:
 260:Core/Src/main.c ****   while (1)
 265              		.loc 1 260 3 discriminator 1 view .LVU61
 261:Core/Src/main.c ****   {
 262:Core/Src/main.c ****   }
 266              		.loc 1 262 3 discriminator 1 view .LVU62
 260:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccA6s1DX.s 			page 13


 267              		.loc 1 260 9 discriminator 1 view .LVU63
 268 0002 FEE7     		b	.L16
 269              		.cfi_endproc
 270              	.LFE138:
 272              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 273              		.align	1
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu fpv4-sp-d16
 279              	MX_USART1_UART_Init:
 280              	.LFB136:
 188:Core/Src/main.c **** 
 281              		.loc 1 188 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 08B5     		push	{r3, lr}
 286              	.LCFI6:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 3, -8
 289              		.cfi_offset 14, -4
 197:Core/Src/main.c ****   huart1.Init.BaudRate = 921600;
 290              		.loc 1 197 3 view .LVU65
 197:Core/Src/main.c ****   huart1.Init.BaudRate = 921600;
 291              		.loc 1 197 19 is_stmt 0 view .LVU66
 292 0002 0A48     		ldr	r0, .L21
 293 0004 0A4B     		ldr	r3, .L21+4
 294 0006 0360     		str	r3, [r0]
 198:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 295              		.loc 1 198 3 is_stmt 1 view .LVU67
 198:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 296              		.loc 1 198 24 is_stmt 0 view .LVU68
 297 0008 4FF46123 		mov	r3, #921600
 298 000c 4360     		str	r3, [r0, #4]
 199:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 299              		.loc 1 199 3 is_stmt 1 view .LVU69
 199:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 300              		.loc 1 199 26 is_stmt 0 view .LVU70
 301 000e 0023     		movs	r3, #0
 302 0010 8360     		str	r3, [r0, #8]
 200:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 303              		.loc 1 200 3 is_stmt 1 view .LVU71
 200:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 304              		.loc 1 200 24 is_stmt 0 view .LVU72
 305 0012 C360     		str	r3, [r0, #12]
 201:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 306              		.loc 1 201 3 is_stmt 1 view .LVU73
 201:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 307              		.loc 1 201 22 is_stmt 0 view .LVU74
 308 0014 0361     		str	r3, [r0, #16]
 202:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 309              		.loc 1 202 3 is_stmt 1 view .LVU75
 202:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 310              		.loc 1 202 20 is_stmt 0 view .LVU76
 311 0016 0C22     		movs	r2, #12
 312 0018 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccA6s1DX.s 			page 14


 203:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 313              		.loc 1 203 3 is_stmt 1 view .LVU77
 203:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 314              		.loc 1 203 25 is_stmt 0 view .LVU78
 315 001a 8361     		str	r3, [r0, #24]
 204:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 316              		.loc 1 204 3 is_stmt 1 view .LVU79
 204:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 317              		.loc 1 204 28 is_stmt 0 view .LVU80
 318 001c C361     		str	r3, [r0, #28]
 205:Core/Src/main.c ****   {
 319              		.loc 1 205 3 is_stmt 1 view .LVU81
 205:Core/Src/main.c ****   {
 320              		.loc 1 205 7 is_stmt 0 view .LVU82
 321 001e FFF7FEFF 		bl	HAL_UART_Init
 322              	.LVL12:
 205:Core/Src/main.c ****   {
 323              		.loc 1 205 6 view .LVU83
 324 0022 00B9     		cbnz	r0, .L20
 213:Core/Src/main.c **** 
 325              		.loc 1 213 1 view .LVU84
 326 0024 08BD     		pop	{r3, pc}
 327              	.L20:
 207:Core/Src/main.c ****   }
 328              		.loc 1 207 5 is_stmt 1 view .LVU85
 329 0026 FFF7FEFF 		bl	Error_Handler
 330              	.LVL13:
 331              	.L22:
 332 002a 00BF     		.align	2
 333              	.L21:
 334 002c 00000000 		.word	.LANCHOR0
 335 0030 00100140 		.word	1073811456
 336              		.cfi_endproc
 337              	.LFE136:
 339              		.section	.text.SystemClock_Config,"ax",%progbits
 340              		.align	1
 341              		.global	SystemClock_Config
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	SystemClock_Config:
 348              	.LFB135:
 142:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 349              		.loc 1 142 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 80
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 00B5     		push	{lr}
 354              	.LCFI7:
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 14, -4
 357 0002 95B0     		sub	sp, sp, #84
 358              	.LCFI8:
 359              		.cfi_def_cfa_offset 88
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 360              		.loc 1 143 3 view .LVU87
ARM GAS  /tmp/ccA6s1DX.s 			page 15


 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 361              		.loc 1 143 22 is_stmt 0 view .LVU88
 362 0004 3022     		movs	r2, #48
 363 0006 0021     		movs	r1, #0
 364 0008 08A8     		add	r0, sp, #32
 365 000a FFF7FEFF 		bl	memset
 366              	.LVL14:
 144:Core/Src/main.c **** 
 367              		.loc 1 144 3 is_stmt 1 view .LVU89
 144:Core/Src/main.c **** 
 368              		.loc 1 144 22 is_stmt 0 view .LVU90
 369 000e 0023     		movs	r3, #0
 370 0010 0393     		str	r3, [sp, #12]
 371 0012 0493     		str	r3, [sp, #16]
 372 0014 0593     		str	r3, [sp, #20]
 373 0016 0693     		str	r3, [sp, #24]
 374 0018 0793     		str	r3, [sp, #28]
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 375              		.loc 1 148 3 is_stmt 1 view .LVU91
 376              	.LBB9:
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 377              		.loc 1 148 3 view .LVU92
 378 001a 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 379              		.loc 1 148 3 view .LVU93
 380 001c 1F4A     		ldr	r2, .L29
 381 001e 116C     		ldr	r1, [r2, #64]
 382 0020 41F08051 		orr	r1, r1, #268435456
 383 0024 1164     		str	r1, [r2, #64]
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 384              		.loc 1 148 3 view .LVU94
 385 0026 126C     		ldr	r2, [r2, #64]
 386 0028 02F08052 		and	r2, r2, #268435456
 387 002c 0192     		str	r2, [sp, #4]
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 388              		.loc 1 148 3 view .LVU95
 389 002e 019A     		ldr	r2, [sp, #4]
 390              	.LBE9:
 148:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 391              		.loc 1 148 3 view .LVU96
 149:Core/Src/main.c **** 
 392              		.loc 1 149 3 view .LVU97
 393              	.LBB10:
 149:Core/Src/main.c **** 
 394              		.loc 1 149 3 view .LVU98
 395 0030 0293     		str	r3, [sp, #8]
 149:Core/Src/main.c **** 
 396              		.loc 1 149 3 view .LVU99
 397 0032 1B4B     		ldr	r3, .L29+4
 398 0034 1A68     		ldr	r2, [r3]
 399 0036 42F44042 		orr	r2, r2, #49152
 400 003a 1A60     		str	r2, [r3]
 149:Core/Src/main.c **** 
 401              		.loc 1 149 3 view .LVU100
 402 003c 1B68     		ldr	r3, [r3]
 403 003e 03F44043 		and	r3, r3, #49152
 404 0042 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccA6s1DX.s 			page 16


 149:Core/Src/main.c **** 
 405              		.loc 1 149 3 view .LVU101
 406 0044 029B     		ldr	r3, [sp, #8]
 407              	.LBE10:
 149:Core/Src/main.c **** 
 408              		.loc 1 149 3 view .LVU102
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 409              		.loc 1 154 3 view .LVU103
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 410              		.loc 1 154 36 is_stmt 0 view .LVU104
 411 0046 0123     		movs	r3, #1
 412 0048 0893     		str	r3, [sp, #32]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 413              		.loc 1 155 3 is_stmt 1 view .LVU105
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 414              		.loc 1 155 30 is_stmt 0 view .LVU106
 415 004a 4FF48033 		mov	r3, #65536
 416 004e 0993     		str	r3, [sp, #36]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 417              		.loc 1 156 3 is_stmt 1 view .LVU107
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 418              		.loc 1 156 34 is_stmt 0 view .LVU108
 419 0050 0223     		movs	r3, #2
 420 0052 0E93     		str	r3, [sp, #56]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 421              		.loc 1 157 3 is_stmt 1 view .LVU109
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 422              		.loc 1 157 35 is_stmt 0 view .LVU110
 423 0054 4FF48002 		mov	r2, #4194304
 424 0058 0F92     		str	r2, [sp, #60]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 425              		.loc 1 158 3 is_stmt 1 view .LVU111
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 426              		.loc 1 158 30 is_stmt 0 view .LVU112
 427 005a 0C22     		movs	r2, #12
 428 005c 1092     		str	r2, [sp, #64]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 429              		.loc 1 159 3 is_stmt 1 view .LVU113
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 430              		.loc 1 159 30 is_stmt 0 view .LVU114
 431 005e 6022     		movs	r2, #96
 432 0060 1192     		str	r2, [sp, #68]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 433              		.loc 1 160 3 is_stmt 1 view .LVU115
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 434              		.loc 1 160 30 is_stmt 0 view .LVU116
 435 0062 1293     		str	r3, [sp, #72]
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 436              		.loc 1 161 3 is_stmt 1 view .LVU117
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 437              		.loc 1 161 30 is_stmt 0 view .LVU118
 438 0064 0423     		movs	r3, #4
 439 0066 1393     		str	r3, [sp, #76]
 162:Core/Src/main.c ****   {
 440              		.loc 1 162 3 is_stmt 1 view .LVU119
 162:Core/Src/main.c ****   {
 441              		.loc 1 162 7 is_stmt 0 view .LVU120
ARM GAS  /tmp/ccA6s1DX.s 			page 17


 442 0068 08A8     		add	r0, sp, #32
 443 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 444              	.LVL15:
 162:Core/Src/main.c ****   {
 445              		.loc 1 162 6 view .LVU121
 446 006e 88B9     		cbnz	r0, .L27
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 447              		.loc 1 169 3 is_stmt 1 view .LVU122
 169:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 448              		.loc 1 169 31 is_stmt 0 view .LVU123
 449 0070 0F23     		movs	r3, #15
 450 0072 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 451              		.loc 1 171 3 is_stmt 1 view .LVU124
 171:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 452              		.loc 1 171 34 is_stmt 0 view .LVU125
 453 0074 0223     		movs	r3, #2
 454 0076 0493     		str	r3, [sp, #16]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 455              		.loc 1 172 3 is_stmt 1 view .LVU126
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 456              		.loc 1 172 35 is_stmt 0 view .LVU127
 457 0078 0023     		movs	r3, #0
 458 007a 0593     		str	r3, [sp, #20]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 459              		.loc 1 173 3 is_stmt 1 view .LVU128
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 460              		.loc 1 173 36 is_stmt 0 view .LVU129
 461 007c 4FF48052 		mov	r2, #4096
 462 0080 0692     		str	r2, [sp, #24]
 174:Core/Src/main.c **** 
 463              		.loc 1 174 3 is_stmt 1 view .LVU130
 174:Core/Src/main.c **** 
 464              		.loc 1 174 36 is_stmt 0 view .LVU131
 465 0082 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   {
 466              		.loc 1 176 3 is_stmt 1 view .LVU132
 176:Core/Src/main.c ****   {
 467              		.loc 1 176 7 is_stmt 0 view .LVU133
 468 0084 0321     		movs	r1, #3
 469 0086 03A8     		add	r0, sp, #12
 470 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 471              	.LVL16:
 176:Core/Src/main.c ****   {
 472              		.loc 1 176 6 view .LVU134
 473 008c 20B9     		cbnz	r0, .L28
 180:Core/Src/main.c **** 
 474              		.loc 1 180 1 view .LVU135
 475 008e 15B0     		add	sp, sp, #84
 476              	.LCFI9:
 477              		.cfi_remember_state
 478              		.cfi_def_cfa_offset 4
 479              		@ sp needed
 480 0090 5DF804FB 		ldr	pc, [sp], #4
 481              	.L27:
 482              	.LCFI10:
 483              		.cfi_restore_state
ARM GAS  /tmp/ccA6s1DX.s 			page 18


 164:Core/Src/main.c ****   }
 484              		.loc 1 164 5 is_stmt 1 view .LVU136
 485 0094 FFF7FEFF 		bl	Error_Handler
 486              	.LVL17:
 487              	.L28:
 178:Core/Src/main.c ****   }
 488              		.loc 1 178 5 view .LVU137
 489 0098 FFF7FEFF 		bl	Error_Handler
 490              	.LVL18:
 491              	.L30:
 492              		.align	2
 493              	.L29:
 494 009c 00380240 		.word	1073887232
 495 00a0 00700040 		.word	1073770496
 496              		.cfi_endproc
 497              	.LFE135:
 499              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 500              		.align	2
 501              	.LC0:
 502 0000 50657269 		.ascii	"Peripherals Initialised - starting...\000"
 502      70686572 
 502      616C7320 
 502      496E6974 
 502      69616C69 
 503              		.section	.text.main,"ax",%progbits
 504              		.align	1
 505              		.global	main
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv4-sp-d16
 511              	main:
 512              	.LFB134:
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 513              		.loc 1 81 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 38B5     		push	{r3, r4, r5, lr}
 518              	.LCFI11:
 519              		.cfi_def_cfa_offset 16
 520              		.cfi_offset 3, -16
 521              		.cfi_offset 4, -12
 522              		.cfi_offset 5, -8
 523              		.cfi_offset 14, -4
  89:Core/Src/main.c **** 
 524              		.loc 1 89 3 view .LVU139
 525 0002 FFF7FEFF 		bl	HAL_Init
 526              	.LVL19:
  96:Core/Src/main.c **** 
 527              		.loc 1 96 3 view .LVU140
 528 0006 FFF7FEFF 		bl	SystemClock_Config
 529              	.LVL20:
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 530              		.loc 1 103 3 view .LVU141
 531 000a FFF7FEFF 		bl	MX_GPIO_Init
 532              	.LVL21:
ARM GAS  /tmp/ccA6s1DX.s 			page 19


 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 533              		.loc 1 104 3 view .LVU142
 534 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 535              	.LVL22:
 107:Core/Src/main.c **** 
 536              		.loc 1 107 3 view .LVU143
 537 0012 40F6B830 		movw	r0, #3000
 538 0016 FFF7FEFF 		bl	HAL_Delay
 539              	.LVL23:
 109:Core/Src/main.c **** 
 540              		.loc 1 109 3 view .LVU144
 541 001a 0A48     		ldr	r0, .L35
 542 001c FFF7FEFF 		bl	printf
 543              	.LVL24:
 109:Core/Src/main.c **** 
 544              		.loc 1 109 3 view .LVU145
 545 0020 0A20     		movs	r0, #10
 546 0022 FFF7FEFF 		bl	putchar
 547              	.LVL25:
 109:Core/Src/main.c **** 
 548              		.loc 1 109 47 view .LVU146
 116:Core/Src/main.c **** 
 549              		.loc 1 116 3 view .LVU147
 116:Core/Src/main.c **** 
 550              		.loc 1 116 12 is_stmt 0 view .LVU148
 551 0026 0024     		movs	r4, #0
 552              	.LVL26:
 553              	.L33:
 116:Core/Src/main.c **** 
 554              		.loc 1 116 12 view .LVU149
 555 0028 2546     		mov	r5, r4
 556              	.L32:
 557              	.LVL27:
 118:Core/Src/main.c ****   {
 558              		.loc 1 118 3 is_stmt 1 view .LVU150
 121:Core/Src/main.c **** 
 559              		.loc 1 121 5 view .LVU151
 121:Core/Src/main.c **** 
 560              		.loc 1 121 11 is_stmt 0 view .LVU152
 561 002a FFF7FEFF 		bl	HAL_GetTick
 562              	.LVL28:
 563 002e 0446     		mov	r4, r0
 564              	.LVL29:
 123:Core/Src/main.c **** 
 565              		.loc 1 123 5 is_stmt 1 view .LVU153
 123:Core/Src/main.c **** 
 566              		.loc 1 123 13 is_stmt 0 view .LVU154
 567 0030 431B     		subs	r3, r0, r5
 123:Core/Src/main.c **** 
 568              		.loc 1 123 8 view .LVU155
 569 0032 B3F5F97F 		cmp	r3, #498
 570 0036 F8D9     		bls	.L32
 125:Core/Src/main.c **** 
 571              		.loc 1 125 7 is_stmt 1 view .LVU156
 572 0038 4FF40051 		mov	r1, #8192
 573 003c 0248     		ldr	r0, .L35+4
 574              	.LVL30:
ARM GAS  /tmp/ccA6s1DX.s 			page 20


 125:Core/Src/main.c **** 
 575              		.loc 1 125 7 is_stmt 0 view .LVU157
 576 003e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 577              	.LVL31:
 127:Core/Src/main.c ****     }
 578              		.loc 1 127 7 is_stmt 1 view .LVU158
 127:Core/Src/main.c ****     }
 579              		.loc 1 127 7 is_stmt 0 view .LVU159
 580 0042 F1E7     		b	.L33
 581              	.L36:
 582              		.align	2
 583              	.L35:
 584 0044 00000000 		.word	.LC0
 585 0048 00080240 		.word	1073874944
 586              		.cfi_endproc
 587              	.LFE134:
 589              		.section	.text.assert_failed,"ax",%progbits
 590              		.align	1
 591              		.global	assert_failed
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	assert_failed:
 598              	.LVL32:
 599              	.LFB139:
 263:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 264:Core/Src/main.c **** }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 267:Core/Src/main.c **** /**
 268:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 269:Core/Src/main.c ****   *         where the assert_param error has occurred.
 270:Core/Src/main.c ****   * @param  file: pointer to the source file name
 271:Core/Src/main.c ****   * @param  line: assert_param error line source number
 272:Core/Src/main.c ****   * @retval None
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 275:Core/Src/main.c **** {
 600              		.loc 1 275 1 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 276:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 277:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 278:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 279:Core/Src/main.c ****   /* USER CODE END 6 */
 280:Core/Src/main.c **** }
 605              		.loc 1 280 1 view .LVU161
 606 0000 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE139:
 610              		.global	huart1
 611              		.section	.bss.huart1,"aw",%nobits
 612              		.align	2
 613              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccA6s1DX.s 			page 21


 616              	huart1:
 617 0000 00000000 		.space	68
 617      00000000 
 617      00000000 
 617      00000000 
 617      00000000 
 618              		.text
 619              	.Letext0:
 620              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 621              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 622              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 623              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 624              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 625              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 626              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 627              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 628              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 629              		.file 12 "/usr/include/newlib/stdio.h"
 630              		.file 13 "<built-in>"
ARM GAS  /tmp/ccA6s1DX.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccA6s1DX.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccA6s1DX.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccA6s1DX.s:149    .text.MX_GPIO_Init:000000000000008c $d
     /tmp/ccA6s1DX.s:156    .text._write:0000000000000000 $t
     /tmp/ccA6s1DX.s:163    .text._write:0000000000000000 _write
     /tmp/ccA6s1DX.s:229    .text._write:0000000000000028 $d
     /tmp/ccA6s1DX.s:234    .text.Error_Handler:0000000000000000 $t
     /tmp/ccA6s1DX.s:241    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccA6s1DX.s:273    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccA6s1DX.s:279    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccA6s1DX.s:334    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccA6s1DX.s:340    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccA6s1DX.s:347    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccA6s1DX.s:494    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccA6s1DX.s:500    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccA6s1DX.s:504    .text.main:0000000000000000 $t
     /tmp/ccA6s1DX.s:511    .text.main:0000000000000000 main
     /tmp/ccA6s1DX.s:584    .text.main:0000000000000044 $d
     /tmp/ccA6s1DX.s:590    .text.assert_failed:0000000000000000 $t
     /tmp/ccA6s1DX.s:597    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccA6s1DX.s:616    .bss.huart1:0000000000000000 huart1
     /tmp/ccA6s1DX.s:612    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
printf
putchar
HAL_GetTick
HAL_GPIO_TogglePin
