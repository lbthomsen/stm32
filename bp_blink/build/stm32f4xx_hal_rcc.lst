ARM GAS  /tmp/ccVXDFiv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  /tmp/ccVXDFiv.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the root directory of this software component.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  /tmp/ccVXDFiv.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
ARM GAS  /tmp/ccVXDFiv.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccVXDFiv.s 			page 5


  29              		.loc 1 201 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 202 10
  42 0004 0023     		movs	r3, #0
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 203 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE130:
  57              		.section	.rodata
  58              		.align	2
  59              	.LC0:
  60 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc."
  60      6572732F 
  60      53544D33 
  60      32463478 
  60      785F4841 
  61 0033 6300     		.ascii	"c\000"
  62              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  63              		.align	1
  64              		.weak	HAL_RCC_OscConfig
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	HAL_RCC_OscConfig:
  71              	.LFB131:
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
ARM GAS  /tmp/ccVXDFiv.s 			page 6


 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  72              		.loc 1 220 1
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 24
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76 0000 80B5     		push	{r7, lr}
  77              	.LCFI4:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
  81 0002 86B0     		sub	sp, sp, #24
  82              	.LCFI5:
  83              		.cfi_def_cfa_offset 32
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI6:
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  88              		.loc 1 224 5
  89 0008 7B68     		ldr	r3, [r7, #4]
  90 000a 002B     		cmp	r3, #0
  91 000c 01D1     		bne	.L4
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  92              		.loc 1 226 12
  93 000e 0123     		movs	r3, #1
  94 0010 14E3     		b	.L5
  95              	.L4:
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  96              		.loc 1 230 3
  97 0012 7B68     		ldr	r3, [r7, #4]
  98 0014 1B68     		ldr	r3, [r3]
  99 0016 0F2B     		cmp	r3, #15
 100 0018 03D9     		bls	.L6
 101              		.loc 1 230 3 is_stmt 0 discriminator 1
 102 001a E621     		movs	r1, #230
 103 001c 9748     		ldr	r0, .L73
 104 001e FFF7FEFF 		bl	assert_failed
 105              	.L6:
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 106              		.loc 1 232 25 is_stmt 1
 107 0022 7B68     		ldr	r3, [r7, #4]
 108 0024 1B68     		ldr	r3, [r3]
 109              		.loc 1 232 43
ARM GAS  /tmp/ccVXDFiv.s 			page 7


 110 0026 03F00103 		and	r3, r3, #1
 111              		.loc 1 232 5
 112 002a 002B     		cmp	r3, #0
 113 002c 00F08880 		beq	.L7
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 114              		.loc 1 235 5
 115 0030 7B68     		ldr	r3, [r7, #4]
 116 0032 5B68     		ldr	r3, [r3, #4]
 117 0034 002B     		cmp	r3, #0
 118 0036 0DD0     		beq	.L8
 119              		.loc 1 235 5 is_stmt 0 discriminator 1
 120 0038 7B68     		ldr	r3, [r7, #4]
 121 003a 5B68     		ldr	r3, [r3, #4]
 122 003c B3F5803F 		cmp	r3, #65536
 123 0040 08D0     		beq	.L8
 124              		.loc 1 235 5 discriminator 2
 125 0042 7B68     		ldr	r3, [r7, #4]
 126 0044 5B68     		ldr	r3, [r3, #4]
 127 0046 B3F5A02F 		cmp	r3, #327680
 128 004a 03D0     		beq	.L8
 129              		.loc 1 235 5 discriminator 3
 130 004c EB21     		movs	r1, #235
 131 004e 8B48     		ldr	r0, .L73
 132 0050 FFF7FEFF 		bl	assert_failed
 133              	.L8:
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 134              		.loc 1 237 9 is_stmt 1
 135 0054 8A4B     		ldr	r3, .L73+4
 136 0056 9B68     		ldr	r3, [r3, #8]
 137 0058 03F00C03 		and	r3, r3, #12
 138              		.loc 1 237 7
 139 005c 042B     		cmp	r3, #4
 140 005e 0CD0     		beq	.L9
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 141              		.loc 1 238 9 discriminator 1
 142 0060 874B     		ldr	r3, .L73+4
 143 0062 9B68     		ldr	r3, [r3, #8]
 144 0064 03F00C03 		and	r3, r3, #12
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 145              		.loc 1 237 60 discriminator 1
 146 0068 082B     		cmp	r3, #8
 147 006a 12D1     		bne	.L10
 148              		.loc 1 238 68
 149 006c 844B     		ldr	r3, .L73+4
 150 006e 5B68     		ldr	r3, [r3, #4]
 151              		.loc 1 238 78
 152 0070 03F48003 		and	r3, r3, #4194304
 153              		.loc 1 238 60
 154 0074 B3F5800F 		cmp	r3, #4194304
 155 0078 0BD1     		bne	.L10
 156              	.L9:
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 157              		.loc 1 240 11
ARM GAS  /tmp/ccVXDFiv.s 			page 8


 158 007a 814B     		ldr	r3, .L73+4
 159 007c 1B68     		ldr	r3, [r3]
 160 007e 03F40033 		and	r3, r3, #131072
 161              		.loc 1 240 9
 162 0082 002B     		cmp	r3, #0
 163 0084 5BD0     		beq	.L72
 164              		.loc 1 240 78 discriminator 1
 165 0086 7B68     		ldr	r3, [r7, #4]
 166 0088 5B68     		ldr	r3, [r3, #4]
 167              		.loc 1 240 57 discriminator 1
 168 008a 002B     		cmp	r3, #0
 169 008c 57D1     		bne	.L72
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 170              		.loc 1 242 16
 171 008e 0123     		movs	r3, #1
 172 0090 D4E2     		b	.L5
 173              	.L10:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 174              		.loc 1 248 7
 175 0092 7B68     		ldr	r3, [r7, #4]
 176 0094 5B68     		ldr	r3, [r3, #4]
 177 0096 B3F5803F 		cmp	r3, #65536
 178 009a 06D1     		bne	.L12
 179              		.loc 1 248 7 is_stmt 0 discriminator 1
 180 009c 784B     		ldr	r3, .L73+4
 181 009e 1B68     		ldr	r3, [r3]
 182 00a0 774A     		ldr	r2, .L73+4
 183 00a2 43F48033 		orr	r3, r3, #65536
 184 00a6 1360     		str	r3, [r2]
 185 00a8 1DE0     		b	.L13
 186              	.L12:
 187              		.loc 1 248 7 discriminator 2
 188 00aa 7B68     		ldr	r3, [r7, #4]
 189 00ac 5B68     		ldr	r3, [r3, #4]
 190 00ae B3F5A02F 		cmp	r3, #327680
 191 00b2 0CD1     		bne	.L14
 192              		.loc 1 248 7 discriminator 3
 193 00b4 724B     		ldr	r3, .L73+4
 194 00b6 1B68     		ldr	r3, [r3]
 195 00b8 714A     		ldr	r2, .L73+4
 196 00ba 43F48023 		orr	r3, r3, #262144
 197 00be 1360     		str	r3, [r2]
 198 00c0 6F4B     		ldr	r3, .L73+4
 199 00c2 1B68     		ldr	r3, [r3]
 200 00c4 6E4A     		ldr	r2, .L73+4
 201 00c6 43F48033 		orr	r3, r3, #65536
 202 00ca 1360     		str	r3, [r2]
 203 00cc 0BE0     		b	.L13
 204              	.L14:
 205              		.loc 1 248 7 discriminator 4
 206 00ce 6C4B     		ldr	r3, .L73+4
ARM GAS  /tmp/ccVXDFiv.s 			page 9


 207 00d0 1B68     		ldr	r3, [r3]
 208 00d2 6B4A     		ldr	r2, .L73+4
 209 00d4 23F48033 		bic	r3, r3, #65536
 210 00d8 1360     		str	r3, [r2]
 211 00da 694B     		ldr	r3, .L73+4
 212 00dc 1B68     		ldr	r3, [r3]
 213 00de 684A     		ldr	r2, .L73+4
 214 00e0 23F48023 		bic	r3, r3, #262144
 215 00e4 1360     		str	r3, [r2]
 216              	.L13:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 217              		.loc 1 251 28 is_stmt 1
 218 00e6 7B68     		ldr	r3, [r7, #4]
 219 00e8 5B68     		ldr	r3, [r3, #4]
 220              		.loc 1 251 9
 221 00ea 002B     		cmp	r3, #0
 222 00ec 13D0     		beq	.L15
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 223              		.loc 1 254 21
 224 00ee FFF7FEFF 		bl	HAL_GetTick
 225 00f2 3861     		str	r0, [r7, #16]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 226              		.loc 1 257 14
 227 00f4 08E0     		b	.L16
 228              	.L17:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 229              		.loc 1 259 15
 230 00f6 FFF7FEFF 		bl	HAL_GetTick
 231 00fa 0246     		mov	r2, r0
 232              		.loc 1 259 29
 233 00fc 3B69     		ldr	r3, [r7, #16]
 234 00fe D31A     		subs	r3, r2, r3
 235              		.loc 1 259 13
 236 0100 642B     		cmp	r3, #100
 237 0102 01D9     		bls	.L16
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 238              		.loc 1 261 20
 239 0104 0323     		movs	r3, #3
 240 0106 99E2     		b	.L5
 241              	.L16:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 242              		.loc 1 257 15
 243 0108 5D4B     		ldr	r3, .L73+4
 244 010a 1B68     		ldr	r3, [r3]
 245 010c 03F40033 		and	r3, r3, #131072
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 246              		.loc 1 257 14
 247 0110 002B     		cmp	r3, #0
 248 0112 F0D0     		beq	.L17
ARM GAS  /tmp/ccVXDFiv.s 			page 10


 249 0114 14E0     		b	.L7
 250              	.L15:
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 251              		.loc 1 268 21
 252 0116 FFF7FEFF 		bl	HAL_GetTick
 253 011a 3861     		str	r0, [r7, #16]
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 254              		.loc 1 271 14
 255 011c 08E0     		b	.L18
 256              	.L19:
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 257              		.loc 1 273 15
 258 011e FFF7FEFF 		bl	HAL_GetTick
 259 0122 0246     		mov	r2, r0
 260              		.loc 1 273 29
 261 0124 3B69     		ldr	r3, [r7, #16]
 262 0126 D31A     		subs	r3, r2, r3
 263              		.loc 1 273 13
 264 0128 642B     		cmp	r3, #100
 265 012a 01D9     		bls	.L18
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 266              		.loc 1 275 20
 267 012c 0323     		movs	r3, #3
 268 012e 85E2     		b	.L5
 269              	.L18:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 270              		.loc 1 271 15
 271 0130 534B     		ldr	r3, .L73+4
 272 0132 1B68     		ldr	r3, [r3]
 273 0134 03F40033 		and	r3, r3, #131072
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 274              		.loc 1 271 14
 275 0138 002B     		cmp	r3, #0
 276 013a F0D1     		bne	.L19
 277 013c 00E0     		b	.L7
 278              	.L72:
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 279              		.loc 1 240 9
 280 013e 00BF     		nop
 281              	.L7:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
ARM GAS  /tmp/ccVXDFiv.s 			page 11


 282              		.loc 1 282 25
 283 0140 7B68     		ldr	r3, [r7, #4]
 284 0142 1B68     		ldr	r3, [r3]
 285              		.loc 1 282 43
 286 0144 03F00203 		and	r3, r3, #2
 287              		.loc 1 282 5
 288 0148 002B     		cmp	r3, #0
 289 014a 79D0     		beq	.L20
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 290              		.loc 1 285 5
 291 014c 7B68     		ldr	r3, [r7, #4]
 292 014e DB68     		ldr	r3, [r3, #12]
 293 0150 002B     		cmp	r3, #0
 294 0152 08D0     		beq	.L21
 295              		.loc 1 285 5 is_stmt 0 discriminator 1
 296 0154 7B68     		ldr	r3, [r7, #4]
 297 0156 DB68     		ldr	r3, [r3, #12]
 298 0158 012B     		cmp	r3, #1
 299 015a 04D0     		beq	.L21
 300              		.loc 1 285 5 discriminator 2
 301 015c 40F21D11 		movw	r1, #285
 302 0160 4648     		ldr	r0, .L73
 303 0162 FFF7FEFF 		bl	assert_failed
 304              	.L21:
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 305              		.loc 1 286 5 is_stmt 1
 306 0166 7B68     		ldr	r3, [r7, #4]
 307 0168 1B69     		ldr	r3, [r3, #16]
 308 016a 1F2B     		cmp	r3, #31
 309 016c 04D9     		bls	.L22
 310              		.loc 1 286 5 is_stmt 0 discriminator 1
 311 016e 4FF48F71 		mov	r1, #286
 312 0172 4248     		ldr	r0, .L73
 313 0174 FFF7FEFF 		bl	assert_failed
 314              	.L22:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 315              		.loc 1 289 9 is_stmt 1
 316 0178 414B     		ldr	r3, .L73+4
 317 017a 9B68     		ldr	r3, [r3, #8]
 318 017c 03F00C03 		and	r3, r3, #12
 319              		.loc 1 289 7
 320 0180 002B     		cmp	r3, #0
 321 0182 0BD0     		beq	.L23
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 322              		.loc 1 290 9 discriminator 1
 323 0184 3E4B     		ldr	r3, .L73+4
 324 0186 9B68     		ldr	r3, [r3, #8]
 325 0188 03F00C03 		and	r3, r3, #12
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 326              		.loc 1 289 60 discriminator 1
 327 018c 082B     		cmp	r3, #8
 328 018e 1CD1     		bne	.L24
 329              		.loc 1 290 68
ARM GAS  /tmp/ccVXDFiv.s 			page 12


 330 0190 3B4B     		ldr	r3, .L73+4
 331 0192 5B68     		ldr	r3, [r3, #4]
 332              		.loc 1 290 78
 333 0194 03F48003 		and	r3, r3, #4194304
 334              		.loc 1 290 60
 335 0198 002B     		cmp	r3, #0
 336 019a 16D1     		bne	.L24
 337              	.L23:
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 338              		.loc 1 293 11
 339 019c 384B     		ldr	r3, .L73+4
 340 019e 1B68     		ldr	r3, [r3]
 341 01a0 03F00203 		and	r3, r3, #2
 342              		.loc 1 293 9
 343 01a4 002B     		cmp	r3, #0
 344 01a6 05D0     		beq	.L25
 345              		.loc 1 293 78 discriminator 1
 346 01a8 7B68     		ldr	r3, [r7, #4]
 347 01aa DB68     		ldr	r3, [r3, #12]
 348              		.loc 1 293 57 discriminator 1
 349 01ac 012B     		cmp	r3, #1
 350 01ae 01D0     		beq	.L25
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 351              		.loc 1 295 16
 352 01b0 0123     		movs	r3, #1
 353 01b2 43E2     		b	.L5
 354              	.L25:
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 355              		.loc 1 301 9
 356 01b4 324B     		ldr	r3, .L73+4
 357 01b6 1B68     		ldr	r3, [r3]
 358 01b8 23F0F802 		bic	r2, r3, #248
 359 01bc 7B68     		ldr	r3, [r7, #4]
 360 01be 1B69     		ldr	r3, [r3, #16]
 361 01c0 DB00     		lsls	r3, r3, #3
 362 01c2 2F49     		ldr	r1, .L73+4
 363 01c4 1343     		orrs	r3, r3, r2
 364 01c6 0B60     		str	r3, [r1]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 365              		.loc 1 293 9
 366 01c8 3AE0     		b	.L20
 367              	.L24:
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 368              		.loc 1 307 28
ARM GAS  /tmp/ccVXDFiv.s 			page 13


 369 01ca 7B68     		ldr	r3, [r7, #4]
 370 01cc DB68     		ldr	r3, [r3, #12]
 371              		.loc 1 307 9
 372 01ce 002B     		cmp	r3, #0
 373 01d0 20D0     		beq	.L26
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 374              		.loc 1 310 9
 375 01d2 2C4B     		ldr	r3, .L73+8
 376 01d4 0122     		movs	r2, #1
 377 01d6 1A60     		str	r2, [r3]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 378              		.loc 1 313 21
 379 01d8 FFF7FEFF 		bl	HAL_GetTick
 380 01dc 3861     		str	r0, [r7, #16]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 381              		.loc 1 316 14
 382 01de 08E0     		b	.L27
 383              	.L28:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 384              		.loc 1 318 15
 385 01e0 FFF7FEFF 		bl	HAL_GetTick
 386 01e4 0246     		mov	r2, r0
 387              		.loc 1 318 29
 388 01e6 3B69     		ldr	r3, [r7, #16]
 389 01e8 D31A     		subs	r3, r2, r3
 390              		.loc 1 318 13
 391 01ea 022B     		cmp	r3, #2
 392 01ec 01D9     		bls	.L27
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 393              		.loc 1 320 20
 394 01ee 0323     		movs	r3, #3
 395 01f0 24E2     		b	.L5
 396              	.L27:
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 397              		.loc 1 316 15
 398 01f2 234B     		ldr	r3, .L73+4
 399 01f4 1B68     		ldr	r3, [r3]
 400 01f6 03F00203 		and	r3, r3, #2
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 401              		.loc 1 316 14
 402 01fa 002B     		cmp	r3, #0
 403 01fc F0D0     		beq	.L28
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 404              		.loc 1 325 9
 405 01fe 204B     		ldr	r3, .L73+4
ARM GAS  /tmp/ccVXDFiv.s 			page 14


 406 0200 1B68     		ldr	r3, [r3]
 407 0202 23F0F802 		bic	r2, r3, #248
 408 0206 7B68     		ldr	r3, [r7, #4]
 409 0208 1B69     		ldr	r3, [r3, #16]
 410 020a DB00     		lsls	r3, r3, #3
 411 020c 1C49     		ldr	r1, .L73+4
 412 020e 1343     		orrs	r3, r3, r2
 413 0210 0B60     		str	r3, [r1]
 414 0212 15E0     		b	.L20
 415              	.L26:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 416              		.loc 1 330 9
 417 0214 1B4B     		ldr	r3, .L73+8
 418 0216 0022     		movs	r2, #0
 419 0218 1A60     		str	r2, [r3]
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 420              		.loc 1 333 21
 421 021a FFF7FEFF 		bl	HAL_GetTick
 422 021e 3861     		str	r0, [r7, #16]
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 423              		.loc 1 336 14
 424 0220 08E0     		b	.L29
 425              	.L30:
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 426              		.loc 1 338 15
 427 0222 FFF7FEFF 		bl	HAL_GetTick
 428 0226 0246     		mov	r2, r0
 429              		.loc 1 338 29
 430 0228 3B69     		ldr	r3, [r7, #16]
 431 022a D31A     		subs	r3, r2, r3
 432              		.loc 1 338 13
 433 022c 022B     		cmp	r3, #2
 434 022e 01D9     		bls	.L29
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 435              		.loc 1 340 20
 436 0230 0323     		movs	r3, #3
 437 0232 03E2     		b	.L5
 438              	.L29:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 439              		.loc 1 336 15
 440 0234 124B     		ldr	r3, .L73+4
 441 0236 1B68     		ldr	r3, [r3]
 442 0238 03F00203 		and	r3, r3, #2
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 443              		.loc 1 336 14
 444 023c 002B     		cmp	r3, #0
 445 023e F0D1     		bne	.L30
ARM GAS  /tmp/ccVXDFiv.s 			page 15


 446              	.L20:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 447              		.loc 1 347 25
 448 0240 7B68     		ldr	r3, [r7, #4]
 449 0242 1B68     		ldr	r3, [r3]
 450              		.loc 1 347 43
 451 0244 03F00803 		and	r3, r3, #8
 452              		.loc 1 347 5
 453 0248 002B     		cmp	r3, #0
 454 024a 45D0     		beq	.L31
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 455              		.loc 1 350 5
 456 024c 7B68     		ldr	r3, [r7, #4]
 457 024e 5B69     		ldr	r3, [r3, #20]
 458 0250 002B     		cmp	r3, #0
 459 0252 08D0     		beq	.L32
 460              		.loc 1 350 5 is_stmt 0 discriminator 1
 461 0254 7B68     		ldr	r3, [r7, #4]
 462 0256 5B69     		ldr	r3, [r3, #20]
 463 0258 012B     		cmp	r3, #1
 464 025a 04D0     		beq	.L32
 465              		.loc 1 350 5 discriminator 2
 466 025c 4FF4AF71 		mov	r1, #350
 467 0260 0648     		ldr	r0, .L73
 468 0262 FFF7FEFF 		bl	assert_failed
 469              	.L32:
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 470              		.loc 1 353 26 is_stmt 1
 471 0266 7B68     		ldr	r3, [r7, #4]
 472 0268 5B69     		ldr	r3, [r3, #20]
 473              		.loc 1 353 7
 474 026a 002B     		cmp	r3, #0
 475 026c 1ED0     		beq	.L33
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 476              		.loc 1 356 7
 477 026e 064B     		ldr	r3, .L73+12
 478 0270 0122     		movs	r2, #1
 479 0272 1A60     		str	r2, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 480              		.loc 1 359 19
 481 0274 FFF7FEFF 		bl	HAL_GetTick
 482 0278 3861     		str	r0, [r7, #16]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVXDFiv.s 			page 16


 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 483              		.loc 1 362 12
 484 027a 10E0     		b	.L34
 485              	.L74:
 486              		.align	2
 487              	.L73:
 488 027c 00000000 		.word	.LC0
 489 0280 00380240 		.word	1073887232
 490 0284 00004742 		.word	1111949312
 491 0288 800E4742 		.word	1111953024
 492              	.L35:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 493              		.loc 1 364 13
 494 028c FFF7FEFF 		bl	HAL_GetTick
 495 0290 0246     		mov	r2, r0
 496              		.loc 1 364 27
 497 0292 3B69     		ldr	r3, [r7, #16]
 498 0294 D31A     		subs	r3, r2, r3
 499              		.loc 1 364 11
 500 0296 022B     		cmp	r3, #2
 501 0298 01D9     		bls	.L34
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 502              		.loc 1 366 18
 503 029a 0323     		movs	r3, #3
 504 029c CEE1     		b	.L5
 505              	.L34:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 506              		.loc 1 362 13
 507 029e 5E4B     		ldr	r3, .L75
 508 02a0 5B6F     		ldr	r3, [r3, #116]
 509 02a2 03F00203 		and	r3, r3, #2
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 510              		.loc 1 362 12
 511 02a6 002B     		cmp	r3, #0
 512 02a8 F0D0     		beq	.L35
 513 02aa 15E0     		b	.L31
 514              	.L33:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 515              		.loc 1 373 7
 516 02ac 5B4B     		ldr	r3, .L75+4
 517 02ae 0022     		movs	r2, #0
 518 02b0 1A60     		str	r2, [r3]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 519              		.loc 1 376 19
 520 02b2 FFF7FEFF 		bl	HAL_GetTick
 521 02b6 3861     		str	r0, [r7, #16]
ARM GAS  /tmp/ccVXDFiv.s 			page 17


 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 522              		.loc 1 379 12
 523 02b8 08E0     		b	.L36
 524              	.L37:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 525              		.loc 1 381 13
 526 02ba FFF7FEFF 		bl	HAL_GetTick
 527 02be 0246     		mov	r2, r0
 528              		.loc 1 381 27
 529 02c0 3B69     		ldr	r3, [r7, #16]
 530 02c2 D31A     		subs	r3, r2, r3
 531              		.loc 1 381 11
 532 02c4 022B     		cmp	r3, #2
 533 02c6 01D9     		bls	.L36
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 534              		.loc 1 383 18
 535 02c8 0323     		movs	r3, #3
 536 02ca B7E1     		b	.L5
 537              	.L36:
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 538              		.loc 1 379 13
 539 02cc 524B     		ldr	r3, .L75
 540 02ce 5B6F     		ldr	r3, [r3, #116]
 541 02d0 03F00203 		and	r3, r3, #2
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 542              		.loc 1 379 12
 543 02d4 002B     		cmp	r3, #0
 544 02d6 F0D1     		bne	.L37
 545              	.L31:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 546              		.loc 1 389 25
 547 02d8 7B68     		ldr	r3, [r7, #4]
 548 02da 1B68     		ldr	r3, [r3]
 549              		.loc 1 389 43
 550 02dc 03F00403 		and	r3, r3, #4
 551              		.loc 1 389 5
 552 02e0 002B     		cmp	r3, #0
 553 02e2 00F0B080 		beq	.L38
 554              	.LBB2:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 555              		.loc 1 391 22
 556 02e6 0023     		movs	r3, #0
 557 02e8 FB75     		strb	r3, [r7, #23]
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 558              		.loc 1 394 5
ARM GAS  /tmp/ccVXDFiv.s 			page 18


 559 02ea 7B68     		ldr	r3, [r7, #4]
 560 02ec 9B68     		ldr	r3, [r3, #8]
 561 02ee 002B     		cmp	r3, #0
 562 02f0 0CD0     		beq	.L39
 563              		.loc 1 394 5 is_stmt 0 discriminator 1
 564 02f2 7B68     		ldr	r3, [r7, #4]
 565 02f4 9B68     		ldr	r3, [r3, #8]
 566 02f6 012B     		cmp	r3, #1
 567 02f8 08D0     		beq	.L39
 568              		.loc 1 394 5 discriminator 2
 569 02fa 7B68     		ldr	r3, [r7, #4]
 570 02fc 9B68     		ldr	r3, [r3, #8]
 571 02fe 052B     		cmp	r3, #5
 572 0300 04D0     		beq	.L39
 573              		.loc 1 394 5 discriminator 3
 574 0302 4FF4C571 		mov	r1, #394
 575 0306 4648     		ldr	r0, .L75+8
 576 0308 FFF7FEFF 		bl	assert_failed
 577              	.L39:
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 578              		.loc 1 398 8 is_stmt 1
 579 030c 424B     		ldr	r3, .L75
 580 030e 1B6C     		ldr	r3, [r3, #64]
 581 0310 03F08053 		and	r3, r3, #268435456
 582              		.loc 1 398 7
 583 0314 002B     		cmp	r3, #0
 584 0316 0FD1     		bne	.L40
 585              	.LBB3:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 586              		.loc 1 400 7
 587 0318 0023     		movs	r3, #0
 588 031a BB60     		str	r3, [r7, #8]
 589 031c 3E4B     		ldr	r3, .L75
 590 031e 1B6C     		ldr	r3, [r3, #64]
 591 0320 3D4A     		ldr	r2, .L75
 592 0322 43F08053 		orr	r3, r3, #268435456
 593 0326 1364     		str	r3, [r2, #64]
 594 0328 3B4B     		ldr	r3, .L75
 595 032a 1B6C     		ldr	r3, [r3, #64]
 596 032c 03F08053 		and	r3, r3, #268435456
 597 0330 BB60     		str	r3, [r7, #8]
 598 0332 BB68     		ldr	r3, [r7, #8]
 599              	.LBE3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 600              		.loc 1 401 21
 601 0334 0123     		movs	r3, #1
 602 0336 FB75     		strb	r3, [r7, #23]
 603              	.L40:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 604              		.loc 1 404 8
 605 0338 3A4B     		ldr	r3, .L75+12
ARM GAS  /tmp/ccVXDFiv.s 			page 19


 606 033a 1B68     		ldr	r3, [r3]
 607 033c 03F48073 		and	r3, r3, #256
 608              		.loc 1 404 7
 609 0340 002B     		cmp	r3, #0
 610 0342 18D1     		bne	.L41
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 611              		.loc 1 407 7
 612 0344 374B     		ldr	r3, .L75+12
 613 0346 1B68     		ldr	r3, [r3]
 614 0348 364A     		ldr	r2, .L75+12
 615 034a 43F48073 		orr	r3, r3, #256
 616 034e 1360     		str	r3, [r2]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 617              		.loc 1 410 19
 618 0350 FFF7FEFF 		bl	HAL_GetTick
 619 0354 3861     		str	r0, [r7, #16]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 620              		.loc 1 412 12
 621 0356 08E0     		b	.L42
 622              	.L43:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 623              		.loc 1 414 13
 624 0358 FFF7FEFF 		bl	HAL_GetTick
 625 035c 0246     		mov	r2, r0
 626              		.loc 1 414 27
 627 035e 3B69     		ldr	r3, [r7, #16]
 628 0360 D31A     		subs	r3, r2, r3
 629              		.loc 1 414 11
 630 0362 022B     		cmp	r3, #2
 631 0364 01D9     		bls	.L42
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 632              		.loc 1 416 18
 633 0366 0323     		movs	r3, #3
 634 0368 68E1     		b	.L5
 635              	.L42:
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 636              		.loc 1 412 13
 637 036a 2E4B     		ldr	r3, .L75+12
 638 036c 1B68     		ldr	r3, [r3]
 639 036e 03F48073 		and	r3, r3, #256
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 640              		.loc 1 412 12
 641 0372 002B     		cmp	r3, #0
 642 0374 F0D0     		beq	.L43
 643              	.L41:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
ARM GAS  /tmp/ccVXDFiv.s 			page 20


 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 644              		.loc 1 422 5
 645 0376 7B68     		ldr	r3, [r7, #4]
 646 0378 9B68     		ldr	r3, [r3, #8]
 647 037a 012B     		cmp	r3, #1
 648 037c 06D1     		bne	.L44
 649              		.loc 1 422 5 is_stmt 0 discriminator 1
 650 037e 264B     		ldr	r3, .L75
 651 0380 1B6F     		ldr	r3, [r3, #112]
 652 0382 254A     		ldr	r2, .L75
 653 0384 43F00103 		orr	r3, r3, #1
 654 0388 1367     		str	r3, [r2, #112]
 655 038a 1CE0     		b	.L45
 656              	.L44:
 657              		.loc 1 422 5 discriminator 2
 658 038c 7B68     		ldr	r3, [r7, #4]
 659 038e 9B68     		ldr	r3, [r3, #8]
 660 0390 052B     		cmp	r3, #5
 661 0392 0CD1     		bne	.L46
 662              		.loc 1 422 5 discriminator 3
 663 0394 204B     		ldr	r3, .L75
 664 0396 1B6F     		ldr	r3, [r3, #112]
 665 0398 1F4A     		ldr	r2, .L75
 666 039a 43F00403 		orr	r3, r3, #4
 667 039e 1367     		str	r3, [r2, #112]
 668 03a0 1D4B     		ldr	r3, .L75
 669 03a2 1B6F     		ldr	r3, [r3, #112]
 670 03a4 1C4A     		ldr	r2, .L75
 671 03a6 43F00103 		orr	r3, r3, #1
 672 03aa 1367     		str	r3, [r2, #112]
 673 03ac 0BE0     		b	.L45
 674              	.L46:
 675              		.loc 1 422 5 discriminator 4
 676 03ae 1A4B     		ldr	r3, .L75
 677 03b0 1B6F     		ldr	r3, [r3, #112]
 678 03b2 194A     		ldr	r2, .L75
 679 03b4 23F00103 		bic	r3, r3, #1
 680 03b8 1367     		str	r3, [r2, #112]
 681 03ba 174B     		ldr	r3, .L75
 682 03bc 1B6F     		ldr	r3, [r3, #112]
 683 03be 164A     		ldr	r2, .L75
 684 03c0 23F00403 		bic	r3, r3, #4
 685 03c4 1367     		str	r3, [r2, #112]
 686              	.L45:
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 687              		.loc 1 424 26 is_stmt 1
 688 03c6 7B68     		ldr	r3, [r7, #4]
 689 03c8 9B68     		ldr	r3, [r3, #8]
 690              		.loc 1 424 7
 691 03ca 002B     		cmp	r3, #0
 692 03cc 15D0     		beq	.L47
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 693              		.loc 1 427 19
 694 03ce FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccVXDFiv.s 			page 21


 695 03d2 3861     		str	r0, [r7, #16]
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 696              		.loc 1 430 12
 697 03d4 0AE0     		b	.L48
 698              	.L49:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 699              		.loc 1 432 13
 700 03d6 FFF7FEFF 		bl	HAL_GetTick
 701 03da 0246     		mov	r2, r0
 702              		.loc 1 432 27
 703 03dc 3B69     		ldr	r3, [r7, #16]
 704 03de D31A     		subs	r3, r2, r3
 705              		.loc 1 432 11
 706 03e0 41F28832 		movw	r2, #5000
 707 03e4 9342     		cmp	r3, r2
 708 03e6 01D9     		bls	.L48
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 709              		.loc 1 434 18
 710 03e8 0323     		movs	r3, #3
 711 03ea 27E1     		b	.L5
 712              	.L48:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 713              		.loc 1 430 13
 714 03ec 0A4B     		ldr	r3, .L75
 715 03ee 1B6F     		ldr	r3, [r3, #112]
 716 03f0 03F00203 		and	r3, r3, #2
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 717              		.loc 1 430 12
 718 03f4 002B     		cmp	r3, #0
 719 03f6 EED0     		beq	.L49
 720 03f8 1CE0     		b	.L50
 721              	.L47:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 722              		.loc 1 441 19
 723 03fa FFF7FEFF 		bl	HAL_GetTick
 724 03fe 3861     		str	r0, [r7, #16]
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 725              		.loc 1 444 12
 726 0400 12E0     		b	.L51
 727              	.L52:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 728              		.loc 1 446 13
 729 0402 FFF7FEFF 		bl	HAL_GetTick
 730 0406 0246     		mov	r2, r0
ARM GAS  /tmp/ccVXDFiv.s 			page 22


 731              		.loc 1 446 27
 732 0408 3B69     		ldr	r3, [r7, #16]
 733 040a D31A     		subs	r3, r2, r3
 734              		.loc 1 446 11
 735 040c 41F28832 		movw	r2, #5000
 736 0410 9342     		cmp	r3, r2
 737 0412 09D9     		bls	.L51
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 738              		.loc 1 448 18
 739 0414 0323     		movs	r3, #3
 740 0416 11E1     		b	.L5
 741              	.L76:
 742              		.align	2
 743              	.L75:
 744 0418 00380240 		.word	1073887232
 745 041c 800E4742 		.word	1111953024
 746 0420 00000000 		.word	.LC0
 747 0424 00700040 		.word	1073770496
 748              	.L51:
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 749              		.loc 1 444 13
 750 0428 864B     		ldr	r3, .L77
 751 042a 1B6F     		ldr	r3, [r3, #112]
 752 042c 03F00203 		and	r3, r3, #2
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 753              		.loc 1 444 12
 754 0430 002B     		cmp	r3, #0
 755 0432 E6D1     		bne	.L52
 756              	.L50:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 757              		.loc 1 454 7
 758 0434 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 759 0436 012B     		cmp	r3, #1
 760 0438 05D1     		bne	.L38
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 761              		.loc 1 456 7
 762 043a 824B     		ldr	r3, .L77
 763 043c 1B6C     		ldr	r3, [r3, #64]
 764 043e 814A     		ldr	r2, .L77
 765 0440 23F08053 		bic	r3, r3, #268435456
 766 0444 1364     		str	r3, [r2, #64]
 767              	.L38:
 768              	.LBE2:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 769              		.loc 1 461 3
 770 0446 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccVXDFiv.s 			page 23


 771 0448 9B69     		ldr	r3, [r3, #24]
 772 044a 002B     		cmp	r3, #0
 773 044c 0CD0     		beq	.L53
 774              		.loc 1 461 3 is_stmt 0 discriminator 1
 775 044e 7B68     		ldr	r3, [r7, #4]
 776 0450 9B69     		ldr	r3, [r3, #24]
 777 0452 012B     		cmp	r3, #1
 778 0454 08D0     		beq	.L53
 779              		.loc 1 461 3 discriminator 2
 780 0456 7B68     		ldr	r3, [r7, #4]
 781 0458 9B69     		ldr	r3, [r3, #24]
 782 045a 022B     		cmp	r3, #2
 783 045c 04D0     		beq	.L53
 784              		.loc 1 461 3 discriminator 3
 785 045e 40F2CD11 		movw	r1, #461
 786 0462 7948     		ldr	r0, .L77+4
 787 0464 FFF7FEFF 		bl	assert_failed
 788              	.L53:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 789              		.loc 1 462 30 is_stmt 1
 790 0468 7B68     		ldr	r3, [r7, #4]
 791 046a 9B69     		ldr	r3, [r3, #24]
 792              		.loc 1 462 6
 793 046c 002B     		cmp	r3, #0
 794 046e 00F0E480 		beq	.L54
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 795              		.loc 1 465 8
 796 0472 744B     		ldr	r3, .L77
 797 0474 9B68     		ldr	r3, [r3, #8]
 798 0476 03F00C03 		and	r3, r3, #12
 799              		.loc 1 465 7
 800 047a 082B     		cmp	r3, #8
 801 047c 00F0A580 		beq	.L55
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 802              		.loc 1 467 33
 803 0480 7B68     		ldr	r3, [r7, #4]
 804 0482 9B69     		ldr	r3, [r3, #24]
 805              		.loc 1 467 9
 806 0484 022B     		cmp	r3, #2
 807 0486 40F08980 		bne	.L56
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 808              		.loc 1 470 9
 809 048a 7B68     		ldr	r3, [r7, #4]
 810 048c DB69     		ldr	r3, [r3, #28]
 811 048e 002B     		cmp	r3, #0
 812 0490 09D0     		beq	.L57
 813              		.loc 1 470 9 is_stmt 0 discriminator 1
 814 0492 7B68     		ldr	r3, [r7, #4]
 815 0494 DB69     		ldr	r3, [r3, #28]
 816 0496 B3F5800F 		cmp	r3, #4194304
 817 049a 04D0     		beq	.L57
 818              		.loc 1 470 9 discriminator 2
ARM GAS  /tmp/ccVXDFiv.s 			page 24


 819 049c 4FF4EB71 		mov	r1, #470
 820 04a0 6948     		ldr	r0, .L77+4
 821 04a2 FFF7FEFF 		bl	assert_failed
 822              	.L57:
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 823              		.loc 1 471 9 is_stmt 1
 824 04a6 7B68     		ldr	r3, [r7, #4]
 825 04a8 1B6A     		ldr	r3, [r3, #32]
 826 04aa 3F2B     		cmp	r3, #63
 827 04ac 04D9     		bls	.L58
 828              		.loc 1 471 9 is_stmt 0 discriminator 1
 829 04ae 40F2D711 		movw	r1, #471
 830 04b2 6548     		ldr	r0, .L77+4
 831 04b4 FFF7FEFF 		bl	assert_failed
 832              	.L58:
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 833              		.loc 1 472 9 is_stmt 1
 834 04b8 7B68     		ldr	r3, [r7, #4]
 835 04ba 5B6A     		ldr	r3, [r3, #36]
 836 04bc 312B     		cmp	r3, #49
 837 04be 04D9     		bls	.L59
 838              		.loc 1 472 9 is_stmt 0 discriminator 2
 839 04c0 7B68     		ldr	r3, [r7, #4]
 840 04c2 5B6A     		ldr	r3, [r3, #36]
 841 04c4 B3F5D87F 		cmp	r3, #432
 842 04c8 04D9     		bls	.L60
 843              	.L59:
 844              		.loc 1 472 9 discriminator 3
 845 04ca 4FF4EC71 		mov	r1, #472
 846 04ce 5E48     		ldr	r0, .L77+4
 847 04d0 FFF7FEFF 		bl	assert_failed
 848              	.L60:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 849              		.loc 1 473 9 is_stmt 1
 850 04d4 7B68     		ldr	r3, [r7, #4]
 851 04d6 9B6A     		ldr	r3, [r3, #40]
 852 04d8 022B     		cmp	r3, #2
 853 04da 10D0     		beq	.L61
 854              		.loc 1 473 9 is_stmt 0 discriminator 1
 855 04dc 7B68     		ldr	r3, [r7, #4]
 856 04de 9B6A     		ldr	r3, [r3, #40]
 857 04e0 042B     		cmp	r3, #4
 858 04e2 0CD0     		beq	.L61
 859              		.loc 1 473 9 discriminator 2
 860 04e4 7B68     		ldr	r3, [r7, #4]
 861 04e6 9B6A     		ldr	r3, [r3, #40]
 862 04e8 062B     		cmp	r3, #6
 863 04ea 08D0     		beq	.L61
 864              		.loc 1 473 9 discriminator 3
 865 04ec 7B68     		ldr	r3, [r7, #4]
 866 04ee 9B6A     		ldr	r3, [r3, #40]
 867 04f0 082B     		cmp	r3, #8
 868 04f2 04D0     		beq	.L61
 869              		.loc 1 473 9 discriminator 4
 870 04f4 40F2D911 		movw	r1, #473
 871 04f8 5348     		ldr	r0, .L77+4
 872 04fa FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccVXDFiv.s 			page 25


 873              	.L61:
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 874              		.loc 1 474 9 is_stmt 1
 875 04fe 7B68     		ldr	r3, [r7, #4]
 876 0500 DB6A     		ldr	r3, [r3, #44]
 877 0502 012B     		cmp	r3, #1
 878 0504 03D9     		bls	.L62
 879              		.loc 1 474 9 is_stmt 0 discriminator 2
 880 0506 7B68     		ldr	r3, [r7, #4]
 881 0508 DB6A     		ldr	r3, [r3, #44]
 882 050a 0F2B     		cmp	r3, #15
 883 050c 04D9     		bls	.L63
 884              	.L62:
 885              		.loc 1 474 9 discriminator 3
 886 050e 4FF4ED71 		mov	r1, #474
 887 0512 4D48     		ldr	r0, .L77+4
 888 0514 FFF7FEFF 		bl	assert_failed
 889              	.L63:
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 890              		.loc 1 477 9 is_stmt 1
 891 0518 4C4B     		ldr	r3, .L77+8
 892 051a 0022     		movs	r2, #0
 893 051c 1A60     		str	r2, [r3]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 894              		.loc 1 480 21
 895 051e FFF7FEFF 		bl	HAL_GetTick
 896 0522 3861     		str	r0, [r7, #16]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 897              		.loc 1 483 14
 898 0524 08E0     		b	.L64
 899              	.L65:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 900              		.loc 1 485 15
 901 0526 FFF7FEFF 		bl	HAL_GetTick
 902 052a 0246     		mov	r2, r0
 903              		.loc 1 485 29
 904 052c 3B69     		ldr	r3, [r7, #16]
 905 052e D31A     		subs	r3, r2, r3
 906              		.loc 1 485 13
 907 0530 022B     		cmp	r3, #2
 908 0532 01D9     		bls	.L64
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 909              		.loc 1 487 20
 910 0534 0323     		movs	r3, #3
 911 0536 81E0     		b	.L5
 912              	.L64:
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 913              		.loc 1 483 15
 914 0538 424B     		ldr	r3, .L77
ARM GAS  /tmp/ccVXDFiv.s 			page 26


 915 053a 1B68     		ldr	r3, [r3]
 916 053c 03F00073 		and	r3, r3, #33554432
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 917              		.loc 1 483 14
 918 0540 002B     		cmp	r3, #0
 919 0542 F0D1     		bne	.L65
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 920              		.loc 1 492 9
 921 0544 7B68     		ldr	r3, [r7, #4]
 922 0546 DA69     		ldr	r2, [r3, #28]
 923 0548 7B68     		ldr	r3, [r7, #4]
 924 054a 1B6A     		ldr	r3, [r3, #32]
 925 054c 1A43     		orrs	r2, r2, r3
 926 054e 7B68     		ldr	r3, [r7, #4]
 927 0550 5B6A     		ldr	r3, [r3, #36]
 928 0552 9B01     		lsls	r3, r3, #6
 929 0554 1A43     		orrs	r2, r2, r3
 930 0556 7B68     		ldr	r3, [r7, #4]
 931 0558 9B6A     		ldr	r3, [r3, #40]
 932 055a 5B08     		lsrs	r3, r3, #1
 933 055c 013B     		subs	r3, r3, #1
 934 055e 1B04     		lsls	r3, r3, #16
 935 0560 1A43     		orrs	r2, r2, r3
 936 0562 7B68     		ldr	r3, [r7, #4]
 937 0564 DB6A     		ldr	r3, [r3, #44]
 938 0566 1B06     		lsls	r3, r3, #24
 939 0568 3649     		ldr	r1, .L77
 940 056a 1343     		orrs	r3, r3, r2
 941 056c 4B60     		str	r3, [r1, #4]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 942              		.loc 1 498 9
 943 056e 374B     		ldr	r3, .L77+8
 944 0570 0122     		movs	r2, #1
 945 0572 1A60     		str	r2, [r3]
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 946              		.loc 1 501 21
 947 0574 FFF7FEFF 		bl	HAL_GetTick
 948 0578 3861     		str	r0, [r7, #16]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 949              		.loc 1 504 14
 950 057a 08E0     		b	.L66
 951              	.L67:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
ARM GAS  /tmp/ccVXDFiv.s 			page 27


 952              		.loc 1 506 15
 953 057c FFF7FEFF 		bl	HAL_GetTick
 954 0580 0246     		mov	r2, r0
 955              		.loc 1 506 29
 956 0582 3B69     		ldr	r3, [r7, #16]
 957 0584 D31A     		subs	r3, r2, r3
 958              		.loc 1 506 13
 959 0586 022B     		cmp	r3, #2
 960 0588 01D9     		bls	.L66
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 961              		.loc 1 508 20
 962 058a 0323     		movs	r3, #3
 963 058c 56E0     		b	.L5
 964              	.L66:
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 965              		.loc 1 504 15
 966 058e 2D4B     		ldr	r3, .L77
 967 0590 1B68     		ldr	r3, [r3]
 968 0592 03F00073 		and	r3, r3, #33554432
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 969              		.loc 1 504 14
 970 0596 002B     		cmp	r3, #0
 971 0598 F0D0     		beq	.L67
 972 059a 4EE0     		b	.L54
 973              	.L56:
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 974              		.loc 1 515 9
 975 059c 2B4B     		ldr	r3, .L77+8
 976 059e 0022     		movs	r2, #0
 977 05a0 1A60     		str	r2, [r3]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 978              		.loc 1 518 21
 979 05a2 FFF7FEFF 		bl	HAL_GetTick
 980 05a6 3861     		str	r0, [r7, #16]
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 981              		.loc 1 521 14
 982 05a8 08E0     		b	.L68
 983              	.L69:
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 984              		.loc 1 523 15
 985 05aa FFF7FEFF 		bl	HAL_GetTick
 986 05ae 0246     		mov	r2, r0
 987              		.loc 1 523 29
 988 05b0 3B69     		ldr	r3, [r7, #16]
 989 05b2 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccVXDFiv.s 			page 28


 990              		.loc 1 523 13
 991 05b4 022B     		cmp	r3, #2
 992 05b6 01D9     		bls	.L68
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 993              		.loc 1 525 20
 994 05b8 0323     		movs	r3, #3
 995 05ba 3FE0     		b	.L5
 996              	.L68:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 997              		.loc 1 521 15
 998 05bc 214B     		ldr	r3, .L77
 999 05be 1B68     		ldr	r3, [r3]
 1000 05c0 03F00073 		and	r3, r3, #33554432
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 1001              		.loc 1 521 14
 1002 05c4 002B     		cmp	r3, #0
 1003 05c6 F0D1     		bne	.L69
 1004 05c8 37E0     		b	.L54
 1005              	.L55:
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1006              		.loc 1 533 33
 1007 05ca 7B68     		ldr	r3, [r7, #4]
 1008 05cc 9B69     		ldr	r3, [r3, #24]
 1009              		.loc 1 533 9
 1010 05ce 012B     		cmp	r3, #1
 1011 05d0 01D1     		bne	.L70
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1012              		.loc 1 535 16
 1013 05d2 0123     		movs	r3, #1
 1014 05d4 32E0     		b	.L5
 1015              	.L70:
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 1016              		.loc 1 540 25
 1017 05d6 1B4B     		ldr	r3, .L77
 1018              		.loc 1 540 20
 1019 05d8 5B68     		ldr	r3, [r3, #4]
 1020 05da FB60     		str	r3, [r7, #12]
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
ARM GAS  /tmp/ccVXDFiv.s 			page 29


 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #else
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 1021              		.loc 1 550 37
 1022 05dc 7B68     		ldr	r3, [r7, #4]
 1023 05de 9B69     		ldr	r3, [r3, #24]
 1024              		.loc 1 550 12
 1025 05e0 012B     		cmp	r3, #1
 1026 05e2 28D0     		beq	.L71
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1027              		.loc 1 551 14 discriminator 1
 1028 05e4 FB68     		ldr	r3, [r7, #12]
 1029 05e6 03F48002 		and	r2, r3, #4194304
 1030              		.loc 1 551 80 discriminator 1
 1031 05ea 7B68     		ldr	r3, [r7, #4]
 1032 05ec DB69     		ldr	r3, [r3, #28]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1033              		.loc 1 550 64 discriminator 1
 1034 05ee 9A42     		cmp	r2, r3
 1035 05f0 21D1     		bne	.L71
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 1036              		.loc 1 552 14
 1037 05f2 FB68     		ldr	r3, [r7, #12]
 1038 05f4 03F03F02 		and	r2, r3, #63
 1039              		.loc 1 552 86
 1040 05f8 7B68     		ldr	r3, [r7, #4]
 1041 05fa 1B6A     		ldr	r3, [r3, #32]
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1042              		.loc 1 551 92
 1043 05fc 9A42     		cmp	r2, r3
 1044 05fe 1AD1     		bne	.L71
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 1045              		.loc 1 553 14
 1046 0600 FA68     		ldr	r2, [r7, #12]
 1047 0602 47F6C073 		movw	r3, #32704
 1048 0606 1340     		ands	r3, r3, r2
 1049              		.loc 1 553 79
 1050 0608 7A68     		ldr	r2, [r7, #4]
 1051 060a 526A     		ldr	r2, [r2, #36]
 1052              		.loc 1 553 86
 1053 060c 9201     		lsls	r2, r2, #6
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 1054              		.loc 1 552 111
 1055 060e 9342     		cmp	r3, r2
 1056 0610 11D1     		bne	.L71
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 1057              		.loc 1 554 14
 1058 0612 FB68     		ldr	r3, [r7, #12]
 1059 0614 03F44032 		and	r2, r3, #196608
 1060              		.loc 1 554 81
 1061 0618 7B68     		ldr	r3, [r7, #4]
 1062 061a 9B6A     		ldr	r3, [r3, #40]
 1063              		.loc 1 554 87
 1064 061c 5B08     		lsrs	r3, r3, #1
 1065              		.loc 1 554 94
 1066 061e 013B     		subs	r3, r3, #1
 1067              		.loc 1 554 101
ARM GAS  /tmp/ccVXDFiv.s 			page 30


 1068 0620 1B04     		lsls	r3, r3, #16
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 1069              		.loc 1 553 111
 1070 0622 9A42     		cmp	r2, r3
 1071 0624 07D1     		bne	.L71
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 1072              		.loc 1 555 14
 1073 0626 FB68     		ldr	r3, [r7, #12]
 1074 0628 03F07062 		and	r2, r3, #251658240
 1075              		.loc 1 555 79
 1076 062c 7B68     		ldr	r3, [r7, #4]
 1077 062e DB6A     		ldr	r3, [r3, #44]
 1078              		.loc 1 555 85
 1079 0630 1B06     		lsls	r3, r3, #24
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 1080              		.loc 1 554 126
 1081 0632 9A42     		cmp	r2, r3
 1082 0634 01D0     		beq	.L54
 1083              	.L71:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 1084              		.loc 1 558 18
 1085 0636 0123     		movs	r3, #1
 1086 0638 00E0     		b	.L5
 1087              	.L54:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1088              		.loc 1 563 10
 1089 063a 0023     		movs	r3, #0
 1090              	.L5:
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1091              		.loc 1 564 1
 1092 063c 1846     		mov	r0, r3
 1093 063e 1837     		adds	r7, r7, #24
 1094              	.LCFI7:
 1095              		.cfi_def_cfa_offset 8
 1096 0640 BD46     		mov	sp, r7
 1097              	.LCFI8:
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 0642 80BD     		pop	{r7, pc}
 1101              	.L78:
 1102              		.align	2
 1103              	.L77:
 1104 0644 00380240 		.word	1073887232
 1105 0648 00000000 		.word	.LC0
 1106 064c 60004742 		.word	1111949408
 1107              		.cfi_endproc
 1108              	.LFE131:
 1110              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1111              		.align	1
 1112              		.global	HAL_RCC_ClockConfig
 1113              		.syntax unified
ARM GAS  /tmp/ccVXDFiv.s 			page 31


 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu fpv4-sp-d16
 1118              	HAL_RCC_ClockConfig:
 1119              	.LFB132:
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1120              		.loc 1 592 1
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 16
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 80B5     		push	{r7, lr}
 1125              	.LCFI9:
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 7, -8
 1128              		.cfi_offset 14, -4
 1129 0002 84B0     		sub	sp, sp, #16
 1130              	.LCFI10:
 1131              		.cfi_def_cfa_offset 24
 1132 0004 00AF     		add	r7, sp, #0
 1133              	.LCFI11:
 1134              		.cfi_def_cfa_register 7
 1135 0006 7860     		str	r0, [r7, #4]
 1136 0008 3960     		str	r1, [r7]
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1137              		.loc 1 596 5
 1138 000a 7B68     		ldr	r3, [r7, #4]
 1139 000c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVXDFiv.s 			page 32


 1140 000e 01D1     		bne	.L80
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 1141              		.loc 1 598 12
 1142 0010 0123     		movs	r3, #1
 1143 0012 74E1     		b	.L81
 1144              	.L80:
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1145              		.loc 1 602 3
 1146 0014 7B68     		ldr	r3, [r7, #4]
 1147 0016 1B68     		ldr	r3, [r3]
 1148 0018 002B     		cmp	r3, #0
 1149 001a 03D0     		beq	.L82
 1150              		.loc 1 602 3 is_stmt 0 discriminator 2
 1151 001c 7B68     		ldr	r3, [r7, #4]
 1152 001e 1B68     		ldr	r3, [r3]
 1153 0020 0F2B     		cmp	r3, #15
 1154 0022 04D9     		bls	.L83
 1155              	.L82:
 1156              		.loc 1 602 3 discriminator 3
 1157 0024 40F25A21 		movw	r1, #602
 1158 0028 7B48     		ldr	r0, .L104
 1159 002a FFF7FEFF 		bl	assert_failed
 1160              	.L83:
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1161              		.loc 1 603 3 is_stmt 1
 1162 002e 3B68     		ldr	r3, [r7]
 1163 0030 002B     		cmp	r3, #0
 1164 0032 19D0     		beq	.L84
 1165              		.loc 1 603 3 is_stmt 0 discriminator 1
 1166 0034 3B68     		ldr	r3, [r7]
 1167 0036 012B     		cmp	r3, #1
 1168 0038 16D0     		beq	.L84
 1169              		.loc 1 603 3 discriminator 2
 1170 003a 3B68     		ldr	r3, [r7]
 1171 003c 022B     		cmp	r3, #2
 1172 003e 13D0     		beq	.L84
 1173              		.loc 1 603 3 discriminator 3
 1174 0040 3B68     		ldr	r3, [r7]
 1175 0042 032B     		cmp	r3, #3
 1176 0044 10D0     		beq	.L84
 1177              		.loc 1 603 3 discriminator 4
 1178 0046 3B68     		ldr	r3, [r7]
 1179 0048 042B     		cmp	r3, #4
 1180 004a 0DD0     		beq	.L84
 1181              		.loc 1 603 3 discriminator 5
 1182 004c 3B68     		ldr	r3, [r7]
 1183 004e 052B     		cmp	r3, #5
 1184 0050 0AD0     		beq	.L84
 1185              		.loc 1 603 3 discriminator 6
 1186 0052 3B68     		ldr	r3, [r7]
 1187 0054 062B     		cmp	r3, #6
 1188 0056 07D0     		beq	.L84
 1189              		.loc 1 603 3 discriminator 7
ARM GAS  /tmp/ccVXDFiv.s 			page 33


 1190 0058 3B68     		ldr	r3, [r7]
 1191 005a 072B     		cmp	r3, #7
 1192 005c 04D0     		beq	.L84
 1193              		.loc 1 603 3 discriminator 8
 1194 005e 40F25B21 		movw	r1, #603
 1195 0062 6D48     		ldr	r0, .L104
 1196 0064 FFF7FEFF 		bl	assert_failed
 1197              	.L84:
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1198              		.loc 1 610 17 is_stmt 1
 1199 0068 6C4B     		ldr	r3, .L104+4
 1200 006a 1B68     		ldr	r3, [r3]
 1201 006c 03F00703 		and	r3, r3, #7
 1202              		.loc 1 610 5
 1203 0070 3A68     		ldr	r2, [r7]
 1204 0072 9A42     		cmp	r2, r3
 1205 0074 0CD9     		bls	.L85
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1206              		.loc 1 613 5
 1207 0076 694B     		ldr	r3, .L104+4
 1208 0078 3A68     		ldr	r2, [r7]
 1209 007a D2B2     		uxtb	r2, r2
 1210 007c 1A70     		strb	r2, [r3]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1211              		.loc 1 617 8
 1212 007e 674B     		ldr	r3, .L104+4
 1213 0080 1B68     		ldr	r3, [r3]
 1214 0082 03F00703 		and	r3, r3, #7
 1215              		.loc 1 617 7
 1216 0086 3A68     		ldr	r2, [r7]
 1217 0088 9A42     		cmp	r2, r3
 1218 008a 01D0     		beq	.L85
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1219              		.loc 1 619 14
 1220 008c 0123     		movs	r3, #1
 1221 008e 36E1     		b	.L81
 1222              	.L85:
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1223              		.loc 1 624 25
 1224 0090 7B68     		ldr	r3, [r7, #4]
 1225 0092 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccVXDFiv.s 			page 34


 1226              		.loc 1 624 38
 1227 0094 03F00203 		and	r3, r3, #2
 1228              		.loc 1 624 5
 1229 0098 002B     		cmp	r3, #0
 1230 009a 49D0     		beq	.L86
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1231              		.loc 1 628 27
 1232 009c 7B68     		ldr	r3, [r7, #4]
 1233 009e 1B68     		ldr	r3, [r3]
 1234              		.loc 1 628 40
 1235 00a0 03F00403 		and	r3, r3, #4
 1236              		.loc 1 628 7
 1237 00a4 002B     		cmp	r3, #0
 1238 00a6 05D0     		beq	.L87
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1239              		.loc 1 630 7
 1240 00a8 5D4B     		ldr	r3, .L104+8
 1241 00aa 9B68     		ldr	r3, [r3, #8]
 1242 00ac 5C4A     		ldr	r2, .L104+8
 1243 00ae 43F4E053 		orr	r3, r3, #7168
 1244 00b2 9360     		str	r3, [r2, #8]
 1245              	.L87:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1246              		.loc 1 633 27
 1247 00b4 7B68     		ldr	r3, [r7, #4]
 1248 00b6 1B68     		ldr	r3, [r3]
 1249              		.loc 1 633 40
 1250 00b8 03F00803 		and	r3, r3, #8
 1251              		.loc 1 633 7
 1252 00bc 002B     		cmp	r3, #0
 1253 00be 05D0     		beq	.L88
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1254              		.loc 1 635 7
 1255 00c0 574B     		ldr	r3, .L104+8
 1256 00c2 9B68     		ldr	r3, [r3, #8]
 1257 00c4 564A     		ldr	r2, .L104+8
 1258 00c6 43F46043 		orr	r3, r3, #57344
 1259 00ca 9360     		str	r3, [r2, #8]
 1260              	.L88:
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 1261              		.loc 1 638 5
 1262 00cc 7B68     		ldr	r3, [r7, #4]
 1263 00ce 9B68     		ldr	r3, [r3, #8]
 1264 00d0 002B     		cmp	r3, #0
 1265 00d2 24D0     		beq	.L89
 1266              		.loc 1 638 5 is_stmt 0 discriminator 1
 1267 00d4 7B68     		ldr	r3, [r7, #4]
 1268 00d6 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccVXDFiv.s 			page 35


 1269 00d8 802B     		cmp	r3, #128
 1270 00da 20D0     		beq	.L89
 1271              		.loc 1 638 5 discriminator 2
 1272 00dc 7B68     		ldr	r3, [r7, #4]
 1273 00de 9B68     		ldr	r3, [r3, #8]
 1274 00e0 902B     		cmp	r3, #144
 1275 00e2 1CD0     		beq	.L89
 1276              		.loc 1 638 5 discriminator 3
 1277 00e4 7B68     		ldr	r3, [r7, #4]
 1278 00e6 9B68     		ldr	r3, [r3, #8]
 1279 00e8 A02B     		cmp	r3, #160
 1280 00ea 18D0     		beq	.L89
 1281              		.loc 1 638 5 discriminator 4
 1282 00ec 7B68     		ldr	r3, [r7, #4]
 1283 00ee 9B68     		ldr	r3, [r3, #8]
 1284 00f0 B02B     		cmp	r3, #176
 1285 00f2 14D0     		beq	.L89
 1286              		.loc 1 638 5 discriminator 5
 1287 00f4 7B68     		ldr	r3, [r7, #4]
 1288 00f6 9B68     		ldr	r3, [r3, #8]
 1289 00f8 C02B     		cmp	r3, #192
 1290 00fa 10D0     		beq	.L89
 1291              		.loc 1 638 5 discriminator 6
 1292 00fc 7B68     		ldr	r3, [r7, #4]
 1293 00fe 9B68     		ldr	r3, [r3, #8]
 1294 0100 D02B     		cmp	r3, #208
 1295 0102 0CD0     		beq	.L89
 1296              		.loc 1 638 5 discriminator 7
 1297 0104 7B68     		ldr	r3, [r7, #4]
 1298 0106 9B68     		ldr	r3, [r3, #8]
 1299 0108 E02B     		cmp	r3, #224
 1300 010a 08D0     		beq	.L89
 1301              		.loc 1 638 5 discriminator 8
 1302 010c 7B68     		ldr	r3, [r7, #4]
 1303 010e 9B68     		ldr	r3, [r3, #8]
 1304 0110 F02B     		cmp	r3, #240
 1305 0112 04D0     		beq	.L89
 1306              		.loc 1 638 5 discriminator 9
 1307 0114 40F27E21 		movw	r1, #638
 1308 0118 3F48     		ldr	r0, .L104
 1309 011a FFF7FEFF 		bl	assert_failed
 1310              	.L89:
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1311              		.loc 1 639 5 is_stmt 1
 1312 011e 404B     		ldr	r3, .L104+8
 1313 0120 9B68     		ldr	r3, [r3, #8]
 1314 0122 23F0F002 		bic	r2, r3, #240
 1315 0126 7B68     		ldr	r3, [r7, #4]
 1316 0128 9B68     		ldr	r3, [r3, #8]
 1317 012a 3D49     		ldr	r1, .L104+8
 1318 012c 1343     		orrs	r3, r3, r2
 1319 012e 8B60     		str	r3, [r1, #8]
 1320              	.L86:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
ARM GAS  /tmp/ccVXDFiv.s 			page 36


 1321              		.loc 1 643 25
 1322 0130 7B68     		ldr	r3, [r7, #4]
 1323 0132 1B68     		ldr	r3, [r3]
 1324              		.loc 1 643 38
 1325 0134 03F00103 		and	r3, r3, #1
 1326              		.loc 1 643 5
 1327 0138 002B     		cmp	r3, #0
 1328 013a 59D0     		beq	.L90
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 1329              		.loc 1 645 5
 1330 013c 7B68     		ldr	r3, [r7, #4]
 1331 013e 5B68     		ldr	r3, [r3, #4]
 1332 0140 002B     		cmp	r3, #0
 1333 0142 10D0     		beq	.L91
 1334              		.loc 1 645 5 is_stmt 0 discriminator 1
 1335 0144 7B68     		ldr	r3, [r7, #4]
 1336 0146 5B68     		ldr	r3, [r3, #4]
 1337 0148 012B     		cmp	r3, #1
 1338 014a 0CD0     		beq	.L91
 1339              		.loc 1 645 5 discriminator 2
 1340 014c 7B68     		ldr	r3, [r7, #4]
 1341 014e 5B68     		ldr	r3, [r3, #4]
 1342 0150 022B     		cmp	r3, #2
 1343 0152 08D0     		beq	.L91
 1344              		.loc 1 645 5 discriminator 3
 1345 0154 7B68     		ldr	r3, [r7, #4]
 1346 0156 5B68     		ldr	r3, [r3, #4]
 1347 0158 032B     		cmp	r3, #3
 1348 015a 04D0     		beq	.L91
 1349              		.loc 1 645 5 discriminator 4
 1350 015c 40F28521 		movw	r1, #645
 1351 0160 2D48     		ldr	r0, .L104
 1352 0162 FFF7FEFF 		bl	assert_failed
 1353              	.L91:
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1354              		.loc 1 648 25 is_stmt 1
 1355 0166 7B68     		ldr	r3, [r7, #4]
 1356 0168 5B68     		ldr	r3, [r3, #4]
 1357              		.loc 1 648 7
 1358 016a 012B     		cmp	r3, #1
 1359 016c 07D1     		bne	.L92
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1360              		.loc 1 651 10
 1361 016e 2C4B     		ldr	r3, .L104+8
 1362 0170 1B68     		ldr	r3, [r3]
 1363 0172 03F40033 		and	r3, r3, #131072
 1364              		.loc 1 651 9
 1365 0176 002B     		cmp	r3, #0
 1366 0178 19D1     		bne	.L93
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1367              		.loc 1 653 16
ARM GAS  /tmp/ccVXDFiv.s 			page 37


 1368 017a 0123     		movs	r3, #1
 1369 017c BFE0     		b	.L81
 1370              	.L92:
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1371              		.loc 1 657 31
 1372 017e 7B68     		ldr	r3, [r7, #4]
 1373 0180 5B68     		ldr	r3, [r3, #4]
 1374              		.loc 1 657 12
 1375 0182 022B     		cmp	r3, #2
 1376 0184 03D0     		beq	.L94
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1377              		.loc 1 658 31 discriminator 1
 1378 0186 7B68     		ldr	r3, [r7, #4]
 1379 0188 5B68     		ldr	r3, [r3, #4]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1380              		.loc 1 657 76 discriminator 1
 1381 018a 032B     		cmp	r3, #3
 1382 018c 07D1     		bne	.L95
 1383              	.L94:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1384              		.loc 1 661 10
 1385 018e 244B     		ldr	r3, .L104+8
 1386 0190 1B68     		ldr	r3, [r3]
 1387 0192 03F00073 		and	r3, r3, #33554432
 1388              		.loc 1 661 9
 1389 0196 002B     		cmp	r3, #0
 1390 0198 09D1     		bne	.L93
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1391              		.loc 1 663 16
 1392 019a 0123     		movs	r3, #1
 1393 019c AFE0     		b	.L81
 1394              	.L95:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1395              		.loc 1 670 10
 1396 019e 204B     		ldr	r3, .L104+8
 1397 01a0 1B68     		ldr	r3, [r3]
 1398 01a2 03F00203 		and	r3, r3, #2
 1399              		.loc 1 670 9
 1400 01a6 002B     		cmp	r3, #0
 1401 01a8 01D1     		bne	.L93
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1402              		.loc 1 672 16
 1403 01aa 0123     		movs	r3, #1
 1404 01ac A7E0     		b	.L81
ARM GAS  /tmp/ccVXDFiv.s 			page 38


 1405              	.L93:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1406              		.loc 1 676 5
 1407 01ae 1C4B     		ldr	r3, .L104+8
 1408 01b0 9B68     		ldr	r3, [r3, #8]
 1409 01b2 23F00302 		bic	r2, r3, #3
 1410 01b6 7B68     		ldr	r3, [r7, #4]
 1411 01b8 5B68     		ldr	r3, [r3, #4]
 1412 01ba 1949     		ldr	r1, .L104+8
 1413 01bc 1343     		orrs	r3, r3, r2
 1414 01be 8B60     		str	r3, [r1, #8]
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1415              		.loc 1 679 17
 1416 01c0 FFF7FEFF 		bl	HAL_GetTick
 1417 01c4 F860     		str	r0, [r7, #12]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1418              		.loc 1 681 11
 1419 01c6 0AE0     		b	.L97
 1420              	.L98:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1421              		.loc 1 683 12
 1422 01c8 FFF7FEFF 		bl	HAL_GetTick
 1423 01cc 0246     		mov	r2, r0
 1424              		.loc 1 683 26
 1425 01ce FB68     		ldr	r3, [r7, #12]
 1426 01d0 D31A     		subs	r3, r2, r3
 1427              		.loc 1 683 10
 1428 01d2 41F28832 		movw	r2, #5000
 1429 01d6 9342     		cmp	r3, r2
 1430 01d8 01D9     		bls	.L97
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1431              		.loc 1 685 16
 1432 01da 0323     		movs	r3, #3
 1433 01dc 8FE0     		b	.L81
 1434              	.L97:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1435              		.loc 1 681 12
 1436 01de 104B     		ldr	r3, .L104+8
 1437 01e0 9B68     		ldr	r3, [r3, #8]
 1438 01e2 03F00C02 		and	r2, r3, #12
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1439              		.loc 1 681 63
 1440 01e6 7B68     		ldr	r3, [r7, #4]
 1441 01e8 5B68     		ldr	r3, [r3, #4]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1442              		.loc 1 681 78
 1443 01ea 9B00     		lsls	r3, r3, #2
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1444              		.loc 1 681 11
ARM GAS  /tmp/ccVXDFiv.s 			page 39


 1445 01ec 9A42     		cmp	r2, r3
 1446 01ee EBD1     		bne	.L98
 1447              	.L90:
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1448              		.loc 1 691 17
 1449 01f0 0A4B     		ldr	r3, .L104+4
 1450 01f2 1B68     		ldr	r3, [r3]
 1451 01f4 03F00703 		and	r3, r3, #7
 1452              		.loc 1 691 5
 1453 01f8 3A68     		ldr	r2, [r7]
 1454 01fa 9A42     		cmp	r2, r3
 1455 01fc 12D2     		bcs	.L99
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1456              		.loc 1 694 5
 1457 01fe 074B     		ldr	r3, .L104+4
 1458 0200 3A68     		ldr	r2, [r7]
 1459 0202 D2B2     		uxtb	r2, r2
 1460 0204 1A70     		strb	r2, [r3]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1461              		.loc 1 698 8
 1462 0206 054B     		ldr	r3, .L104+4
 1463 0208 1B68     		ldr	r3, [r3]
 1464 020a 03F00703 		and	r3, r3, #7
 1465              		.loc 1 698 7
 1466 020e 3A68     		ldr	r2, [r7]
 1467 0210 9A42     		cmp	r2, r3
 1468 0212 07D0     		beq	.L99
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1469              		.loc 1 700 14
 1470 0214 0123     		movs	r3, #1
 1471 0216 72E0     		b	.L81
 1472              	.L105:
 1473              		.align	2
 1474              	.L104:
 1475 0218 00000000 		.word	.LC0
 1476 021c 003C0240 		.word	1073888256
 1477 0220 00380240 		.word	1073887232
 1478              	.L99:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1479              		.loc 1 705 25
 1480 0224 7B68     		ldr	r3, [r7, #4]
 1481 0226 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccVXDFiv.s 			page 40


 1482              		.loc 1 705 38
 1483 0228 03F00403 		and	r3, r3, #4
 1484              		.loc 1 705 5
 1485 022c 002B     		cmp	r3, #0
 1486 022e 25D0     		beq	.L100
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 1487              		.loc 1 707 5
 1488 0230 7B68     		ldr	r3, [r7, #4]
 1489 0232 DB68     		ldr	r3, [r3, #12]
 1490 0234 002B     		cmp	r3, #0
 1491 0236 18D0     		beq	.L101
 1492              		.loc 1 707 5 is_stmt 0 discriminator 1
 1493 0238 7B68     		ldr	r3, [r7, #4]
 1494 023a DB68     		ldr	r3, [r3, #12]
 1495 023c B3F5805F 		cmp	r3, #4096
 1496 0240 13D0     		beq	.L101
 1497              		.loc 1 707 5 discriminator 2
 1498 0242 7B68     		ldr	r3, [r7, #4]
 1499 0244 DB68     		ldr	r3, [r3, #12]
 1500 0246 B3F5A05F 		cmp	r3, #5120
 1501 024a 0ED0     		beq	.L101
 1502              		.loc 1 707 5 discriminator 3
 1503 024c 7B68     		ldr	r3, [r7, #4]
 1504 024e DB68     		ldr	r3, [r3, #12]
 1505 0250 B3F5C05F 		cmp	r3, #6144
 1506 0254 09D0     		beq	.L101
 1507              		.loc 1 707 5 discriminator 4
 1508 0256 7B68     		ldr	r3, [r7, #4]
 1509 0258 DB68     		ldr	r3, [r3, #12]
 1510 025a B3F5E05F 		cmp	r3, #7168
 1511 025e 04D0     		beq	.L101
 1512              		.loc 1 707 5 discriminator 5
 1513 0260 40F2C321 		movw	r1, #707
 1514 0264 2848     		ldr	r0, .L106
 1515 0266 FFF7FEFF 		bl	assert_failed
 1516              	.L101:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1517              		.loc 1 708 5 is_stmt 1
 1518 026a 284B     		ldr	r3, .L106+4
 1519 026c 9B68     		ldr	r3, [r3, #8]
 1520 026e 23F4E052 		bic	r2, r3, #7168
 1521 0272 7B68     		ldr	r3, [r7, #4]
 1522 0274 DB68     		ldr	r3, [r3, #12]
 1523 0276 2549     		ldr	r1, .L106+4
 1524 0278 1343     		orrs	r3, r3, r2
 1525 027a 8B60     		str	r3, [r1, #8]
 1526              	.L100:
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1527              		.loc 1 712 25
 1528 027c 7B68     		ldr	r3, [r7, #4]
 1529 027e 1B68     		ldr	r3, [r3]
 1530              		.loc 1 712 38
 1531 0280 03F00803 		and	r3, r3, #8
ARM GAS  /tmp/ccVXDFiv.s 			page 41


 1532              		.loc 1 712 5
 1533 0284 002B     		cmp	r3, #0
 1534 0286 26D0     		beq	.L102
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 1535              		.loc 1 714 5
 1536 0288 7B68     		ldr	r3, [r7, #4]
 1537 028a 1B69     		ldr	r3, [r3, #16]
 1538 028c 002B     		cmp	r3, #0
 1539 028e 18D0     		beq	.L103
 1540              		.loc 1 714 5 is_stmt 0 discriminator 1
 1541 0290 7B68     		ldr	r3, [r7, #4]
 1542 0292 1B69     		ldr	r3, [r3, #16]
 1543 0294 B3F5805F 		cmp	r3, #4096
 1544 0298 13D0     		beq	.L103
 1545              		.loc 1 714 5 discriminator 2
 1546 029a 7B68     		ldr	r3, [r7, #4]
 1547 029c 1B69     		ldr	r3, [r3, #16]
 1548 029e B3F5A05F 		cmp	r3, #5120
 1549 02a2 0ED0     		beq	.L103
 1550              		.loc 1 714 5 discriminator 3
 1551 02a4 7B68     		ldr	r3, [r7, #4]
 1552 02a6 1B69     		ldr	r3, [r3, #16]
 1553 02a8 B3F5C05F 		cmp	r3, #6144
 1554 02ac 09D0     		beq	.L103
 1555              		.loc 1 714 5 discriminator 4
 1556 02ae 7B68     		ldr	r3, [r7, #4]
 1557 02b0 1B69     		ldr	r3, [r3, #16]
 1558 02b2 B3F5E05F 		cmp	r3, #7168
 1559 02b6 04D0     		beq	.L103
 1560              		.loc 1 714 5 discriminator 5
 1561 02b8 40F2CA21 		movw	r1, #714
 1562 02bc 1248     		ldr	r0, .L106
 1563 02be FFF7FEFF 		bl	assert_failed
 1564              	.L103:
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1565              		.loc 1 715 5 is_stmt 1
 1566 02c2 124B     		ldr	r3, .L106+4
 1567 02c4 9B68     		ldr	r3, [r3, #8]
 1568 02c6 23F46042 		bic	r2, r3, #57344
 1569 02ca 7B68     		ldr	r3, [r7, #4]
 1570 02cc 1B69     		ldr	r3, [r3, #16]
 1571 02ce DB00     		lsls	r3, r3, #3
 1572 02d0 0E49     		ldr	r1, .L106+4
 1573 02d2 1343     		orrs	r3, r3, r2
 1574 02d4 8B60     		str	r3, [r1, #8]
 1575              	.L102:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1576              		.loc 1 719 21
 1577 02d6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1578 02da 0246     		mov	r2, r0
 1579              		.loc 1 719 68
 1580 02dc 0B4B     		ldr	r3, .L106+4
 1581 02de 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccVXDFiv.s 			page 42


 1582              		.loc 1 719 91
 1583 02e0 1B09     		lsrs	r3, r3, #4
 1584 02e2 03F00F03 		and	r3, r3, #15
 1585              		.loc 1 719 63
 1586 02e6 0A49     		ldr	r1, .L106+8
 1587 02e8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1588              		.loc 1 719 47
 1589 02ea 22FA03F3 		lsr	r3, r2, r3
 1590              		.loc 1 719 19
 1591 02ee 094A     		ldr	r2, .L106+12
 1592 02f0 1360     		str	r3, [r2]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1593              		.loc 1 722 3
 1594 02f2 094B     		ldr	r3, .L106+16
 1595 02f4 1B68     		ldr	r3, [r3]
 1596 02f6 1846     		mov	r0, r3
 1597 02f8 FFF7FEFF 		bl	HAL_InitTick
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1598              		.loc 1 724 10
 1599 02fc 0023     		movs	r3, #0
 1600              	.L81:
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1601              		.loc 1 725 1
 1602 02fe 1846     		mov	r0, r3
 1603 0300 1037     		adds	r7, r7, #16
 1604              	.LCFI12:
 1605              		.cfi_def_cfa_offset 8
 1606 0302 BD46     		mov	sp, r7
 1607              	.LCFI13:
 1608              		.cfi_def_cfa_register 13
 1609              		@ sp needed
 1610 0304 80BD     		pop	{r7, pc}
 1611              	.L107:
 1612 0306 00BF     		.align	2
 1613              	.L106:
 1614 0308 00000000 		.word	.LC0
 1615 030c 00380240 		.word	1073887232
 1616 0310 00000000 		.word	AHBPrescTable
 1617 0314 00000000 		.word	SystemCoreClock
 1618 0318 00000000 		.word	uwTickPrio
 1619              		.cfi_endproc
 1620              	.LFE132:
 1622              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1623              		.align	1
 1624              		.global	HAL_RCC_MCOConfig
 1625              		.syntax unified
 1626              		.thumb
 1627              		.thumb_func
 1628              		.fpu fpv4-sp-d16
 1630              	HAL_RCC_MCOConfig:
 1631              	.LFB133:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
ARM GAS  /tmp/ccVXDFiv.s 			page 43


 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1632              		.loc 1 776 1
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 48
 1635              		@ frame_needed = 1, uses_anonymous_args = 0
 1636 0000 80B5     		push	{r7, lr}
 1637              	.LCFI14:
 1638              		.cfi_def_cfa_offset 8
 1639              		.cfi_offset 7, -8
 1640              		.cfi_offset 14, -4
ARM GAS  /tmp/ccVXDFiv.s 			page 44


 1641 0002 8CB0     		sub	sp, sp, #48
 1642              	.LCFI15:
 1643              		.cfi_def_cfa_offset 56
 1644 0004 00AF     		add	r7, sp, #0
 1645              	.LCFI16:
 1646              		.cfi_def_cfa_register 7
 1647 0006 F860     		str	r0, [r7, #12]
 1648 0008 B960     		str	r1, [r7, #8]
 1649 000a 7A60     		str	r2, [r7, #4]
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1650              		.loc 1 779 3
 1651 000c FB68     		ldr	r3, [r7, #12]
 1652 000e 002B     		cmp	r3, #0
 1653 0010 07D0     		beq	.L109
 1654              		.loc 1 779 3 is_stmt 0 discriminator 1
 1655 0012 FB68     		ldr	r3, [r7, #12]
 1656 0014 012B     		cmp	r3, #1
 1657 0016 04D0     		beq	.L109
 1658              		.loc 1 779 3 discriminator 2
 1659 0018 40F20B31 		movw	r1, #779
 1660 001c 4E48     		ldr	r0, .L116
 1661 001e FFF7FEFF 		bl	assert_failed
 1662              	.L109:
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1663              		.loc 1 780 3 is_stmt 1
 1664 0022 7B68     		ldr	r3, [r7, #4]
 1665 0024 002B     		cmp	r3, #0
 1666 0026 14D0     		beq	.L110
 1667              		.loc 1 780 3 is_stmt 0 discriminator 1
 1668 0028 7B68     		ldr	r3, [r7, #4]
 1669 002a B3F1806F 		cmp	r3, #67108864
 1670 002e 10D0     		beq	.L110
 1671              		.loc 1 780 3 discriminator 2
 1672 0030 7B68     		ldr	r3, [r7, #4]
 1673 0032 B3F1A06F 		cmp	r3, #83886080
 1674 0036 0CD0     		beq	.L110
 1675              		.loc 1 780 3 discriminator 3
 1676 0038 7B68     		ldr	r3, [r7, #4]
 1677 003a B3F1C06F 		cmp	r3, #100663296
 1678 003e 08D0     		beq	.L110
 1679              		.loc 1 780 3 discriminator 4
 1680 0040 7B68     		ldr	r3, [r7, #4]
 1681 0042 B3F1E06F 		cmp	r3, #117440512
 1682 0046 04D0     		beq	.L110
 1683              		.loc 1 780 3 discriminator 5
 1684 0048 4FF44371 		mov	r1, #780
 1685 004c 4248     		ldr	r0, .L116
 1686 004e FFF7FEFF 		bl	assert_failed
 1687              	.L110:
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1688              		.loc 1 782 5 is_stmt 1
 1689 0052 FB68     		ldr	r3, [r7, #12]
 1690 0054 002B     		cmp	r3, #0
 1691 0056 3DD1     		bne	.L111
ARM GAS  /tmp/ccVXDFiv.s 			page 45


 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1692              		.loc 1 784 5
 1693 0058 BB68     		ldr	r3, [r7, #8]
 1694 005a 002B     		cmp	r3, #0
 1695 005c 10D0     		beq	.L112
 1696              		.loc 1 784 5 is_stmt 0 discriminator 1
 1697 005e BB68     		ldr	r3, [r7, #8]
 1698 0060 B3F5001F 		cmp	r3, #2097152
 1699 0064 0CD0     		beq	.L112
 1700              		.loc 1 784 5 discriminator 2
 1701 0066 BB68     		ldr	r3, [r7, #8]
 1702 0068 B3F5800F 		cmp	r3, #4194304
 1703 006c 08D0     		beq	.L112
 1704              		.loc 1 784 5 discriminator 3
 1705 006e BB68     		ldr	r3, [r7, #8]
 1706 0070 B3F5C00F 		cmp	r3, #6291456
 1707 0074 04D0     		beq	.L112
 1708              		.loc 1 784 5 discriminator 4
 1709 0076 4FF44471 		mov	r1, #784
 1710 007a 3748     		ldr	r0, .L116
 1711 007c FFF7FEFF 		bl	assert_failed
 1712              	.L112:
 1713              	.LBB4:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1714              		.loc 1 787 5 is_stmt 1
 1715 0080 0023     		movs	r3, #0
 1716 0082 BB61     		str	r3, [r7, #24]
 1717 0084 354B     		ldr	r3, .L116+4
 1718 0086 1B6B     		ldr	r3, [r3, #48]
 1719 0088 344A     		ldr	r2, .L116+4
 1720 008a 43F00103 		orr	r3, r3, #1
 1721 008e 1363     		str	r3, [r2, #48]
 1722 0090 324B     		ldr	r3, .L116+4
 1723 0092 1B6B     		ldr	r3, [r3, #48]
 1724 0094 03F00103 		and	r3, r3, #1
 1725 0098 BB61     		str	r3, [r7, #24]
 1726 009a BB69     		ldr	r3, [r7, #24]
 1727              	.LBE4:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1728              		.loc 1 790 25
 1729 009c 4FF48073 		mov	r3, #256
 1730 00a0 FB61     		str	r3, [r7, #28]
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1731              		.loc 1 791 26
 1732 00a2 0223     		movs	r3, #2
 1733 00a4 3B62     		str	r3, [r7, #32]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1734              		.loc 1 792 27
 1735 00a6 0323     		movs	r3, #3
 1736 00a8 BB62     		str	r3, [r7, #40]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1737              		.loc 1 793 26
ARM GAS  /tmp/ccVXDFiv.s 			page 46


 1738 00aa 0023     		movs	r3, #0
 1739 00ac 7B62     		str	r3, [r7, #36]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1740              		.loc 1 794 31
 1741 00ae 0023     		movs	r3, #0
 1742 00b0 FB62     		str	r3, [r7, #44]
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1743              		.loc 1 795 5
 1744 00b2 07F11C03 		add	r3, r7, #28
 1745 00b6 1946     		mov	r1, r3
 1746 00b8 2948     		ldr	r0, .L116+8
 1747 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1748              		.loc 1 798 5
 1749 00be 274B     		ldr	r3, .L116+4
 1750 00c0 9B68     		ldr	r3, [r3, #8]
 1751 00c2 23F0EC62 		bic	r2, r3, #123731968
 1752 00c6 B968     		ldr	r1, [r7, #8]
 1753 00c8 7B68     		ldr	r3, [r7, #4]
 1754 00ca 0B43     		orrs	r3, r3, r1
 1755 00cc 2349     		ldr	r1, .L116+4
 1756 00ce 1343     		orrs	r3, r3, r2
 1757 00d0 8B60     		str	r3, [r1, #8]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
ARM GAS  /tmp/ccVXDFiv.s 			page 47


 1758              		.loc 1 830 1
 1759 00d2 3DE0     		b	.L115
 1760              	.L111:
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1761              		.loc 1 808 5
 1762 00d4 BB68     		ldr	r3, [r7, #8]
 1763 00d6 002B     		cmp	r3, #0
 1764 00d8 10D0     		beq	.L114
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1765              		.loc 1 808 5 is_stmt 0 discriminator 1
 1766 00da BB68     		ldr	r3, [r7, #8]
 1767 00dc B3F1804F 		cmp	r3, #1073741824
 1768 00e0 0CD0     		beq	.L114
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1769              		.loc 1 808 5 discriminator 2
 1770 00e2 BB68     		ldr	r3, [r7, #8]
 1771 00e4 B3F1004F 		cmp	r3, #-2147483648
 1772 00e8 08D0     		beq	.L114
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1773              		.loc 1 808 5 discriminator 3
 1774 00ea BB68     		ldr	r3, [r7, #8]
 1775 00ec B3F1404F 		cmp	r3, #-1073741824
 1776 00f0 04D0     		beq	.L114
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1777              		.loc 1 808 5 discriminator 4
 1778 00f2 4FF44A71 		mov	r1, #808
 1779 00f6 1848     		ldr	r0, .L116
 1780 00f8 FFF7FEFF 		bl	assert_failed
 1781              	.L114:
 1782              	.LBB5:
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1783              		.loc 1 811 5 is_stmt 1
 1784 00fc 0023     		movs	r3, #0
 1785 00fe 7B61     		str	r3, [r7, #20]
 1786 0100 164B     		ldr	r3, .L116+4
 1787 0102 1B6B     		ldr	r3, [r3, #48]
 1788 0104 154A     		ldr	r2, .L116+4
 1789 0106 43F00403 		orr	r3, r3, #4
 1790 010a 1363     		str	r3, [r2, #48]
 1791 010c 134B     		ldr	r3, .L116+4
 1792 010e 1B6B     		ldr	r3, [r3, #48]
 1793 0110 03F00403 		and	r3, r3, #4
 1794 0114 7B61     		str	r3, [r7, #20]
 1795 0116 7B69     		ldr	r3, [r7, #20]
 1796              	.LBE5:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1797              		.loc 1 814 25
 1798 0118 4FF40073 		mov	r3, #512
 1799 011c FB61     		str	r3, [r7, #28]
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1800              		.loc 1 815 26
 1801 011e 0223     		movs	r3, #2
 1802 0120 3B62     		str	r3, [r7, #32]
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1803              		.loc 1 816 27
 1804 0122 0323     		movs	r3, #3
 1805 0124 BB62     		str	r3, [r7, #40]
ARM GAS  /tmp/ccVXDFiv.s 			page 48


 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1806              		.loc 1 817 26
 1807 0126 0023     		movs	r3, #0
 1808 0128 7B62     		str	r3, [r7, #36]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1809              		.loc 1 818 31
 1810 012a 0023     		movs	r3, #0
 1811 012c FB62     		str	r3, [r7, #44]
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1812              		.loc 1 819 5
 1813 012e 07F11C03 		add	r3, r7, #28
 1814 0132 1946     		mov	r1, r3
 1815 0134 0B48     		ldr	r0, .L116+12
 1816 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1817              		.loc 1 822 5
 1818 013a 084B     		ldr	r3, .L116+4
 1819 013c 9B68     		ldr	r3, [r3, #8]
 1820 013e 23F07842 		bic	r2, r3, #-134217728
 1821 0142 7B68     		ldr	r3, [r7, #4]
 1822 0144 D900     		lsls	r1, r3, #3
 1823 0146 BB68     		ldr	r3, [r7, #8]
 1824 0148 0B43     		orrs	r3, r3, r1
 1825 014a 0449     		ldr	r1, .L116+4
 1826 014c 1343     		orrs	r3, r3, r2
 1827 014e 8B60     		str	r3, [r1, #8]
 1828              	.L115:
 1829              		.loc 1 830 1
 1830 0150 00BF     		nop
 1831 0152 3037     		adds	r7, r7, #48
 1832              	.LCFI17:
 1833              		.cfi_def_cfa_offset 8
 1834 0154 BD46     		mov	sp, r7
 1835              	.LCFI18:
 1836              		.cfi_def_cfa_register 13
 1837              		@ sp needed
 1838 0156 80BD     		pop	{r7, pc}
 1839              	.L117:
 1840              		.align	2
 1841              	.L116:
 1842 0158 00000000 		.word	.LC0
 1843 015c 00380240 		.word	1073887232
 1844 0160 00000240 		.word	1073872896
 1845 0164 00080240 		.word	1073874944
 1846              		.cfi_endproc
 1847              	.LFE133:
 1849              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1850              		.align	1
 1851              		.global	HAL_RCC_EnableCSS
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1855              		.fpu fpv4-sp-d16
 1857              	HAL_RCC_EnableCSS:
 1858              	.LFB134:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccVXDFiv.s 			page 49


 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1859              		.loc 1 842 1
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 1, uses_anonymous_args = 0
 1863              		@ link register save eliminated.
 1864 0000 80B4     		push	{r7}
 1865              	.LCFI19:
 1866              		.cfi_def_cfa_offset 4
 1867              		.cfi_offset 7, -4
 1868 0002 00AF     		add	r7, sp, #0
 1869              	.LCFI20:
 1870              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1871              		.loc 1 843 3
 1872 0004 034B     		ldr	r3, .L119
 1873              		.loc 1 843 38
 1874 0006 0122     		movs	r2, #1
 1875 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1876              		.loc 1 844 1
 1877 000a 00BF     		nop
 1878 000c BD46     		mov	sp, r7
 1879              	.LCFI21:
 1880              		.cfi_def_cfa_register 13
 1881              		@ sp needed
 1882 000e 5DF8047B 		ldr	r7, [sp], #4
 1883              	.LCFI22:
 1884              		.cfi_restore 7
 1885              		.cfi_def_cfa_offset 0
 1886 0012 7047     		bx	lr
 1887              	.L120:
 1888              		.align	2
 1889              	.L119:
 1890 0014 4C004742 		.word	1111949388
 1891              		.cfi_endproc
 1892              	.LFE134:
 1894              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1895              		.align	1
 1896              		.global	HAL_RCC_DisableCSS
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	HAL_RCC_DisableCSS:
 1903              	.LFB135:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccVXDFiv.s 			page 50


 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1904              		.loc 1 851 1
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909 0000 80B4     		push	{r7}
 1910              	.LCFI23:
 1911              		.cfi_def_cfa_offset 4
 1912              		.cfi_offset 7, -4
 1913 0002 00AF     		add	r7, sp, #0
 1914              	.LCFI24:
 1915              		.cfi_def_cfa_register 7
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1916              		.loc 1 852 3
 1917 0004 034B     		ldr	r3, .L122
 1918              		.loc 1 852 38
 1919 0006 0022     		movs	r2, #0
 1920 0008 1A60     		str	r2, [r3]
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1921              		.loc 1 853 1
 1922 000a 00BF     		nop
 1923 000c BD46     		mov	sp, r7
 1924              	.LCFI25:
 1925              		.cfi_def_cfa_register 13
 1926              		@ sp needed
 1927 000e 5DF8047B 		ldr	r7, [sp], #4
 1928              	.LCFI26:
 1929              		.cfi_restore 7
 1930              		.cfi_def_cfa_offset 0
 1931 0012 7047     		bx	lr
 1932              	.L123:
 1933              		.align	2
 1934              	.L122:
 1935 0014 4C004742 		.word	1111949388
 1936              		.cfi_endproc
 1937              	.LFE135:
 1939              		.global	__aeabi_uldivmod
 1940              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1941              		.align	1
 1942              		.weak	HAL_RCC_GetSysClockFreq
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv4-sp-d16
 1948              	HAL_RCC_GetSysClockFreq:
 1949              	.LFB136:
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
ARM GAS  /tmp/ccVXDFiv.s 			page 51


 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1950              		.loc 1 886 1
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 64
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 1955              	.LCFI27:
 1956              		.cfi_def_cfa_offset 32
 1957              		.cfi_offset 4, -32
 1958              		.cfi_offset 5, -28
 1959              		.cfi_offset 7, -24
 1960              		.cfi_offset 8, -20
 1961              		.cfi_offset 9, -16
 1962              		.cfi_offset 10, -12
 1963              		.cfi_offset 11, -8
 1964              		.cfi_offset 14, -4
 1965 0004 90B0     		sub	sp, sp, #64
 1966              	.LCFI28:
 1967              		.cfi_def_cfa_offset 96
 1968 0006 00AF     		add	r7, sp, #0
 1969              	.LCFI29:
 1970              		.cfi_def_cfa_register 7
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1971              		.loc 1 887 12
 1972 0008 0023     		movs	r3, #0
 1973 000a 7B63     		str	r3, [r7, #52]
 1974              		.loc 1 887 23
 1975 000c 0023     		movs	r3, #0
 1976 000e FB63     		str	r3, [r7, #60]
 1977              		.loc 1 887 36
 1978 0010 0023     		movs	r3, #0
ARM GAS  /tmp/ccVXDFiv.s 			page 52


 1979 0012 3B63     		str	r3, [r7, #48]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1980              		.loc 1 888 12
 1981 0014 0023     		movs	r3, #0
 1982 0016 BB63     		str	r3, [r7, #56]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1983              		.loc 1 891 14
 1984 0018 594B     		ldr	r3, .L133
 1985 001a 9B68     		ldr	r3, [r3, #8]
 1986              		.loc 1 891 21
 1987 001c 03F00C03 		and	r3, r3, #12
 1988              		.loc 1 891 3
 1989 0020 082B     		cmp	r3, #8
 1990 0022 0DD0     		beq	.L125
 1991 0024 082B     		cmp	r3, #8
 1992 0026 00F2A180 		bhi	.L126
 1993 002a 002B     		cmp	r3, #0
 1994 002c 02D0     		beq	.L127
 1995 002e 042B     		cmp	r3, #4
 1996 0030 03D0     		beq	.L128
 1997 0032 9BE0     		b	.L126
 1998              	.L127:
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1999              		.loc 1 895 20
 2000 0034 534B     		ldr	r3, .L133+4
 2001 0036 BB63     		str	r3, [r7, #56]
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 2002              		.loc 1 896 8
 2003 0038 9BE0     		b	.L129
 2004              	.L128:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 2005              		.loc 1 900 20
 2006 003a 534B     		ldr	r3, .L133+8
 2007 003c BB63     		str	r3, [r7, #56]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2008              		.loc 1 901 7
 2009 003e 98E0     		b	.L129
 2010              	.L125:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 2011              		.loc 1 907 17
 2012 0040 4F4B     		ldr	r3, .L133
 2013 0042 5B68     		ldr	r3, [r3, #4]
 2014              		.loc 1 907 12
 2015 0044 03F03F03 		and	r3, r3, #63
ARM GAS  /tmp/ccVXDFiv.s 			page 53


 2016 0048 7B63     		str	r3, [r7, #52]
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 2017              		.loc 1 908 10
 2018 004a 4D4B     		ldr	r3, .L133
 2019 004c 5B68     		ldr	r3, [r3, #4]
 2020 004e 03F48003 		and	r3, r3, #4194304
 2021              		.loc 1 908 9
 2022 0052 002B     		cmp	r3, #0
 2023 0054 28D0     		beq	.L130
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 2024              		.loc 1 911 72
 2025 0056 4A4B     		ldr	r3, .L133
 2026 0058 5B68     		ldr	r3, [r3, #4]
 2027              		.loc 1 911 102
 2028 005a 9B09     		lsrs	r3, r3, #6
 2029              		.loc 1 911 56
 2030 005c 0022     		movs	r2, #0
 2031 005e 3B62     		str	r3, [r7, #32]
 2032 0060 7A62     		str	r2, [r7, #36]
 2033 0062 3B6A     		ldr	r3, [r7, #32]
 2034 0064 C3F30800 		ubfx	r0, r3, #0, #9
 2035 0068 0021     		movs	r1, #0
 2036              		.loc 1 911 53
 2037 006a 474B     		ldr	r3, .L133+8
 2038 006c 03FB01F2 		mul	r2, r3, r1
 2039 0070 0023     		movs	r3, #0
 2040 0072 00FB03F3 		mul	r3, r0, r3
 2041 0076 1344     		add	r3, r3, r2
 2042 0078 434A     		ldr	r2, .L133+8
 2043 007a A0FB0212 		umull	r1, r2, r0, r2
 2044 007e FA62     		str	r2, [r7, #44]
 2045 0080 0A46     		mov	r2, r1
 2046 0082 BA62     		str	r2, [r7, #40]
 2047 0084 FA6A     		ldr	r2, [r7, #44]
 2048 0086 1344     		add	r3, r3, r2
 2049 0088 FB62     		str	r3, [r7, #44]
 2050              		.loc 1 911 132
 2051 008a 7B6B     		ldr	r3, [r7, #52]
 2052 008c 0022     		movs	r2, #0
 2053 008e BB61     		str	r3, [r7, #24]
 2054 0090 FA61     		str	r2, [r7, #28]
 2055              		.loc 1 911 130
 2056 0092 D7E90623 		ldrd	r2, [r7, #24]
 2057 0096 D7E90A01 		ldrd	r0, [r7, #40]
 2058 009a FFF7FEFF 		bl	__aeabi_uldivmod
 2059 009e 0246     		mov	r2, r0
 2060 00a0 0B46     		mov	r3, r1
 2061              		.loc 1 911 16
 2062 00a2 1346     		mov	r3, r2
 2063 00a4 FB63     		str	r3, [r7, #60]
 2064 00a6 53E0     		b	.L131
 2065              	.L130:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccVXDFiv.s 			page 54


 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 2066              		.loc 1 916 72
 2067 00a8 354B     		ldr	r3, .L133
 2068 00aa 5B68     		ldr	r3, [r3, #4]
 2069              		.loc 1 916 102
 2070 00ac 9B09     		lsrs	r3, r3, #6
 2071              		.loc 1 916 56
 2072 00ae 0022     		movs	r2, #0
 2073 00b0 3B61     		str	r3, [r7, #16]
 2074 00b2 7A61     		str	r2, [r7, #20]
 2075 00b4 3B69     		ldr	r3, [r7, #16]
 2076 00b6 C3F3080A 		ubfx	r10, r3, #0, #9
 2077 00ba 4FF0000B 		mov	fp, #0
 2078              		.loc 1 916 53
 2079 00be 5246     		mov	r2, r10
 2080 00c0 5B46     		mov	r3, fp
 2081 00c2 4FF00000 		mov	r0, #0
 2082 00c6 4FF00001 		mov	r1, #0
 2083 00ca 5901     		lsls	r1, r3, #5
 2084 00cc 41EAD261 		orr	r1, r1, r2, lsr #27
 2085 00d0 5001     		lsls	r0, r2, #5
 2086 00d2 0246     		mov	r2, r0
 2087 00d4 0B46     		mov	r3, r1
 2088 00d6 B2EB0A08 		subs	r8, r2, r10
 2089 00da 63EB0B09 		sbc	r9, r3, fp
 2090 00de 4FF00002 		mov	r2, #0
 2091 00e2 4FF00003 		mov	r3, #0
 2092 00e6 4FEA8913 		lsl	r3, r9, #6
 2093 00ea 43EA9863 		orr	r3, r3, r8, lsr #26
 2094 00ee 4FEA8812 		lsl	r2, r8, #6
 2095 00f2 B2EB0804 		subs	r4, r2, r8
 2096 00f6 63EB0905 		sbc	r5, r3, r9
 2097 00fa 4FF00002 		mov	r2, #0
 2098 00fe 4FF00003 		mov	r3, #0
 2099 0102 EB00     		lsls	r3, r5, #3
 2100 0104 43EA5473 		orr	r3, r3, r4, lsr #29
 2101 0108 E200     		lsls	r2, r4, #3
 2102 010a 1446     		mov	r4, r2
 2103 010c 1D46     		mov	r5, r3
 2104 010e 14EB0A03 		adds	r3, r4, r10
 2105 0112 3B60     		str	r3, [r7]
 2106 0114 45EB0B03 		adc	r3, r5, fp
 2107 0118 7B60     		str	r3, [r7, #4]
 2108 011a 4FF00002 		mov	r2, #0
 2109 011e 4FF00003 		mov	r3, #0
 2110 0122 D7E90045 		ldrd	r4, [r7]
 2111 0126 2946     		mov	r1, r5
 2112 0128 8B02     		lsls	r3, r1, #10
 2113 012a 2146     		mov	r1, r4
 2114 012c 43EA9153 		orr	r3, r3, r1, lsr #22
 2115 0130 2146     		mov	r1, r4
 2116 0132 8A02     		lsls	r2, r1, #10
 2117 0134 1046     		mov	r0, r2
 2118 0136 1946     		mov	r1, r3
 2119              		.loc 1 916 132
 2120 0138 7B6B     		ldr	r3, [r7, #52]
ARM GAS  /tmp/ccVXDFiv.s 			page 55


 2121 013a 0022     		movs	r2, #0
 2122 013c BB60     		str	r3, [r7, #8]
 2123 013e FA60     		str	r2, [r7, #12]
 2124              		.loc 1 916 130
 2125 0140 D7E90223 		ldrd	r2, [r7, #8]
 2126 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 2127 0148 0246     		mov	r2, r0
 2128 014a 0B46     		mov	r3, r1
 2129              		.loc 1 916 16
 2130 014c 1346     		mov	r3, r2
 2131 014e FB63     		str	r3, [r7, #60]
 2132              	.L131:
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 2133              		.loc 1 918 21
 2134 0150 0B4B     		ldr	r3, .L133
 2135 0152 5B68     		ldr	r3, [r3, #4]
 2136              		.loc 1 918 51
 2137 0154 1B0C     		lsrs	r3, r3, #16
 2138 0156 03F00303 		and	r3, r3, #3
 2139              		.loc 1 918 76
 2140 015a 0133     		adds	r3, r3, #1
 2141              		.loc 1 918 12
 2142 015c 5B00     		lsls	r3, r3, #1
 2143 015e 3B63     		str	r3, [r7, #48]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 2144              		.loc 1 920 20
 2145 0160 FA6B     		ldr	r2, [r7, #60]
 2146 0162 3B6B     		ldr	r3, [r7, #48]
 2147 0164 B2FBF3F3 		udiv	r3, r2, r3
 2148 0168 BB63     		str	r3, [r7, #56]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2149              		.loc 1 921 7
 2150 016a 02E0     		b	.L129
 2151              	.L126:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 2152              		.loc 1 925 20
 2153 016c 054B     		ldr	r3, .L133+4
 2154 016e BB63     		str	r3, [r7, #56]
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 2155              		.loc 1 926 7
 2156 0170 00BF     		nop
 2157              	.L129:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 2158              		.loc 1 929 10
 2159 0172 BB6B     		ldr	r3, [r7, #56]
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2160              		.loc 1 930 1
 2161 0174 1846     		mov	r0, r3
 2162 0176 4037     		adds	r7, r7, #64
 2163              	.LCFI30:
ARM GAS  /tmp/ccVXDFiv.s 			page 56


 2164              		.cfi_def_cfa_offset 32
 2165 0178 BD46     		mov	sp, r7
 2166              	.LCFI31:
 2167              		.cfi_def_cfa_register 13
 2168              		@ sp needed
 2169 017a BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 2170              	.L134:
 2171 017e 00BF     		.align	2
 2172              	.L133:
 2173 0180 00380240 		.word	1073887232
 2174 0184 0024F400 		.word	16000000
 2175 0188 40787D01 		.word	25000000
 2176              		.cfi_endproc
 2177              	.LFE136:
 2179              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2180              		.align	1
 2181              		.global	HAL_RCC_GetHCLKFreq
 2182              		.syntax unified
 2183              		.thumb
 2184              		.thumb_func
 2185              		.fpu fpv4-sp-d16
 2187              	HAL_RCC_GetHCLKFreq:
 2188              	.LFB137:
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2189              		.loc 1 942 1
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 1, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
 2194 0000 80B4     		push	{r7}
 2195              	.LCFI32:
 2196              		.cfi_def_cfa_offset 4
 2197              		.cfi_offset 7, -4
 2198 0002 00AF     		add	r7, sp, #0
 2199              	.LCFI33:
 2200              		.cfi_def_cfa_register 7
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 2201              		.loc 1 943 10
 2202 0004 034B     		ldr	r3, .L137
 2203 0006 1B68     		ldr	r3, [r3]
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2204              		.loc 1 944 1
 2205 0008 1846     		mov	r0, r3
 2206 000a BD46     		mov	sp, r7
 2207              	.LCFI34:
 2208              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccVXDFiv.s 			page 57


 2209              		@ sp needed
 2210 000c 5DF8047B 		ldr	r7, [sp], #4
 2211              	.LCFI35:
 2212              		.cfi_restore 7
 2213              		.cfi_def_cfa_offset 0
 2214 0010 7047     		bx	lr
 2215              	.L138:
 2216 0012 00BF     		.align	2
 2217              	.L137:
 2218 0014 00000000 		.word	SystemCoreClock
 2219              		.cfi_endproc
 2220              	.LFE137:
 2222              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2223              		.align	1
 2224              		.global	HAL_RCC_GetPCLK1Freq
 2225              		.syntax unified
 2226              		.thumb
 2227              		.thumb_func
 2228              		.fpu fpv4-sp-d16
 2230              	HAL_RCC_GetPCLK1Freq:
 2231              	.LFB138:
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2232              		.loc 1 953 1
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236 0000 80B5     		push	{r7, lr}
 2237              	.LCFI36:
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 7, -8
 2240              		.cfi_offset 14, -4
 2241 0002 00AF     		add	r7, sp, #0
 2242              	.LCFI37:
 2243              		.cfi_def_cfa_register 7
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 2244              		.loc 1 955 11
 2245 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2246 0008 0246     		mov	r2, r0
 2247              		.loc 1 955 54
 2248 000a 054B     		ldr	r3, .L141
 2249 000c 9B68     		ldr	r3, [r3, #8]
 2250              		.loc 1 955 78
 2251 000e 9B0A     		lsrs	r3, r3, #10
 2252 0010 03F00703 		and	r3, r3, #7
 2253              		.loc 1 955 49
 2254 0014 0349     		ldr	r1, .L141+4
 2255 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2256              		.loc 1 955 33
ARM GAS  /tmp/ccVXDFiv.s 			page 58


 2257 0018 22FA03F3 		lsr	r3, r2, r3
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2258              		.loc 1 956 1
 2259 001c 1846     		mov	r0, r3
 2260 001e 80BD     		pop	{r7, pc}
 2261              	.L142:
 2262              		.align	2
 2263              	.L141:
 2264 0020 00380240 		.word	1073887232
 2265 0024 00000000 		.word	APBPrescTable
 2266              		.cfi_endproc
 2267              	.LFE138:
 2269              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2270              		.align	1
 2271              		.global	HAL_RCC_GetPCLK2Freq
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2275              		.fpu fpv4-sp-d16
 2277              	HAL_RCC_GetPCLK2Freq:
 2278              	.LFB139:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2279              		.loc 1 965 1
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 1, uses_anonymous_args = 0
 2283 0000 80B5     		push	{r7, lr}
 2284              	.LCFI38:
 2285              		.cfi_def_cfa_offset 8
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 00AF     		add	r7, sp, #0
 2289              	.LCFI39:
 2290              		.cfi_def_cfa_register 7
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 2291              		.loc 1 967 11
 2292 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2293 0008 0246     		mov	r2, r0
 2294              		.loc 1 967 53
 2295 000a 054B     		ldr	r3, .L145
 2296 000c 9B68     		ldr	r3, [r3, #8]
 2297              		.loc 1 967 77
 2298 000e 5B0B     		lsrs	r3, r3, #13
 2299 0010 03F00703 		and	r3, r3, #7
 2300              		.loc 1 967 48
 2301 0014 0349     		ldr	r1, .L145+4
 2302 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2303              		.loc 1 967 32
ARM GAS  /tmp/ccVXDFiv.s 			page 59


 2304 0018 22FA03F3 		lsr	r3, r2, r3
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2305              		.loc 1 968 1
 2306 001c 1846     		mov	r0, r3
 2307 001e 80BD     		pop	{r7, pc}
 2308              	.L146:
 2309              		.align	2
 2310              	.L145:
 2311 0020 00380240 		.word	1073887232
 2312 0024 00000000 		.word	APBPrescTable
 2313              		.cfi_endproc
 2314              	.LFE139:
 2316              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2317              		.align	1
 2318              		.weak	HAL_RCC_GetOscConfig
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
 2322              		.fpu fpv4-sp-d16
 2324              	HAL_RCC_GetOscConfig:
 2325              	.LFB140:
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2326              		.loc 1 978 1
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 8
 2329              		@ frame_needed = 1, uses_anonymous_args = 0
 2330              		@ link register save eliminated.
 2331 0000 80B4     		push	{r7}
 2332              	.LCFI40:
 2333              		.cfi_def_cfa_offset 4
 2334              		.cfi_offset 7, -4
 2335 0002 83B0     		sub	sp, sp, #12
 2336              	.LCFI41:
 2337              		.cfi_def_cfa_offset 16
 2338 0004 00AF     		add	r7, sp, #0
 2339              	.LCFI42:
 2340              		.cfi_def_cfa_register 7
 2341 0006 7860     		str	r0, [r7, #4]
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2342              		.loc 1 980 37
 2343 0008 7B68     		ldr	r3, [r7, #4]
 2344 000a 0F22     		movs	r2, #15
 2345 000c 1A60     		str	r2, [r3]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2346              		.loc 1 983 10
ARM GAS  /tmp/ccVXDFiv.s 			page 60


 2347 000e 454B     		ldr	r3, .L160
 2348 0010 1B68     		ldr	r3, [r3]
 2349              		.loc 1 983 15
 2350 0012 03F48023 		and	r3, r3, #262144
 2351              		.loc 1 983 5
 2352 0016 B3F5802F 		cmp	r3, #262144
 2353 001a 04D1     		bne	.L148
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2354              		.loc 1 985 33
 2355 001c 7B68     		ldr	r3, [r7, #4]
 2356 001e 4FF4A022 		mov	r2, #327680
 2357 0022 5A60     		str	r2, [r3, #4]
 2358 0024 0EE0     		b	.L149
 2359              	.L148:
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2360              		.loc 1 987 15
 2361 0026 3F4B     		ldr	r3, .L160
 2362 0028 1B68     		ldr	r3, [r3]
 2363              		.loc 1 987 20
 2364 002a 03F48033 		and	r3, r3, #65536
 2365              		.loc 1 987 10
 2366 002e B3F5803F 		cmp	r3, #65536
 2367 0032 04D1     		bne	.L150
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2368              		.loc 1 989 33
 2369 0034 7B68     		ldr	r3, [r7, #4]
 2370 0036 4FF48032 		mov	r2, #65536
 2371 003a 5A60     		str	r2, [r3, #4]
 2372 003c 02E0     		b	.L149
 2373              	.L150:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2374              		.loc 1 993 33
 2375 003e 7B68     		ldr	r3, [r7, #4]
 2376 0040 0022     		movs	r2, #0
 2377 0042 5A60     		str	r2, [r3, #4]
 2378              	.L149:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2379              		.loc 1 997 10
 2380 0044 374B     		ldr	r3, .L160
 2381 0046 1B68     		ldr	r3, [r3]
 2382              		.loc 1 997 15
 2383 0048 03F00103 		and	r3, r3, #1
 2384              		.loc 1 997 5
 2385 004c 012B     		cmp	r3, #1
 2386 004e 03D1     		bne	.L151
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2387              		.loc 1 999 33
ARM GAS  /tmp/ccVXDFiv.s 			page 61


 2388 0050 7B68     		ldr	r3, [r7, #4]
 2389 0052 0122     		movs	r2, #1
 2390 0054 DA60     		str	r2, [r3, #12]
 2391 0056 02E0     		b	.L152
 2392              	.L151:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2393              		.loc 1 1003 33
 2394 0058 7B68     		ldr	r3, [r7, #4]
 2395 005a 0022     		movs	r2, #0
 2396 005c DA60     		str	r2, [r3, #12]
 2397              	.L152:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 2398              		.loc 1 1006 59
 2399 005e 314B     		ldr	r3, .L160
 2400 0060 1B68     		ldr	r3, [r3]
 2401              		.loc 1 1006 44
 2402 0062 DB08     		lsrs	r3, r3, #3
 2403 0064 03F01F02 		and	r2, r3, #31
 2404              		.loc 1 1006 42
 2405 0068 7B68     		ldr	r3, [r7, #4]
 2406 006a 1A61     		str	r2, [r3, #16]
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2407              		.loc 1 1009 10
 2408 006c 2D4B     		ldr	r3, .L160
 2409 006e 1B6F     		ldr	r3, [r3, #112]
 2410              		.loc 1 1009 17
 2411 0070 03F00403 		and	r3, r3, #4
 2412              		.loc 1 1009 5
 2413 0074 042B     		cmp	r3, #4
 2414 0076 03D1     		bne	.L153
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2415              		.loc 1 1011 33
 2416 0078 7B68     		ldr	r3, [r7, #4]
 2417 007a 0522     		movs	r2, #5
 2418 007c 9A60     		str	r2, [r3, #8]
 2419 007e 0CE0     		b	.L154
 2420              	.L153:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2421              		.loc 1 1013 15
 2422 0080 284B     		ldr	r3, .L160
 2423 0082 1B6F     		ldr	r3, [r3, #112]
 2424              		.loc 1 1013 22
 2425 0084 03F00103 		and	r3, r3, #1
 2426              		.loc 1 1013 10
 2427 0088 012B     		cmp	r3, #1
 2428 008a 03D1     		bne	.L155
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
ARM GAS  /tmp/ccVXDFiv.s 			page 62


 2429              		.loc 1 1015 33
 2430 008c 7B68     		ldr	r3, [r7, #4]
 2431 008e 0122     		movs	r2, #1
 2432 0090 9A60     		str	r2, [r3, #8]
 2433 0092 02E0     		b	.L154
 2434              	.L155:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2435              		.loc 1 1019 33
 2436 0094 7B68     		ldr	r3, [r7, #4]
 2437 0096 0022     		movs	r2, #0
 2438 0098 9A60     		str	r2, [r3, #8]
 2439              	.L154:
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2440              		.loc 1 1023 10
 2441 009a 224B     		ldr	r3, .L160
 2442 009c 5B6F     		ldr	r3, [r3, #116]
 2443              		.loc 1 1023 16
 2444 009e 03F00103 		and	r3, r3, #1
 2445              		.loc 1 1023 5
 2446 00a2 012B     		cmp	r3, #1
 2447 00a4 03D1     		bne	.L156
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2448              		.loc 1 1025 33
 2449 00a6 7B68     		ldr	r3, [r7, #4]
 2450 00a8 0122     		movs	r2, #1
 2451 00aa 5A61     		str	r2, [r3, #20]
 2452 00ac 02E0     		b	.L157
 2453              	.L156:
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2454              		.loc 1 1029 33
 2455 00ae 7B68     		ldr	r3, [r7, #4]
 2456 00b0 0022     		movs	r2, #0
 2457 00b2 5A61     		str	r2, [r3, #20]
 2458              	.L157:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2459              		.loc 1 1033 10
 2460 00b4 1B4B     		ldr	r3, .L160
 2461 00b6 1B68     		ldr	r3, [r3]
 2462              		.loc 1 1033 15
 2463 00b8 03F08073 		and	r3, r3, #16777216
 2464              		.loc 1 1033 5
 2465 00bc B3F1807F 		cmp	r3, #16777216
 2466 00c0 03D1     		bne	.L158
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccVXDFiv.s 			page 63


1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2467              		.loc 1 1035 37
 2468 00c2 7B68     		ldr	r3, [r7, #4]
 2469 00c4 0222     		movs	r2, #2
 2470 00c6 9A61     		str	r2, [r3, #24]
 2471 00c8 02E0     		b	.L159
 2472              	.L158:
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2473              		.loc 1 1039 37
 2474 00ca 7B68     		ldr	r3, [r7, #4]
 2475 00cc 0122     		movs	r2, #1
 2476 00ce 9A61     		str	r2, [r3, #24]
 2477              	.L159:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2478              		.loc 1 1041 52
 2479 00d0 144B     		ldr	r3, .L160
 2480 00d2 5B68     		ldr	r3, [r3, #4]
 2481              		.loc 1 1041 38
 2482 00d4 03F48002 		and	r2, r3, #4194304
 2483              		.loc 1 1041 36
 2484 00d8 7B68     		ldr	r3, [r7, #4]
 2485 00da DA61     		str	r2, [r3, #28]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2486              		.loc 1 1042 47
 2487 00dc 114B     		ldr	r3, .L160
 2488 00de 5B68     		ldr	r3, [r3, #4]
 2489              		.loc 1 1042 33
 2490 00e0 03F03F02 		and	r2, r3, #63
 2491              		.loc 1 1042 31
 2492 00e4 7B68     		ldr	r3, [r7, #4]
 2493 00e6 1A62     		str	r2, [r3, #32]
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2494              		.loc 1 1043 48
 2495 00e8 0E4B     		ldr	r3, .L160
 2496 00ea 5B68     		ldr	r3, [r3, #4]
 2497              		.loc 1 1043 33
 2498 00ec 9B09     		lsrs	r3, r3, #6
 2499 00ee C3F30802 		ubfx	r2, r3, #0, #9
 2500              		.loc 1 1043 31
 2501 00f2 7B68     		ldr	r3, [r7, #4]
 2502 00f4 5A62     		str	r2, [r3, #36]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2503              		.loc 1 1044 50
 2504 00f6 0B4B     		ldr	r3, .L160
 2505 00f8 5B68     		ldr	r3, [r3, #4]
 2506              		.loc 1 1044 60
 2507 00fa 03F44033 		and	r3, r3, #196608
 2508              		.loc 1 1044 80
 2509 00fe 03F58033 		add	r3, r3, #65536
 2510              		.loc 1 1044 102
 2511 0102 5B00     		lsls	r3, r3, #1
 2512              		.loc 1 1044 33
 2513 0104 1A0C     		lsrs	r2, r3, #16
ARM GAS  /tmp/ccVXDFiv.s 			page 64


 2514              		.loc 1 1044 31
 2515 0106 7B68     		ldr	r3, [r7, #4]
 2516 0108 9A62     		str	r2, [r3, #40]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2517              		.loc 1 1045 48
 2518 010a 064B     		ldr	r3, .L160
 2519 010c 5B68     		ldr	r3, [r3, #4]
 2520              		.loc 1 1045 33
 2521 010e 1B0E     		lsrs	r3, r3, #24
 2522 0110 03F00F02 		and	r2, r3, #15
 2523              		.loc 1 1045 31
 2524 0114 7B68     		ldr	r3, [r7, #4]
 2525 0116 DA62     		str	r2, [r3, #44]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2526              		.loc 1 1046 1
 2527 0118 00BF     		nop
 2528 011a 0C37     		adds	r7, r7, #12
 2529              	.LCFI43:
 2530              		.cfi_def_cfa_offset 4
 2531 011c BD46     		mov	sp, r7
 2532              	.LCFI44:
 2533              		.cfi_def_cfa_register 13
 2534              		@ sp needed
 2535 011e 5DF8047B 		ldr	r7, [sp], #4
 2536              	.LCFI45:
 2537              		.cfi_restore 7
 2538              		.cfi_def_cfa_offset 0
 2539 0122 7047     		bx	lr
 2540              	.L161:
 2541              		.align	2
 2542              	.L160:
 2543 0124 00380240 		.word	1073887232
 2544              		.cfi_endproc
 2545              	.LFE140:
 2547              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2548              		.align	1
 2549              		.global	HAL_RCC_GetClockConfig
 2550              		.syntax unified
 2551              		.thumb
 2552              		.thumb_func
 2553              		.fpu fpv4-sp-d16
 2555              	HAL_RCC_GetClockConfig:
 2556              	.LFB141:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2557              		.loc 1 1057 1
 2558              		.cfi_startproc
 2559              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccVXDFiv.s 			page 65


 2560              		@ frame_needed = 1, uses_anonymous_args = 0
 2561              		@ link register save eliminated.
 2562 0000 80B4     		push	{r7}
 2563              	.LCFI46:
 2564              		.cfi_def_cfa_offset 4
 2565              		.cfi_offset 7, -4
 2566 0002 83B0     		sub	sp, sp, #12
 2567              	.LCFI47:
 2568              		.cfi_def_cfa_offset 16
 2569 0004 00AF     		add	r7, sp, #0
 2570              	.LCFI48:
 2571              		.cfi_def_cfa_register 7
 2572 0006 7860     		str	r0, [r7, #4]
 2573 0008 3960     		str	r1, [r7]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2574              		.loc 1 1059 32
 2575 000a 7B68     		ldr	r3, [r7, #4]
 2576 000c 0F22     		movs	r2, #15
 2577 000e 1A60     		str	r2, [r3]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2578              		.loc 1 1062 51
 2579 0010 124B     		ldr	r3, .L163
 2580 0012 9B68     		ldr	r3, [r3, #8]
 2581              		.loc 1 1062 37
 2582 0014 03F00302 		and	r2, r3, #3
 2583              		.loc 1 1062 35
 2584 0018 7B68     		ldr	r3, [r7, #4]
 2585 001a 5A60     		str	r2, [r3, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2586              		.loc 1 1065 52
 2587 001c 0F4B     		ldr	r3, .L163
 2588 001e 9B68     		ldr	r3, [r3, #8]
 2589              		.loc 1 1065 38
 2590 0020 03F0F002 		and	r2, r3, #240
 2591              		.loc 1 1065 36
 2592 0024 7B68     		ldr	r3, [r7, #4]
 2593 0026 9A60     		str	r2, [r3, #8]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2594              		.loc 1 1068 53
 2595 0028 0C4B     		ldr	r3, .L163
 2596 002a 9B68     		ldr	r3, [r3, #8]
 2597              		.loc 1 1068 39
 2598 002c 03F4E052 		and	r2, r3, #7168
 2599              		.loc 1 1068 37
 2600 0030 7B68     		ldr	r3, [r7, #4]
 2601 0032 DA60     		str	r2, [r3, #12]
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2602              		.loc 1 1071 54
ARM GAS  /tmp/ccVXDFiv.s 			page 66


 2603 0034 094B     		ldr	r3, .L163
 2604 0036 9B68     		ldr	r3, [r3, #8]
 2605              		.loc 1 1071 39
 2606 0038 DB08     		lsrs	r3, r3, #3
 2607 003a 03F4E052 		and	r2, r3, #7168
 2608              		.loc 1 1071 37
 2609 003e 7B68     		ldr	r3, [r7, #4]
 2610 0040 1A61     		str	r2, [r3, #16]
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2611              		.loc 1 1074 32
 2612 0042 074B     		ldr	r3, .L163+4
 2613 0044 1B68     		ldr	r3, [r3]
 2614              		.loc 1 1074 16
 2615 0046 03F00702 		and	r2, r3, #7
 2616              		.loc 1 1074 14
 2617 004a 3B68     		ldr	r3, [r7]
 2618 004c 1A60     		str	r2, [r3]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2619              		.loc 1 1075 1
 2620 004e 00BF     		nop
 2621 0050 0C37     		adds	r7, r7, #12
 2622              	.LCFI49:
 2623              		.cfi_def_cfa_offset 4
 2624 0052 BD46     		mov	sp, r7
 2625              	.LCFI50:
 2626              		.cfi_def_cfa_register 13
 2627              		@ sp needed
 2628 0054 5DF8047B 		ldr	r7, [sp], #4
 2629              	.LCFI51:
 2630              		.cfi_restore 7
 2631              		.cfi_def_cfa_offset 0
 2632 0058 7047     		bx	lr
 2633              	.L164:
 2634 005a 00BF     		.align	2
 2635              	.L163:
 2636 005c 00380240 		.word	1073887232
 2637 0060 003C0240 		.word	1073888256
 2638              		.cfi_endproc
 2639              	.LFE141:
 2641              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2642              		.align	1
 2643              		.global	HAL_RCC_NMI_IRQHandler
 2644              		.syntax unified
 2645              		.thumb
 2646              		.thumb_func
 2647              		.fpu fpv4-sp-d16
 2649              	HAL_RCC_NMI_IRQHandler:
 2650              	.LFB142:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
ARM GAS  /tmp/ccVXDFiv.s 			page 67


1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2651              		.loc 1 1083 1
 2652              		.cfi_startproc
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 1, uses_anonymous_args = 0
 2655 0000 80B5     		push	{r7, lr}
 2656              	.LCFI52:
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 7, -8
 2659              		.cfi_offset 14, -4
 2660 0002 00AF     		add	r7, sp, #0
 2661              	.LCFI53:
 2662              		.cfi_def_cfa_register 7
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2663              		.loc 1 1085 6
 2664 0004 064B     		ldr	r3, .L168
 2665 0006 DB68     		ldr	r3, [r3, #12]
 2666 0008 03F08003 		and	r3, r3, #128
 2667              		.loc 1 1085 5
 2668 000c 802B     		cmp	r3, #128
 2669 000e 04D1     		bne	.L167
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2670              		.loc 1 1088 5
 2671 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2672              		.loc 1 1091 5
 2673 0014 034B     		ldr	r3, .L168+4
 2674 0016 8022     		movs	r2, #128
 2675 0018 1A70     		strb	r2, [r3]
 2676              	.L167:
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2677              		.loc 1 1093 1
 2678 001a 00BF     		nop
 2679 001c 80BD     		pop	{r7, pc}
 2680              	.L169:
 2681 001e 00BF     		.align	2
 2682              	.L168:
 2683 0020 00380240 		.word	1073887232
 2684 0024 0E380240 		.word	1073887246
 2685              		.cfi_endproc
 2686              	.LFE142:
 2688              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2689              		.align	1
 2690              		.weak	HAL_RCC_CSSCallback
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu fpv4-sp-d16
 2696              	HAL_RCC_CSSCallback:
 2697              	.LFB143:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccVXDFiv.s 			page 68


1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2698              		.loc 1 1100 1
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 1, uses_anonymous_args = 0
 2702              		@ link register save eliminated.
 2703 0000 80B4     		push	{r7}
 2704              	.LCFI54:
 2705              		.cfi_def_cfa_offset 4
 2706              		.cfi_offset 7, -4
 2707 0002 00AF     		add	r7, sp, #0
 2708              	.LCFI55:
 2709              		.cfi_def_cfa_register 7
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2710              		.loc 1 1104 1
 2711 0004 00BF     		nop
 2712 0006 BD46     		mov	sp, r7
 2713              	.LCFI56:
 2714              		.cfi_def_cfa_register 13
 2715              		@ sp needed
 2716 0008 5DF8047B 		ldr	r7, [sp], #4
 2717              	.LCFI57:
 2718              		.cfi_restore 7
 2719              		.cfi_def_cfa_offset 0
 2720 000c 7047     		bx	lr
 2721              		.cfi_endproc
 2722              	.LFE143:
 2724              		.text
 2725              	.Letext0:
 2726              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2727              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2728              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2729              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2730              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2731              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2732              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2733              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2734              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccVXDFiv.s 			page 69


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccVXDFiv.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccVXDFiv.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccVXDFiv.s:58     .rodata:0000000000000000 $d
     /tmp/ccVXDFiv.s:63     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccVXDFiv.s:70     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccVXDFiv.s:488    .text.HAL_RCC_OscConfig:000000000000027c $d
     /tmp/ccVXDFiv.s:494    .text.HAL_RCC_OscConfig:000000000000028c $t
     /tmp/ccVXDFiv.s:744    .text.HAL_RCC_OscConfig:0000000000000418 $d
     /tmp/ccVXDFiv.s:750    .text.HAL_RCC_OscConfig:0000000000000428 $t
     /tmp/ccVXDFiv.s:1104   .text.HAL_RCC_OscConfig:0000000000000644 $d
     /tmp/ccVXDFiv.s:1111   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccVXDFiv.s:1118   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccVXDFiv.s:1475   .text.HAL_RCC_ClockConfig:0000000000000218 $d
     /tmp/ccVXDFiv.s:1480   .text.HAL_RCC_ClockConfig:0000000000000224 $t
     /tmp/ccVXDFiv.s:1948   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccVXDFiv.s:1614   .text.HAL_RCC_ClockConfig:0000000000000308 $d
     /tmp/ccVXDFiv.s:1623   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccVXDFiv.s:1630   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccVXDFiv.s:1842   .text.HAL_RCC_MCOConfig:0000000000000158 $d
     /tmp/ccVXDFiv.s:1850   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccVXDFiv.s:1857   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccVXDFiv.s:1890   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccVXDFiv.s:1895   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccVXDFiv.s:1902   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccVXDFiv.s:1935   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccVXDFiv.s:1941   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccVXDFiv.s:2173   .text.HAL_RCC_GetSysClockFreq:0000000000000180 $d
     /tmp/ccVXDFiv.s:2180   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccVXDFiv.s:2187   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccVXDFiv.s:2218   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccVXDFiv.s:2223   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccVXDFiv.s:2230   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccVXDFiv.s:2264   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccVXDFiv.s:2270   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccVXDFiv.s:2277   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccVXDFiv.s:2311   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccVXDFiv.s:2317   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccVXDFiv.s:2324   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccVXDFiv.s:2543   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccVXDFiv.s:2548   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccVXDFiv.s:2555   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccVXDFiv.s:2636   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccVXDFiv.s:2642   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccVXDFiv.s:2649   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccVXDFiv.s:2696   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccVXDFiv.s:2683   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccVXDFiv.s:2689   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
ARM GAS  /tmp/ccVXDFiv.s 			page 70


HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
